<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/01/18/java%E4%B8%AD%E7%BA%A7/"/>
      <url>/2023/01/18/java%E4%B8%AD%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="java中级"><a href="#java中级" class="headerlink" title="java中级"></a>java中级</h1><h2 id="Objecet类详解"><a href="#Objecet类详解" class="headerlink" title="Objecet类详解"></a>Objecet类详解</h2><blockquote><p>在lang包下</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115211212564.png" alt="image-20230115211212564"></p><h3 id="1-方法摘要"><a href="#1-方法摘要" class="headerlink" title="1. 方法摘要"></a>1. 方法摘要</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115211336015.png" alt="image-20230115211336015"></p><h4 id="1-1-equals方法-面试题"><a href="#1-1-equals方法-面试题" class="headerlink" title="1.1 equals方法(面试题)"></a>1.1 equals方法(面试题)</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115211448519.png" alt="image-20230115211448519"></p><h5 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h5><h6 id="1-1-1-x3D-x3D-（可以判断基本数据类型、引用数据类型"><a href="#1-1-1-x3D-x3D-（可以判断基本数据类型、引用数据类型" class="headerlink" title="1.1.1  &#x3D;&#x3D; （可以判断基本数据类型、引用数据类型)"></a>1.1.1  &#x3D;&#x3D; （可以判断<code>基本</code>数据类型、<code>引用</code>数据类型)</h6><p>是一个比较运算符</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115211654769.png" alt="image-20230115211654769"></p><h6 id="如果判断引用类型，判断的是地址是否相等，即判定是不是同一个对象"><a href="#如果判断引用类型，判断的是地址是否相等，即判定是不是同一个对象" class="headerlink" title="如果判断引用类型，判断的是地址是否相等，即判定是不是同一个对象"></a>如果判断引用类型，判断的是地址是否相等，即判定是不是同一个对象</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115212020141.png" alt="image-20230115212020141"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115212055719.png" alt="image-20230115212055719"></p><h6 id="编译类型不一致"><a href="#编译类型不一致" class="headerlink" title="编译类型不一致"></a>编译类型不一致</h6><blockquote><p>虽然编译类型不一致，但是指向的空间一致</p></blockquote><p>A类B类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115212219621.png" alt="image-20230115212219621"></p><p>main方法</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115212333113.png" alt="image-20230115212333113"></p><blockquote><p>判断基本数据类型是否相等</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115212719013.png" alt="image-20230115212719013"></p><h6 id="1-1-2-equals-是Objects类中的方法，只能判断引用类型"><a href="#1-1-2-equals-是Objects类中的方法，只能判断引用类型" class="headerlink" title="1.1.2 equals:是Objects类中的方法，只能判断引用类型"></a>1.1.2 equals:是Objects类中的方法，只能判断引用类型</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115212625229.png" alt="image-20230115212625229"></p><h6 id="1-1-3-x3D-x3D-查看源码-x3D-x3D-导入jdk源码"><a href="#1-1-3-x3D-x3D-查看源码-x3D-x3D-导入jdk源码" class="headerlink" title="1.1.3 &#x3D;&#x3D;查看源码&#x3D;&#x3D; (导入jdk源码)"></a>1.1.3 &#x3D;&#x3D;查看源码&#x3D;&#x3D; (导入jdk源码)</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115212824266.png" alt="image-20230115212824266"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115212943012.png" alt="image-20230115212943012"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115213020840.png" alt="image-20230115213020840"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115213228677.png" alt="image-20230115213228677"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115213639070.png" alt="image-20230115213639070"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117125800220.png" alt="image-20230117125800220"></p><h6 id="点击structure看所有方法和属性"><a href="#点击structure看所有方法和属性" class="headerlink" title="点击structure看所有方法和属性"></a>点击structure看所有方法和属性</h6><h6 id="1-1-4-equals-是Object类中的方法，只能判断引用类型"><a href="#1-1-4-equals-是Object类中的方法，只能判断引用类型" class="headerlink" title="1.1.4 equals: 是Object类中的方法，只能判断引用类型"></a>1.1.4 equals: 是Object类中的方法，只能判断引用类型</h6><h6 id="1-1-5默认判断的是地址是否相等，子类中往往重写该方法，用于判断内容是否相等。比如Integer-String"><a href="#1-1-5默认判断的是地址是否相等，子类中往往重写该方法，用于判断内容是否相等。比如Integer-String" class="headerlink" title="1.1.5默认判断的是地址是否相等，子类中往往重写该方法，用于判断内容是否相等。比如Integer,String"></a>1.1.5默认判断的是地址是否相等，子类中往往重写该方法，用于判断内容是否相等。比如Integer,String</h6><h6 id="String类的-equals方法"><a href="#String类的-equals方法" class="headerlink" title="String类的 equals方法"></a>String类的 equals方法</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117130259330.png" alt="image-20230117130259330"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117130714386.png" alt="image-20230117130714386"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117130737672.png" alt="image-20230117130737672"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117131331601.png" alt="image-20230117131331601"></p><h6 id="Object的equals"><a href="#Object的equals" class="headerlink" title="Object的equals"></a>Object的equals</h6><blockquote><p>判断地址</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117130947706.png" alt="image-20230117130947706"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117131132712.png" alt="image-20230117131132712"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117131231800.png" alt="image-20230117131231800"></p><h6 id="Integer"><a href="#Integer" class="headerlink" title="Integer"></a>Integer</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117131756899.png" alt="image-20230117131756899"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117132031153.png" alt="image-20230117132031153"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117132147578.png" alt="image-20230117132147578"></p><h4 id="1-1-2-重写equals方法"><a href="#1-1-2-重写equals方法" class="headerlink" title="1.1.2 重写equals方法"></a>1.1.2 重写equals方法</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117132448365.png" alt="image-20230117132448365"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117132749753.png" alt="image-20230117132749753"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117132835838.png" alt="image-20230117132835838"></p><h5 id="重写equals方法"><a href="#重写equals方法" class="headerlink" title="重写equals方法"></a>重写equals方法</h5><h6 id="this"><a href="#this" class="headerlink" title="this"></a>this</h6><blockquote><p>调用方法时person指向谁 ，this就指向谁</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117133131397.png" alt="image-20230117133131397"></p><h6 id="类型是Person才开始比较"><a href="#类型是Person才开始比较" class="headerlink" title="类型是Person才开始比较"></a>类型是Person才开始比较</h6><h2 id="x3D-x3D-零钱通项目-x3D-x3D"><a href="#x3D-x3D-零钱通项目-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;零钱通项目&#x3D;&#x3D;"></a>&#x3D;&#x3D;零钱通项目&#x3D;&#x3D;</h2><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230116124008710.png" alt="image-20230116124008710"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230116124032223.png" alt="image-20230116124032223"></p><h3 id="1-思路"><a href="#1-思路" class="headerlink" title="1.思路"></a>1.思路</h3><h4 id="先完成显示菜单，并可以选择"><a href="#先完成显示菜单，并可以选择" class="headerlink" title="先完成显示菜单，并可以选择"></a>先完成显示菜单，并可以选择</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230116131302939.png" alt="image-20230116131302939"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230116142207603.png" alt="image-20230116142207603"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230116142255868.png" alt="image-20230116142255868"></p><h3 id="x3D-x3D-优化-x3D-x3D"><a href="#x3D-x3D-优化-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;优化&#x3D;&#x3D;"></a>&#x3D;&#x3D;优化&#x3D;&#x3D;</h3><h4 id="退出确认"><a href="#退出确认" class="headerlink" title="退出确认"></a>退出确认</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230116152504793.png" alt="image-20230116152504793"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230116152529141.png" alt="image-20230116152529141"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230116152610922.png" alt="image-20230116152610922"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230116152718043.png" alt="image-20230116152718043"></p><h4 id="x3D-x3D-编程思想-x3D-x3D"><a href="#x3D-x3D-编程思想-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;编程思想&#x3D;&#x3D;"></a>&#x3D;&#x3D;编程思想&#x3D;&#x3D;</h4><p>上面部分</p><blockquote><p>必须接收y和n</p></blockquote><p>下面部分</p><blockquote><p>如果是y退出系统</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117103317868.png" alt="image-20230117103317868"></p><h4 id="x3D-x3D-金额校验-x3D-x3D"><a href="#x3D-x3D-金额校验-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;金额校验&#x3D;&#x3D;"></a>&#x3D;&#x3D;金额校验&#x3D;&#x3D;</h4><h5 id="x3D-x3D-我出不正确的金额条件，然后给出提示，就直接break-x3D-x3D"><a href="#x3D-x3D-我出不正确的金额条件，然后给出提示，就直接break-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;我出不正确的金额条件，然后给出提示，就直接break&#x3D;&#x3D;"></a>&#x3D;&#x3D;我出不正确的金额条件，然后给出提示，就直接break&#x3D;&#x3D;</h5><blockquote><p>判断如果过不去打道回府</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230116161443216.png" alt="image-20230116161443216"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230116161519446.png" alt="image-20230116161519446"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230116161636326.png" alt="image-20230116161636326"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117094206602.png" alt="image-20230117094206602"></p><h3 id="源码–独立"><a href="#源码–独立" class="headerlink" title="源码–独立"></a>源码–独立</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu_2.small_change_sys;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2023年1月17日</span></span><br><span class="line"><span class="comment"> * 零钱通项目,练习*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SmallChangeSys</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    1.完成基本页面，和功能</span></span><br><span class="line"><span class="comment">//         2. 完成零钱通明细基本</span></span><br><span class="line"><span class="comment">//          3. 完成收益入账功能</span></span><br><span class="line"><span class="comment">//    4. 完成字符串拼接</span></span><br><span class="line"><span class="comment">//    5.完成消费</span></span><br><span class="line"><span class="comment">//    6.用户输入4退出时，给出提示&quot;你确定要退出吗？y/n&quot;,</span></span><br><span class="line"><span class="comment">//    7.金额校验</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        1.完成基本页面，和功能</span></span><br><span class="line"><span class="comment">//          定义相关变量</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">loop</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;<span class="comment">//接收输入的选择</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//         2. 完成零钱通明细基本</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">detail</span> <span class="operator">=</span> <span class="string">&quot;----------------零钱通明细----------------&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        3. 完成收益入账功能</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">balance</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="literal">null</span>;<span class="comment">//获取当前时间</span></span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(</span><br><span class="line">                <span class="string">&quot;yyyy-MM-dd HH:mm&quot;</span></span><br><span class="line">        );<span class="comment">//格式化日期</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//    5.完成消费</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">note</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;\n----------------零钱通菜单----------------&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t1 零钱通明细&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t2 收益入账&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t3 消费&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t4 退     出&quot;</span>);</span><br><span class="line"></span><br><span class="line">            System.out.print(<span class="string">&quot;请选择(1-4):&quot;</span>);</span><br><span class="line"><span class="comment">//            接收输入的值</span></span><br><span class="line">            key = scanner.next();</span><br><span class="line"><span class="comment">//            判断进入系统</span></span><br><span class="line">            <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:</span><br><span class="line"></span><br><span class="line">                    System.out.println(detail);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;2&quot;</span>:</span><br><span class="line">                    System.out.print(<span class="string">&quot;收益入账:&quot;</span>);</span><br><span class="line">                    money = scanner.nextDouble();</span><br><span class="line"><span class="comment">//                    验证收益金额</span></span><br><span class="line">                    <span class="keyword">if</span> (money &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;收益入账金额需要大于0&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    balance += money;</span><br><span class="line"><span class="comment">//                    4. 完成字符串拼接</span></span><br><span class="line">                    date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">                    detail += <span class="string">&quot;\n收益入账\t+&quot;</span> + money + <span class="string">&quot;\t&quot;</span> +</span><br><span class="line">                            sdf.format(date) + <span class="string">&quot;\t余额：&quot;</span> + balance;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;3&quot;</span>:</span><br><span class="line"><span class="comment">//                  5.完成消费</span></span><br><span class="line">                    System.out.print(<span class="string">&quot;消费金额：&quot;</span>);</span><br><span class="line">                    money = scanner.nextDouble();</span><br><span class="line"><span class="comment">//                    验证消费金额</span></span><br><span class="line">                    <span class="keyword">if</span> (money &gt; balance || money &lt;  <span class="number">0</span>) &#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;你的消费金额应该在0-&quot;</span> + balance);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    balance -= money;</span><br><span class="line">                    System.out.print(<span class="string">&quot;消费内容：&quot;</span>);</span><br><span class="line">                    note = scanner.next();</span><br><span class="line">                    date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">                    detail += <span class="string">&quot;\n&quot;</span> + note + <span class="string">&quot;\t-&quot;</span> + money + <span class="string">&quot;\t&quot;</span> +</span><br><span class="line">                            sdf.format(date) + <span class="string">&quot;\t余额：&quot;</span> + balance;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;4&quot;</span>:</span><br><span class="line">                    <span class="type">String</span> <span class="variable">choice</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">while</span> (<span class="literal">true</span>) &#123; <span class="comment">//如果不是yn就一直循环</span></span><br><span class="line">                        System.out.println(<span class="string">&quot;你确定要退出么？y/n&quot;</span>);</span><br><span class="line">                        choice = scanner.next();</span><br><span class="line"><span class="comment">//                        接收y或n就回到主页面</span></span><br><span class="line">                        <span class="keyword">if</span> (<span class="string">&quot;y&quot;</span>.equals(choice) || <span class="string">&quot;n&quot;</span>.equals(choice)) &#123; <span class="comment">//必须接收y或n</span></span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="comment">//                    如果是y就退出系统</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="string">&quot;y&quot;</span>.equals(choice)) &#123;</span><br><span class="line">                        loop = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;您的输入有误~&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">while</span> (loop);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;您已退出系统~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="源码-–改版"><a href="#源码-–改版" class="headerlink" title="源码 –改版"></a>源码 –改版</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu_2.small_change_sys;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2023年1月16日</span></span><br><span class="line"><span class="comment"> * 练习零钱通系统*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SmallChangeSys</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    化繁为简</span></span><br><span class="line"><span class="comment">//    1.完成框架</span></span><br><span class="line"><span class="comment">//    2.完成零钱通明细</span></span><br><span class="line"><span class="comment">//    3.完成收益入账</span></span><br><span class="line"><span class="comment">//    4.消费</span></span><br><span class="line"><span class="comment">//    5.退出</span></span><br><span class="line"><span class="comment">//          用户输入4退出时，给出提示&quot;你确定要退出吗？y/&quot;,</span></span><br><span class="line"><span class="comment">//          必须输入正确的y/n,否则循环输入指令，直到输入y或者n。</span></span><br><span class="line"><span class="comment">//    6.校验金额</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        1.完成框架</span></span><br><span class="line"><span class="comment">//        定义相关的变量</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">loop</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        2.完成零钱通明细</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">detail</span> <span class="operator">=</span> <span class="string">&quot;=============零钱通明细=============&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        3.完成收益入账，完成功能驱动程序员增加新的变化和代码</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">balance</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="literal">null</span>; <span class="comment">//表示日期</span></span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;YYYY-MM-dd HH:mm&quot;</span>);<span class="comment">//日期格式化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        4.消费</span></span><br><span class="line"><span class="comment">//        定义新变量，保存消费的原因</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">note</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;\n=================零钱通菜单=================&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t 1 零钱通明细&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t 2 收益入账&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t 3 消费&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t 4 退出&quot;</span>);</span><br><span class="line"></span><br><span class="line">            System.out.print(<span class="string">&quot;请选择1-4：&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//            判断进入系统</span></span><br><span class="line">            key = scanner.next();</span><br><span class="line">            <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:</span><br><span class="line">                    System.out.println(detail);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;2&quot;</span>:</span><br><span class="line">                    System.out.print(<span class="string">&quot;收益入账:&quot;</span>);</span><br><span class="line">                    money = scanner.nextDouble();</span><br><span class="line"><span class="comment">//                    金钱校验</span></span><br><span class="line"><span class="comment">//                    找出不正确的金额条件，然后给出提示，就直接break</span></span><br><span class="line">                    <span class="keyword">if</span> (money &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;收益入账金额需要大于0&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="comment">//                    完成字符串拼接</span></span><br><span class="line">                    balance += money;</span><br><span class="line">                    date = <span class="keyword">new</span> <span class="title class_">Date</span>(); <span class="comment">//获取当前日期</span></span><br><span class="line">                    detail += <span class="string">&quot;\n收益入账:&quot;</span> + <span class="string">&quot;+&quot;</span> + money + <span class="string">&quot;\t&quot;</span> + sdf.format(date) +</span><br><span class="line">                            <span class="string">&quot;\t余额:&quot;</span> + balance;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;3&quot;</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;请输入消费的money:&quot;</span>);</span><br><span class="line">                    money = scanner.nextDouble();</span><br><span class="line"><span class="comment">//                    money的值的范围应该校验 -&gt; 一会校验</span></span><br><span class="line">                    <span class="keyword">if</span> (money &lt;= <span class="number">0</span> || money &gt; balance) &#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;你的消费金额应该在0-&quot;</span> + balance);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    balance -= money;</span><br><span class="line">                    System.out.println(<span class="string">&quot;请输入消费内容&quot;</span>);</span><br><span class="line">                    note = scanner.next();</span><br><span class="line">                    date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">                    detail += <span class="string">&quot;\n&quot;</span> + note + <span class="string">&quot;\t-&quot;</span> + money + <span class="string">&quot;\t&quot;</span> + sdf.format(date) +</span><br><span class="line">                            <span class="string">&quot;\t余额:&quot;</span> + balance;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;4&quot;</span>:</span><br><span class="line"><span class="comment">//                    退出确认</span></span><br><span class="line">                    <span class="type">String</span> <span class="variable">choice</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">while</span> (<span class="literal">true</span>) &#123; <span class="comment">//如果不是yn就一直循环</span></span><br><span class="line">                        System.out.println(<span class="string">&quot;你确定要退出么？y/n&quot;</span>);</span><br><span class="line">                        choice = scanner.next();</span><br><span class="line"><span class="comment">//                        接收y或n就回到主页面</span></span><br><span class="line">                        <span class="keyword">if</span> (<span class="string">&quot;y&quot;</span>.equals(choice) || <span class="string">&quot;n&quot;</span>.equals(choice)) &#123; <span class="comment">//必须接收y或n</span></span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="comment">//                    如果是y就退出系统</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="string">&quot;y&quot;</span>.equals(choice)) &#123;</span><br><span class="line">                        loop = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;您的输入有误~&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">while</span> (loop);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;你退出零钱通项目~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="oop-版"><a href="#oop-版" class="headerlink" title="(oop)版"></a>(oop)版</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117105509164.png" alt="image-20230117105509164"></p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117105830029.png" alt="image-20230117105830029"></p><h5 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h5><blockquote><p>main中的所有局部变量    </p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117110040792.png" alt="image-20230117110040792"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117105954425.png" alt="image-20230117105954425"></p><h5 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117110152761.png" alt="image-20230117110152761"></p><h6 id="return-退出方法，不在执行后面的语句"><a href="#return-退出方法，不在执行后面的语句" class="headerlink" title="return 退出方法，不在执行后面的语句"></a>return 退出方法，不在执行后面的语句</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117110305706.png" alt="image-20230117110305706"></p><h6 id="消费"><a href="#消费" class="headerlink" title="消费"></a>消费</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117110400657.png" alt="image-20230117110400657"></p><h6 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h6><blockquote><p>全部赋值</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117110449774.png" alt="image-20230117110449774"></p><h6 id="把方法融入主菜单"><a href="#把方法融入主菜单" class="headerlink" title="把方法融入主菜单"></a>把方法融入主菜单</h6><blockquote><p>把整个方法复制过去</p><p>case哪个调用哪个</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117110634330.png" alt="image-20230117110634330"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117110742917.png" alt="image-20230117110742917"></p><h6 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117110838539.png" alt="image-20230117110838539"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230117111003319.png" alt="image-20230117111003319"></p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><h5 id="SmallChangeSysOOP"><a href="#SmallChangeSysOOP" class="headerlink" title="SmallChangeSysOOP"></a>SmallChangeSysOOP</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu_2.small_change_sys.oop;</span><br><span class="line"><span class="comment">/*2023年1月17日</span></span><br><span class="line"><span class="comment"> * 练习零钱通OOP版*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该类主要完成零钱通各个功能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    1.完成主菜单功能 mainMenu()</span></span><br><span class="line"><span class="comment">//    2.完成零钱通明细方法</span></span><br><span class="line"><span class="comment">//    3.完成收益入账方法</span></span><br><span class="line"><span class="comment">//    4.完成消费方法</span></span><br><span class="line"><span class="comment">//    5.退出  校验</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SmallChangeSysOOP</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    1.完成主菜单功能 mainMenu()</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">loop</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    String key;</span><br><span class="line"><span class="comment">//    2.完成零钱通明细方法</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">detail</span> <span class="operator">=</span> <span class="string">&quot;---------------零钱通明细---------------&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    3.完成收益入账方法</span></span><br><span class="line">    <span class="type">double</span> money;</span><br><span class="line">    <span class="type">double</span> balance;</span><br><span class="line">    Date date;</span><br><span class="line">    <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm&quot;</span>);<span class="comment">//格式化</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//    4.完成消费方法</span></span><br><span class="line">    String note;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    5.退出  校验</span></span><br><span class="line">    String choice;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    1.完成主菜单功能 mainMenu()</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mainMenu</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;\n---------------零钱通菜单---------------&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;1 零钱通明细&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;2 收益入账&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;3 消费&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;4 退    出&quot;</span>);</span><br><span class="line"></span><br><span class="line">            System.out.print(<span class="string">&quot;请选择(1-4):&quot;</span>);</span><br><span class="line"><span class="comment">//            接收输入的值</span></span><br><span class="line">            key = scanner.next();</span><br><span class="line">            <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:</span><br><span class="line">                    <span class="built_in">this</span>.detail();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;2&quot;</span>:</span><br><span class="line">                    <span class="built_in">this</span>.income();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;3&quot;</span>:</span><br><span class="line">                    <span class="built_in">this</span>.pay();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;4&quot;</span>:</span><br><span class="line">                    <span class="built_in">this</span>.exit();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;您的输入有误~&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span> (loop);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;您已退出零钱通项目~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    2.完成零钱通明细方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">detail</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(detail);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    3.完成收益入账方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">income</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;收益金额：&quot;</span>);</span><br><span class="line">        money = scanner.nextDouble();</span><br><span class="line"><span class="comment">//        判断金额 -&gt;一会完成</span></span><br><span class="line">        <span class="keyword">if</span> (money &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;收益金额应大于0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        balance += money;</span><br><span class="line"><span class="comment">//        日期</span></span><br><span class="line">        date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="comment">//       拼接明细字符串</span></span><br><span class="line">        detail += <span class="string">&quot;\n收益入账&quot;</span> + <span class="string">&quot;\t+&quot;</span> + money + <span class="string">&quot;\t&quot;</span> + sdf.format(date) +</span><br><span class="line">            <span class="string">&quot;\t余额：&quot;</span> + balance;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    4.完成消费方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pay</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入消费金额:&quot;</span>);</span><br><span class="line">        money = scanner.nextDouble();</span><br><span class="line"><span class="comment">//        验证消费 -》一会完成</span></span><br><span class="line">        <span class="keyword">if</span> (money &lt; <span class="number">0</span> || balance &lt; money) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;消费金额应为0-&quot;</span> + balance);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入消费用途:&quot;</span>);</span><br><span class="line">        note = scanner.next();</span><br><span class="line">        balance -= money;</span><br><span class="line"><span class="comment">//        日期</span></span><br><span class="line">        date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="comment">//       拼接明细字符串</span></span><br><span class="line">        detail += <span class="string">&quot;\n&quot;</span>+ note + <span class="string">&quot;\t-&quot;</span> + money + <span class="string">&quot;\t&quot;</span> + sdf.format(date) +</span><br><span class="line">                <span class="string">&quot;\t余额：&quot;</span> + balance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    5.完成退出方法，并且校验</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">exit</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123; <span class="comment">//接收不到y/n就循环</span></span><br><span class="line">            System.out.println(<span class="string">&quot;你确定要退出么？y/n&quot;</span>);</span><br><span class="line">            choice = scanner.next();</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;y&quot;</span>.equals(choice) || <span class="string">&quot;n&quot;</span>.equals(choice)) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        是y就退出</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;y&quot;</span>.equals(choice)) &#123;</span><br><span class="line">            loop = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="SmallChangeSysApp"><a href="#SmallChangeSysApp" class="headerlink" title="SmallChangeSysApp"></a>SmallChangeSysApp</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu_2.small_change_sys.oop;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该类主要完成测试</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SmallChangeSysApp</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">SmallChangeSysOOP</span>().mainMenu();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/01/18/Java1/"/>
      <url>/2023/01/18/Java1/</url>
      
        <content type="html"><![CDATA[<h3 id="文档注释"><a href="#文档注释" class="headerlink" title="文档注释"></a>文档注释</h3><p>&#x2F;**</p><p>@</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219114523917.png" alt="image-20221219114523917"></p><h2 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h2><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221210090530105.png" alt="image-20221210090530105"></p><h2 id="java特点"><a href="#java特点" class="headerlink" title="java特点"></a>java特点</h2><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219104926983.png" alt="image-20221219104926983"></p><h3 id="跨平台"><a href="#跨平台" class="headerlink" title="跨平台"></a>跨平台</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219105116071.png" alt="image-20221219105116071"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219105252394.png" alt="image-20221219105252394"></p><h3 id="jdk"><a href="#jdk" class="headerlink" title="jdk"></a>jdk</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219105741601.png" alt="image-20221219105741601"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219105958743.png" alt="image-20221219105958743"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219110244096.png" alt="image-20221219110244096"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219110522444.png" alt="image-20221219110522444"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219110705181.png" alt="image-20221219110705181"></p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219111623581.png" alt="image-20221219111623581"></p><h4 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219112044456.png" alt="image-20221219112044456"></p><h3 id="如何学习"><a href="#如何学习" class="headerlink" title="如何学习"></a>如何学习</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219113032864.png" alt="image-20221219113032864"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219113408026.png" alt="image-20221219113408026"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219113635702.png" alt="image-20221219113635702"></p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219115724187.png" alt="image-20221219115724187"></p><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219121653084.png" alt="image-20221219121653084"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219121624324.png" alt="image-20221219121624324"></p><h3 id="细节-1"><a href="#细节-1" class="headerlink" title="细节"></a>细节</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219121925306.png" alt="image-20221219121925306"></p><h3 id="＋号运算"><a href="#＋号运算" class="headerlink" title="＋号运算"></a>＋号运算</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219122353538.png" alt="image-20221219122353538"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219122525421.png" alt="image-20221219122525421"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219122547020.png" alt="image-20221219122547020"></p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219122736853.png" alt="image-20221219122736853"></p><h3 id="1-整形"><a href="#1-整形" class="headerlink" title="1. 整形"></a>1. 整形</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219141641380.png" alt="image-20221219141641380"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219141847206.png" alt="image-20221219141847206"></p><h4 id="细节-2"><a href="#细节-2" class="headerlink" title="细节"></a>细节</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219142245727.png" alt="image-20221219142245727"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219142507393.png" alt="image-20221219142507393"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219142828257.png" alt="image-20221219142828257"></p><h3 id="2-浮点数"><a href="#2-浮点数" class="headerlink" title="2. 浮点数"></a>2. 浮点数</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219142931169.png" alt="image-20221219142931169"></p><h4 id="细节-3"><a href="#细节-3" class="headerlink" title="细节"></a>细节</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219143338845.png" alt="image-20221219143338845"></p><h5 id="double-num4-x3D-1-1f-x2F-x2F-对"><a href="#double-num4-x3D-1-1f-x2F-x2F-对" class="headerlink" title="double num4 &#x3D; 1.1f; &#x2F;&#x2F;对"></a>double num4 &#x3D; 1.1f; &#x2F;&#x2F;对</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219143443089.png" alt="image-20221219143443089"></p><h5 id="科学计数法"><a href="#科学计数法" class="headerlink" title="科学计数法"></a>科学计数法</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219143712350.png" alt="image-20221219143712350"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219143928327.png" alt="image-20221219143928327"></p><h4 id="陷阱"><a href="#陷阱" class="headerlink" title="陷阱"></a>陷阱</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219144128904.png" alt="image-20221219144128904"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219144141277.png" alt="image-20221219144141277"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219144305508.png" alt="image-20221219144305508"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219144632183.png" alt="image-20221219144632183"></p><h4 id="Math-abs"><a href="#Math-abs" class="headerlink" title="Math.abs()"></a>Math.abs()</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219144803786.png" alt="image-20221219144803786"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219144836536.png" alt="image-20221219144836536"></p><h4 id="两个小数相等"><a href="#两个小数相等" class="headerlink" title="两个小数相等"></a>两个小数相等</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219144941024.png" alt="image-20221219144941024"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219145206965.png" alt="image-20221219145206965"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219145345920.png" alt="image-20221219145345920"></p><h3 id="3-字符型"><a href="#3-字符型" class="headerlink" title="3. 字符型"></a>3. 字符型</h3><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219150755578.png" alt="image-20221219150755578"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219150851280.png" alt="image-20221219150851280"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219151116113.png" alt="image-20221219151116113"></p><h4 id="2-细节"><a href="#2-细节" class="headerlink" title="2. 细节"></a>2. 细节</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219151159881.png" alt="image-20221219151159881"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219173133433.png" alt="image-20221219173133433"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219173320568.png" alt="image-20221219173320568"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.char_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharDetail</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//在java中，char的本质是一个整数，在输出时，是unicode码对应的字符</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="number">97</span>;</span><br><span class="line">        System.out.println(c1);</span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        System.out.println((<span class="type">int</span>) c2);</span><br><span class="line">        System.out.println((<span class="type">int</span>) c1);</span><br><span class="line">        <span class="type">char</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="string">&#x27;韩&#x27;</span>;</span><br><span class="line">        System.out.println((<span class="type">int</span>) c3);</span><br><span class="line">        <span class="type">char</span> <span class="variable">c4</span> <span class="operator">=</span> <span class="number">38889</span>;</span><br><span class="line">        System.out.println(c4);</span><br><span class="line">        System.out.println(<span class="string">&#x27;a&#x27;</span> + <span class="number">10</span>); <span class="comment">//107</span></span><br><span class="line">        System.out.println((<span class="type">char</span>) (<span class="string">&#x27;a&#x27;</span> + <span class="number">10</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-字符类型本质"><a href="#3-字符类型本质" class="headerlink" title="3. 字符类型本质"></a>3. 字符类型本质</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219173952278.png" alt="image-20221219173952278"></p><h4 id="4-编码"><a href="#4-编码" class="headerlink" title="4. 编码"></a>4. 编码</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219174726730.png" alt="image-20221219174726730"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219174744731.png" alt="image-20221219174744731"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219174909240.png" alt="image-20221219174909240"></p><h3 id="4-布尔类型"><a href="#4-布尔类型" class="headerlink" title="4. 布尔类型"></a>4. 布尔类型</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219175054287.png" alt="image-20221219175054287"></p><h4 id="细节-只能是true和FALSE"><a href="#细节-只能是true和FALSE" class="headerlink" title="细节(只能是true和FALSE)"></a>细节(只能是true和FALSE)</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219175403155.png" alt="image-20221219175403155"></p><h3 id="5-基本数据类型转换-–AutoConvert"><a href="#5-基本数据类型转换-–AutoConvert" class="headerlink" title="5. 基本数据类型转换 –AutoConvert"></a>5. 基本数据类型转换 –AutoConvert</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219175618133.png" alt="image-20221219175618133"></p><h4 id="char和int可以自动转换"><a href="#char和int可以自动转换" class="headerlink" title="char和int可以自动转换"></a>char和int可以自动转换</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219180113404.png" alt="image-20221219180113404"></p><h4 id="细节-4"><a href="#细节-4" class="headerlink" title="细节"></a>细节</h4><h5 id="有多种类型的数据混合运算时，系统首先自动将所有数据转换成容量最大的那种数据类型"><a href="#有多种类型的数据混合运算时，系统首先自动将所有数据转换成容量最大的那种数据类型" class="headerlink" title="有多种类型的数据混合运算时，系统首先自动将所有数据转换成容量最大的那种数据类型"></a>有多种类型的数据混合运算时，系统首先自动将所有数据转换成容量最大的那种数据类型</h5><h5 id="然后再进行计算"><a href="#然后再进行计算" class="headerlink" title="然后再进行计算"></a>然后再进行计算</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219180832945.png" alt="image-20221219180832945"></p><h5 id="当我们把精度（容量）大的数据类型赋值给精度（容量）小的数据类型时就会报错，反之就会进行自动类型转换。"><a href="#当我们把精度（容量）大的数据类型赋值给精度（容量）小的数据类型时就会报错，反之就会进行自动类型转换。" class="headerlink" title="当我们把精度（容量）大的数据类型赋值给精度（容量）小的数据类型时就会报错，反之就会进行自动类型转换。"></a>当我们把精度（容量）大的数据类型赋值给精度（容量）小的数据类型时就会报错，反之就会进行自动类型转换。</h5><h5 id="byte-short和char之间不会相互自动转换"><a href="#byte-short和char之间不会相互自动转换" class="headerlink" title="byte,short和char之间不会相互自动转换"></a>byte,short和char之间不会相互自动转换</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219181106182.png" alt="image-20221219181106182"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219183443380.png" alt="image-20221219183443380"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219183621737.png" alt="image-20221219183621737"></p><h5 id="byte-short-char他们三者可以计算，在计算时首先转换为int类型"><a href="#byte-short-char他们三者可以计算，在计算时首先转换为int类型" class="headerlink" title="byte,short,char他们三者可以计算，在计算时首先转换为int类型"></a>byte,short,char他们三者可以计算，在计算时首先转换为int类型</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219184022071.png" alt="image-20221219184022071"></p><h5 id="boolean不参与转换"><a href="#boolean不参与转换" class="headerlink" title="boolean不参与转换"></a>boolean不参与转换</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219184345405.png" alt="image-20221219184345405"></p><h5 id="自动提升原则：表达式结果的类型自动提升为操作数中最大的类型"><a href="#自动提升原则：表达式结果的类型自动提升为操作数中最大的类型" class="headerlink" title="自动提升原则：表达式结果的类型自动提升为操作数中最大的类型"></a>自动提升原则：表达式结果的类型自动提升为操作数中最大的类型</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219184734188.png" alt="image-20221219184734188"></p><h3 id="6-强制类型转换"><a href="#6-强制类型转换" class="headerlink" title="6. 强制类型转换"></a>6. 强制类型转换</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219184942424.png" alt="image-20221219184942424"></p><h4 id="造成溢出"><a href="#造成溢出" class="headerlink" title="造成溢出"></a>造成溢出</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219190207944.png" alt="image-20221219190207944"></p><h4 id="细节-5"><a href="#细节-5" class="headerlink" title="细节"></a>细节</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219190303815.png" alt="image-20221219190303815"></p><h5 id="强转符号只针对于最近的操作数有效，往往会使用小括号提升优先级"><a href="#强转符号只针对于最近的操作数有效，往往会使用小括号提升优先级" class="headerlink" title="强转符号只针对于最近的操作数有效，往往会使用小括号提升优先级"></a>强转符号只针对于最近的操作数有效，往往会使用小括号提升优先级</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219190604195.png" alt="image-20221219190604195"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219190706389.png" alt="image-20221219190706389"></p><h5 id="char类型可以保存int的常量值，但不能保存int的变量值，需要强转"><a href="#char类型可以保存int的常量值，但不能保存int的变量值，需要强转" class="headerlink" title="char类型可以保存int的常量值，但不能保存int的变量值，需要强转"></a>char类型可以保存int的常量值，但不能保存int的变量值，需要强转</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219191145466.png" alt="image-20221219191145466"></p><h5 id="byte和short-char类型在进行运算时，当做int类型处理"><a href="#byte和short-char类型在进行运算时，当做int类型处理" class="headerlink" title="byte和short,char类型在进行运算时，当做int类型处理"></a>byte和short,char类型在进行运算时，当做int类型处理</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219191403342.png" alt="image-20221219191403342"></p><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219191555854.png" alt="image-20221219191555854"></p><h3 id="7-基本数据类型和String类型的转换"><a href="#7-基本数据类型和String类型的转换" class="headerlink" title="7. 基本数据类型和String类型的转换"></a>7. 基本数据类型和String类型的转换</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219192438774.png" alt="image-20221219192438774"></p><h4 id="基本数据类型转字符串"><a href="#基本数据类型转字符串" class="headerlink" title="基本数据类型转字符串"></a>基本数据类型转字符串</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219192824664.png" alt="image-20221219192824664"></p><h4 id="String-转基本数据类型"><a href="#String-转基本数据类型" class="headerlink" title="String 转基本数据类型"></a>String 转基本数据类型</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219194830896.png" alt="image-20221219194830896"></p><h4 id="把字符串转成字符char"><a href="#把字符串转成字符char" class="headerlink" title="把字符串转成字符char"></a>把字符串转成字符char</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219195820849.png" alt="image-20221219195820849"></p><h4 id="细节-6"><a href="#细节-6" class="headerlink" title="细节"></a>细节</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219195952595.png" alt="image-20221219195952595"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219200130296.png" alt="image-20221219200130296"></p><h3 id="8-作业"><a href="#8-作业" class="headerlink" title="8. 作业"></a>8. 作业</h3><h4 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219200549384.png" alt="image-20221219200549384"></p><h4 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219200747388.png" alt="image-20221219200747388"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219200805496.png" alt="image-20221219200805496"></p><h4 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219201416047.png" alt="image-20221219201416047"></p><h4 id="4-制表位"><a href="#4-制表位" class="headerlink" title="4. 制表位"></a>4. 制表位</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219201516633.png" alt="image-20221219201516633"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219203445441.png" alt="image-20221219203445441"></p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219204135274.png" alt="image-20221219204135274"></p><h3 id="1-算术运算符-–ArithmeticOperator"><a href="#1-算术运算符-–ArithmeticOperator" class="headerlink" title="1. 算术运算符 –ArithmeticOperator"></a>1. 算术运算符 –ArithmeticOperator</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219204227643.png" alt="image-20221219204227643"></p><h4 id="1-1-演示"><a href="#1-1-演示" class="headerlink" title="1.1 演示"></a>1.1 演示</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219204420871.png" alt="image-20221219204420871"></p><h5 id="double-d-x3D-10-x2F-4-2-0"><a href="#double-d-x3D-10-x2F-4-2-0" class="headerlink" title="double d &#x3D; 10 &#x2F; 4  (2.0)"></a>double d &#x3D; 10 &#x2F; 4  (2.0)</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219204930241.png" alt="image-20221219204930241"></p><h5 id="x3D-x3D-System-out-println-10-3-x2F-x2F-1-x3D-x3D"><a href="#x3D-x3D-System-out-println-10-3-x2F-x2F-1-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;System.out.println(-10 % 3);&#x2F;&#x2F;-1&#x3D;&#x3D;"></a>&#x3D;&#x3D;System.out.println(-10 % 3);&#x2F;&#x2F;-1&#x3D;&#x3D;</h5><p>System.out.println(10 % -3);&#x2F;&#x2F;1</p><h4 id="2-取余"><a href="#2-取余" class="headerlink" title="2. 取余"></a>2. 取余</h4><p>正负号号看前面的</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220100847160.png" alt="image-20221220100847160"></p><h4 id="3-自增"><a href="#3-自增" class="headerlink" title="3. 自增"></a>3. 自增</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220122552400.png" alt="image-20221220122552400"></p><h5 id="j"><a href="#j" class="headerlink" title="j++"></a>j++</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220122742339.png" alt="image-20221220122742339"></p><h4 id="x3D-x3D-面试题-x3D-x3D"><a href="#x3D-x3D-面试题-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;面试题&#x3D;&#x3D;"></a>&#x3D;&#x3D;面试题&#x3D;&#x3D;</h4><h5 id="x3D-x3D-1-x3D-x3D"><a href="#x3D-x3D-1-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;1.&#x3D;&#x3D;"></a>&#x3D;&#x3D;1.&#x3D;&#x3D;</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220123459283.png" alt="image-20221220123459283"></p><h5 id="x3D-x3D-2-x3D-x3D"><a href="#x3D-x3D-2-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;2.&#x3D;&#x3D;"></a>&#x3D;&#x3D;2.&#x3D;&#x3D;</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220123706782.png" alt="image-20221220123706782"></p><h5 id="3-1"><a href="#3-1" class="headerlink" title="3."></a>3.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220124108783.png" alt="image-20221220124108783"></p><h5 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220125310644.png" alt="image-20221220125310644"></p><h6 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h6><ol><li></li></ol><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220125524051.png" alt="image-20221220125524051"></p><ol start="2"><li></li></ol><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220125846107.png" alt="image-20221220125846107"></p><h6 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h6><ol><li></li></ol><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220125635919.png" alt="image-20221220125635919"></p><ol start="2"><li></li></ol><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220130237536.png" alt="image-20221220130237536"></p><h3 id="2-关系运算符-–RelationalOperator"><a href="#2-关系运算符-–RelationalOperator" class="headerlink" title="2. 关系运算符 –RelationalOperator"></a>2. 关系运算符 –RelationalOperator</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220130452692.png" alt="image-20221220130452692"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220130606737.png" alt="image-20221220130606737"></p><h4 id="可以把关系运算的值赋给布尔类型"><a href="#可以把关系运算的值赋给布尔类型" class="headerlink" title="可以把关系运算的值赋给布尔类型"></a>可以把关系运算的值赋给布尔类型</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220131304853.png" alt="image-20221220131304853"></p><h4 id="细节-7"><a href="#细节-7" class="headerlink" title="细节"></a>细节</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220131938803.png" alt="image-20221220131938803"></p><h3 id="3-逻辑运算符-–LogicOperator02"><a href="#3-逻辑运算符-–LogicOperator02" class="headerlink" title="3. 逻辑运算符 –LogicOperator02"></a>3. 逻辑运算符 –LogicOperator02</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220132013214.png" alt="image-20221220132013214"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220132039882.png" alt="image-20221220132039882"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220132706206.png" alt="image-20221220132706206"></p><h4 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220132435499.png" alt="image-20221220132435499"></p><h4 id="amp-amp-和-amp"><a href="#amp-amp-和-amp" class="headerlink" title="&amp;&amp; 和 &amp;"></a>&amp;&amp; 和 &amp;</h4><p>&amp; 前面FALSE后面不会判断，</p><p>&amp;&amp;前面FALSE后面都会判断</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221220132921738.png" alt="image-20221220132921738"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221151228456.png" alt="image-20221221151228456"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221151400893.png" alt="image-20221221151400893"></p><h4 id="和"><a href="#和" class="headerlink" title="|| 和 |"></a>|| 和 |</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221151624057.png" alt="image-20221221151624057"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221152150745.png" alt="image-20221221152150745"></p><h4 id="取反-–InverseOperator"><a href="#取反-–InverseOperator" class="headerlink" title="取反 –InverseOperator"></a>取反 –InverseOperator</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221152523214.png" alt="image-20221221152523214"></p><h4 id="逻辑异或"><a href="#逻辑异或" class="headerlink" title="逻辑异或"></a>逻辑异或</h4><p>a^b：叫逻辑异或，当a和b不同时，则结果为true,否则为False</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221152827529.png" alt="image-20221221152827529"></p><h4 id="x3D-x3D-练习-x3D-x3D"><a href="#x3D-x3D-练习-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;练习&#x3D;&#x3D;"></a>&#x3D;&#x3D;练习&#x3D;&#x3D;</h4><blockquote><p>x++ &#x3D;&#x3D; 6 </p><p>先比较在自增</p><p>++u &#x3D;&#x3D; 6</p><p>先自增在比较</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221153348579.png" alt="image-20221221153348579"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221153924161.png" alt="image-20221221153924161"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221154413119.png" alt="image-20221221154413119"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221154711540.png" alt="image-20221221154711540"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221203251568.png" alt="image-20221221203251568"></p><h3 id="4-赋值运算符-–AssignOperator"><a href="#4-赋值运算符-–AssignOperator" class="headerlink" title="4. 赋值运算符 –AssignOperator"></a>4. 赋值运算符 –AssignOperator</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221203450051.png" alt="image-20221221203450051"></p><h4 id="复合赋值运算符会进行类型转换"><a href="#复合赋值运算符会进行类型转换" class="headerlink" title="复合赋值运算符会进行类型转换"></a><code>复合赋值运算符会进行类型转换</code></h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221204043544.png" alt="image-20221221204043544"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221204156957.png" alt="image-20221221204156957"></p><p>直接写会报错</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221204112577.png" alt="image-20221221204112577"></p><h3 id="5-三元运算符-–TernaryOperator"><a href="#5-三元运算符-–TernaryOperator" class="headerlink" title="5. 三元运算符 –TernaryOperator"></a>5. 三元运算符 –TernaryOperator</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221204254015.png" alt="image-20221221204254015"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221204536486.png" alt="image-20221221204536486"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221204949584.png" alt="image-20221221204949584"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221205122054.png" alt="image-20221221205122054"></p><h4 id="细节-8"><a href="#细节-8" class="headerlink" title="细节"></a>细节</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221205150573.png" alt="image-20221221205150573"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221205305993.png" alt="image-20221221205305993"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221205451325.png" alt="image-20221221205451325"></p><h5 id="强转"><a href="#强转" class="headerlink" title="强转"></a>强转</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221205608634.png" alt="image-20221221205608634"></p><h5 id="double可以"><a href="#double可以" class="headerlink" title="double可以"></a>double可以</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221205642732.png" alt="image-20221221205642732"></p><h5 id="可以转换if–else"><a href="#可以转换if–else" class="headerlink" title="可以转换if–else"></a>可以转换if–else</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221205827172.png" alt="image-20221221205827172"></p><h4 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h4><h5 id="三个数最大值（推荐使用上面方法）"><a href="#三个数最大值（推荐使用上面方法）" class="headerlink" title="三个数最大值（推荐使用上面方法）"></a>三个数最大值（推荐使用上面方法）</h5><h6 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221210238671.png" alt="image-20221221210238671"></p><h6 id="一条语句"><a href="#一条语句" class="headerlink" title="一条语句"></a>一条语句</h6><h3 id="6-运算符优先级"><a href="#6-运算符优先级" class="headerlink" title="6. 运算符优先级"></a>6. 运算符优先级</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221212503156.png" alt="image-20221221212503156"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221212847317.png" alt="image-20221221212847317"></p><h3 id="7-位运算"><a href="#7-位运算" class="headerlink" title="7. 位运算"></a>7. 位运算</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223141618352.png" alt="image-20221223141618352"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223133943553.png" alt="image-20221223133943553"></p><h4 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221215514655.png" alt="image-20221221215514655"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221215951296.png" alt="image-20221221215951296"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221220428629.png" alt="image-20221221220428629"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221220522809.png" alt="image-20221221220522809"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221220713642.png" alt="image-20221221220713642"></p><h5 id="二进制转十进制"><a href="#二进制转十进制" class="headerlink" title="二进制转十进制"></a>二进制转十进制</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221220858999.png" alt="image-20221221220858999"></p><h5 id="八进制转十进制"><a href="#八进制转十进制" class="headerlink" title="八进制转十进制"></a>八进制转十进制</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221221101306.png" alt="image-20221221221101306"></p><h5 id="十六进制转换成十进制"><a href="#十六进制转换成十进制" class="headerlink" title="十六进制转换成十进制"></a>十六进制转换成十进制</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221221752316.png" alt="image-20221221221752316"></p><h5 id="十进制转二进制"><a href="#十进制转二进制" class="headerlink" title="十进制转二进制"></a>十进制转二进制</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221222724856.png" alt="image-20221221222724856"></p><h5 id="十进制转换成八进制"><a href="#十进制转换成八进制" class="headerlink" title="十进制转换成八进制"></a>十进制转换成八进制</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221222833622.png" alt="image-20221221222833622"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223094535239.png" alt="image-20221223094535239"></p><h5 id="十进制转十六进制"><a href="#十进制转十六进制" class="headerlink" title="十进制转十六进制"></a>十进制转十六进制</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223094700465.png" alt="image-20221223094700465"></p><h5 id="练习-2"><a href="#练习-2" class="headerlink" title="练习"></a>练习</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223095813687.png" alt="image-20221223095813687"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223095822887.png" alt="image-20221223095822887"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223100008679.png" alt="image-20221223100008679"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223100858478.png" alt="image-20221223100858478"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223100846241.png" alt="image-20221223100846241"></p><h5 id="二级制转换成八进制"><a href="#二级制转换成八进制" class="headerlink" title="二级制转换成八进制"></a>二级制转换成八进制</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223101106058.png" alt="image-20221223101106058"></p><h5 id="二进制转换为十六位"><a href="#二进制转换为十六位" class="headerlink" title="二进制转换为十六位"></a>二进制转换为十六位</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223101749988.png" alt="image-20221223101749988"></p><h5 id="练习-3"><a href="#练习-3" class="headerlink" title="练习"></a>练习</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223102055906.png" alt="image-20221223102055906"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223102050978.png" alt="image-20221223102050978"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223102214654.png" alt="image-20221223102214654"></p><h5 id="八进制转换成二进制"><a href="#八进制转换成二进制" class="headerlink" title="八进制转换成二进制"></a>八进制转换成二进制</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223132742895.png" alt="image-20221223132742895"></p><h5 id="十六进制转换成二进制"><a href="#十六进制转换成二进制" class="headerlink" title="十六进制转换成二进制"></a>十六进制转换成二进制</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223133426303.png" alt="image-20221223133426303"></p><h5 id="练习-4"><a href="#练习-4" class="headerlink" title="练习"></a>练习</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223133615448.png" alt="image-20221223133615448"></p><h4 id="x3D-x3D-源码-反码-补码-x3D-x3D"><a href="#x3D-x3D-源码-反码-补码-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;源码 反码 补码&#x3D;&#x3D;"></a>&#x3D;&#x3D;源码 反码 补码&#x3D;&#x3D;</h4><h5 id="计算机运算的时候是以-x3D-x3D-补码-x3D-x3D-的方式来计算的"><a href="#计算机运算的时候是以-x3D-x3D-补码-x3D-x3D-的方式来计算的" class="headerlink" title="计算机运算的时候是以&#x3D;&#x3D;补码&#x3D;&#x3D;的方式来计算的"></a>计算机运算的时候是以&#x3D;&#x3D;补码&#x3D;&#x3D;的方式来计算的</h5><h5 id="当我们看运算结果的时候，要看他的原码（重点）"><a href="#当我们看运算结果的时候，要看他的原码（重点）" class="headerlink" title="当我们看运算结果的时候，要看他的原码（重点）"></a>当我们看运算结果的时候，要看他的原码（重点）</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221215150493.png" alt="image-20221221215150493"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223134533307.png" alt="image-20221223134533307"></p><h4 id="x3D-x3D-位运算符-x3D-x3D"><a href="#x3D-x3D-位运算符-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;位运算符&#x3D;&#x3D;"></a>&#x3D;&#x3D;位运算符&#x3D;&#x3D;</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223141050531.png" alt="image-20221223141050531"></p><h5 id="2-amp-3"><a href="#2-amp-3" class="headerlink" title="2&amp;3"></a>2&amp;3</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223135637438.png" alt="image-20221223135637438"></p><h5 id="2-1"><a href="#2-1" class="headerlink" title="~-2"></a>~-2</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223140302090.png" alt="image-20221223140302090"></p><h5 id="2-2"><a href="#2-2" class="headerlink" title="~2"></a>~2</h5><p>源码：00000000 000000000 0000000 00000010</p><p>补码：00000000 000000000 0000000 00000010</p><p>~2操作：</p><p>补码：11111111 111111111 111111111 11111101</p><p>反码：11111111 111111111 111111111 11111100</p><p>源码：10000000 000000000 000000000 00000011</p><p>-3</p><h5 id="2-3"><a href="#2-3" class="headerlink" title="2 | 3"></a>2 | 3</h5><p>2补码：00000000 000000000 0000000 00000010</p><p>3补码：00000000 000000000 0000000 00000011</p><p>2 | 3 操作：</p><p>补码：00000000 000000000 0000000 00000011</p><p>源码：00000000 000000000 0000000 00000011</p><h4 id="gt-gt-lt-lt-和-gt-gt-gt"><a href="#gt-gt-lt-lt-和-gt-gt-gt" class="headerlink" title="&gt;&gt; &lt;&lt; 和 &gt;&gt;&gt;"></a>&gt;&gt; &lt;&lt; 和 &gt;&gt;&gt;</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223141518122.png" alt="image-20221223141518122"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223141807194.png" alt="image-20221223141807194"></p><p><strong>看成</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223141919990.png" alt="image-20221223141919990"></p><h5 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223141945949.png" alt="image-20221223141945949"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223142049280.png" alt="image-20221223142049280"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223142403711.png" alt="image-20221223142403711"></p><h3 id="本章作业"><a href="#本章作业" class="headerlink" title="本章作业"></a>本章作业</h3><h4 id="1-有小数运算，得到结果是近似值"><a href="#1-有小数运算，得到结果是近似值" class="headerlink" title="1. 有小数运算，得到结果是近似值"></a>1. 有小数运算，得到结果是近似值</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223142635257.png" alt="image-20221223142635257"></p><h4 id="2-3"><a href="#2-3" class="headerlink" title="2."></a>2.</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223143136880.png" alt="image-20221223143136880"></p><h4 id="3-HomeWork06"><a href="#3-HomeWork06" class="headerlink" title="3. HomeWork06"></a>3. HomeWork06</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223143518959.png" alt="image-20221223143518959"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223143512358.png" alt="image-20221223143512358"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223143552762.png" alt="image-20221223143552762"></p><h4 id="4-String转换成double-类型的语句"><a href="#4-String转换成double-类型的语句" class="headerlink" title="4. String转换成double:类型的语句"></a>4. String转换成double:类型的语句</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223144359251.png" alt="image-20221223144359251"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223144442352.png" alt="image-20221223144442352"></p><p>3 3</p><h2 id="控制结构"><a href="#控制结构" class="headerlink" title="控制结构"></a>控制结构</h2><h3 id="1-顺序控制"><a href="#1-顺序控制" class="headerlink" title="1. 顺序控制"></a>1. 顺序控制</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223145433225.png" alt="image-20221223145433225"></p><h3 id="2-分支控制-if-else"><a href="#2-分支控制-if-else" class="headerlink" title="2. 分支控制(if-else)"></a>2. 分支控制(if-else)</h3><h4 id="2-1-单分支"><a href="#2-1-单分支" class="headerlink" title="2.1 单分支"></a>2.1 单分支</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223145718352.png" alt="image-20221223145718352"></p><h5 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.if_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年12月23日</span></span><br><span class="line"><span class="comment">* 练习if</span></span><br><span class="line"><span class="comment">* 编写一个程序，可以输入人的年龄，如果该同志的年龄大于18岁，则输出&quot;你年龄大</span></span><br><span class="line"><span class="comment">于18，要对自己的行为负责，送入监狱”*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">If01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你的年龄&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (age &gt;= <span class="number">18</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你的年龄大于18，要对自己的&quot;</span> +</span><br><span class="line">                    <span class="string">&quot;行为负责，送入监狱&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;程序继续...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223150556131.png" alt="image-20221223150556131"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223150614174.png" alt="image-20221223150614174"></p><h4 id="2-2-双分支"><a href="#2-2-双分支" class="headerlink" title="2.2 双分支"></a>2.2 双分支</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223150636190.png" alt="image-20221223150636190"></p><h5 id="流程图-1"><a href="#流程图-1" class="headerlink" title="流程图"></a>流程图</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223150942011.png" alt="image-20221223150942011"></p><h5 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h5><h6 id="1-1"><a href="#1-1" class="headerlink" title="1."></a>1.</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223151159065.png" alt="image-20221223151159065"></p><h6 id="2-两数之和"><a href="#2-两数之和" class="headerlink" title="2. 两数之和"></a>2. 两数之和</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223151640189.png" alt="image-20221223151640189"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.if_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfExercise</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 编写程序，声明2个double型变量并赋值。判断第一个数大于10.0，且第2个</span></span><br><span class="line"><span class="comment">数小于20.0，打印两数之和。*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">34</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">n2</span> <span class="operator">=</span> <span class="number">19.9</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        判断第一个数大于10.0，且第2个数小于20.0</span></span><br><span class="line">        <span class="keyword">if</span> (n1 &gt; <span class="number">10.0</span> &amp;&amp; n2 &lt; <span class="number">20.0</span>) &#123;</span><br><span class="line"><span class="comment">//            打印两数之和</span></span><br><span class="line">            System.out.println(<span class="string">&quot;两数之和=&quot;</span> + (n1 + n2));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不符合&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="是否能被3又能被5整除"><a href="#是否能被3又能被5整除" class="headerlink" title="是否能被3又能被5整除"></a>是否能被3又能被5整除</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">IfExercise02</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    *【课后自练】定义两个变量int,判断二者的和，</span></span><br><span class="line"><span class="comment">    //是否能被3又能被5整除，打印提示信息*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> num1 + num2;</span><br><span class="line">        <span class="keyword">if</span> (sum % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; sum % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;可以被3和5整除&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不能&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="判断闰年"><a href="#判断闰年" class="headerlink" title="判断闰年"></a>判断闰年</h6><p>思路</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223152933776.png" alt="image-20221223152933776"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">IfExercise03</span> &#123;</span><br><span class="line">   <span class="comment">/*</span></span><br><span class="line"><span class="comment">   * 判断一个年份是否是闰年，闰年的条件是符合下面二者之一</span></span><br><span class="line"><span class="comment">(1)年份能被4整除，但不能被100整除；(2)能被400整除*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> <span class="number">2023</span>;</span><br><span class="line">        <span class="keyword">if</span> ((year % <span class="number">4</span> == <span class="number">0</span>) &amp;&amp; (year % <span class="number">100</span> != <span class="number">0</span>) || (year % <span class="number">400</span> == <span class="number">0</span>)) &#123;</span><br><span class="line">            System.out.println(year + <span class="string">&quot;是闰年&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(year + <span class="string">&quot;不是闰年&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-多分支"><a href="#2-3-多分支" class="headerlink" title="2.3 多分支"></a>2.3 多分支</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223153050952.png" alt="image-20221223153050952"></p><h5 id="流程图-2"><a href="#流程图-2" class="headerlink" title="流程图"></a>流程图</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223153246921.png" alt="image-20221223153246921"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223153152055.png" alt="image-20221223153152055"></p><h5 id="特别说明："><a href="#特别说明：" class="headerlink" title="特别说明："></a><code>特别说明：</code></h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223153545382.png" alt="image-20221223153545382"></p><h5 id="案例演示-–If03-java"><a href="#案例演示-–If03-java" class="headerlink" title="案例演示 –If03.java"></a>案例演示 –If03.java</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223154902946.png" alt="image-20221223154902946"></p><h6 id="先对输入的信用分，进行一个范围的有效判断"><a href="#先对输入的信用分，进行一个范围的有效判断" class="headerlink" title="先对输入的信用分，进行一个范围的有效判断"></a>先对输入的信用分，进行一个范围的有效判断</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.if_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*练习If语句多分支*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">If03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        从键盘输入分数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入保国同志的分数(1-100)：&quot;</span>);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="comment">//        定义一个分数接收</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        先对输入的信用分，进行一个范围的有效判断</span></span><br><span class="line">        <span class="keyword">if</span> (score &gt;=<span class="number">1</span> &amp;&amp; score &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (score == <span class="number">100</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;信用极好~&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">80</span> &amp;&amp; score &lt;= <span class="number">99</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;信用优秀&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">60</span> &amp;&amp; score &lt;= <span class="number">80</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;信用一般&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;信用不及格&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;信用分需要在1-100,请重新输入&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="案例演示2"><a href="#案例演示2" class="headerlink" title="案例演示2"></a>案例演示2</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221223155703047.png" alt="image-20221223155703047"></p><h4 id="2-4-嵌套分支"><a href="#2-4-嵌套分支" class="headerlink" title="2.4 嵌套分支"></a>2.4 嵌套分支</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226112758262.png" alt="image-20221226112758262"></p><h5 id="案例-–NestedIf"><a href="#案例-–NestedIf" class="headerlink" title="案例 –NestedIf"></a>案例 –NestedIf</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226113138015.png" alt="image-20221226113138015"></p><h6 id="接收字符-char-gender-x3D-scanner-next-charAt-0"><a href="#接收字符-char-gender-x3D-scanner-next-charAt-0" class="headerlink" title="接收字符 char gender &#x3D; scanner.next().charAt(0)"></a>接收字符 char gender &#x3D; scanner.next().charAt(0)</h6><blockquote><p>先接收字符串，在接收字符串的第一个字符</p></blockquote><h6 id="字符串转换为字符"><a href="#字符串转换为字符" class="headerlink" title="字符串转换为字符"></a>字符串转换为字符</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226125708015.png" alt="image-20221226125708015"></p><h6 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226130158101.png" alt="image-20221226130158101"></p><h6 id="自己写的代码"><a href="#自己写的代码" class="headerlink" title="自己写的代码"></a>自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.if_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年12月26日</span></span><br><span class="line"><span class="comment">* 练习嵌套if</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NestedIf</span> &#123;</span><br><span class="line"><span class="comment">/*    参加歌手比赛，如果初赛成绩大于8.进入决赛</span></span><br><span class="line"><span class="comment">    否则提示淘汰。并且根据性别提示进入男子组或女子组</span></span><br><span class="line"><span class="comment">    可以让学员先练习下】，输入成绩和性别，进行判断和输出信息。*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">score</span> <span class="operator">=</span> sc.nextDouble();</span><br><span class="line"><span class="comment">//        判断成绩</span></span><br><span class="line">        <span class="keyword">if</span> (score &gt;= <span class="number">8.0</span>) &#123;</span><br><span class="line"><span class="comment">//            根据性别</span></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入性别：&quot;</span>);</span><br><span class="line">            <span class="type">char</span> <span class="variable">gender</span> <span class="operator">=</span> sc.next().charAt(<span class="number">0</span>);<span class="comment">//输入第一个字符</span></span><br><span class="line">            <span class="keyword">if</span> (gender == <span class="string">&#x27;男&#x27;</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;您已进入男子组&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (gender == <span class="string">&#x27;女&#x27;</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;您已进入女子组&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;您输入的性别有误&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;您已经被淘汰&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-5-switch分支结构"><a href="#2-5-switch分支结构" class="headerlink" title="2.5 switch分支结构"></a>2.5 switch分支结构</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226131210184.png" alt="image-20221226131210184"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226131437200.png" alt="image-20221226131437200"></p><h5 id="2-5-1-流程图"><a href="#2-5-1-流程图" class="headerlink" title="2.5.1 流程图"></a>2.5.1 流程图</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226131821939.png" alt="image-20221226131821939"></p><h5 id="2-5-2-快速入门"><a href="#2-5-2-快速入门" class="headerlink" title="2.5.2 快速入门"></a>2.5.2 快速入门</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226132120044.png" alt="image-20221226132120044"></p><h6 id="java中只要有值返回都是一个表达式"><a href="#java中只要有值返回都是一个表达式" class="headerlink" title="java中只要有值返回都是一个表达式"></a><code>java中只要有值返回都是一个表达式</code></h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226132818579.png" alt="image-20221226132818579"></p><h6 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226132229477.png" alt="image-20221226132229477"></p><h6 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.swtich;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 2022年12月26日</span></span><br><span class="line"><span class="comment"> * 练习Switch快速入门*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Switch01</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    *·1.请编写一个程序，该程序可以接收一个字符，比如：a,b,c,d,ef,g</span></span><br><span class="line"><span class="comment">        2.a表示星期一，b表示星期二</span></span><br><span class="line"><span class="comment">        3.根据用户的输入显示相依的信息要求使用switch语句完成 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入字符&quot;</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> scanner.next().charAt(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">switch</span> (ch) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期一&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期二&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期三&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期四&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期五&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;f&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期六&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;你输入的字符不正确&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;退出Switch，继续执行程序&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-5-3-细节"><a href="#2-5-3-细节" class="headerlink" title="2.5.3 细节"></a>2.5.3 细节</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226133319203.png" alt="image-20221226133319203"></p><h6 id="1-表达式数据类型，应和case后的常量类型一致，或者是可以自动转成可以相互比较的类型，比如输入的是字符，而常量是int"><a href="#1-表达式数据类型，应和case后的常量类型一致，或者是可以自动转成可以相互比较的类型，比如输入的是字符，而常量是int" class="headerlink" title="1.表达式数据类型，应和case后的常量类型一致，或者是可以自动转成可以相互比较的类型，比如输入的是字符，而常量是int"></a>1.表达式数据类型，应和case后的常量类型一致，或者是可以自动转成可以相互比较的类型，比如输入的是字符，而常量是int</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226133658317.png" alt="image-20221226133658317"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226133736632.png" alt="image-20221226133736632"></p><h6 id="2-switch-表达式-中表达式的返回值必须是：-byte-short-int-char-enum-枚举-，String"><a href="#2-switch-表达式-中表达式的返回值必须是：-byte-short-int-char-enum-枚举-，String" class="headerlink" title="2.switch(表达式)中表达式的返回值必须是：(byte,short,int,char,enum[枚举]，String)"></a>2.switch(表达式)中表达式的返回值必须是：(byte,short,int,char,enum[枚举]，String)</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226134034975.png" alt="image-20221226134034975"></p><h6 id="3-case子句中的值必须是常量-常量表达式也可以-，而不能是变量"><a href="#3-case子句中的值必须是常量-常量表达式也可以-，而不能是变量" class="headerlink" title="3.case子句中的值必须是常量(常量表达式也可以)，而不能是变量"></a>3.case子句中的值必须是常量(常量表达式也可以)，而不能是变量</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226134418255.png" alt="image-20221226134418255"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226134550953.png" alt="image-20221226134550953"></p><h6 id="4-default子句是可选的，当没有匹配的case时，执行default"><a href="#4-default子句是可选的，当没有匹配的case时，执行default" class="headerlink" title="4. default子句是可选的，当没有匹配的case时，执行default"></a>4. default子句是可选的，当没有匹配的case时，执行default</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226135342530.png" alt="image-20221226135342530"></p><h6 id="5-break语句用来在执行完一个case分支后便使程序跳出switch语句块；如果没有写break-程序会顺序执行到switch结尾"><a href="#5-break语句用来在执行完一个case分支后便使程序跳出switch语句块；如果没有写break-程序会顺序执行到switch结尾" class="headerlink" title="5.break语句用来在执行完一个case分支后便使程序跳出switch语句块；如果没有写break,程序会顺序执行到switch结尾"></a>5.break语句用来在执行完一个case分支后便使程序跳出switch语句块；如果没有写break,程序会顺序执行到switch结尾</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226135503337.png" alt="image-20221226135503337"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226135644111.png" alt="image-20221226135644111"></p><h5 id="Switch练习"><a href="#Switch练习" class="headerlink" title="Switch练习"></a>Switch练习</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226135820740.png" alt="image-20221226135820740"></p><h6 id="1-代码"><a href="#1-代码" class="headerlink" title="1. 代码"></a>1. 代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.swtich;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年12月26日</span></span><br><span class="line"><span class="comment"> * 练习swtich*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwitchExercise</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 使用switch把小写类型的char型转为大写（键盘输入）。</span></span><br><span class="line"><span class="comment">         * 只转换a,b,c,d,e.其它的输出&quot;other*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入a-e&quot;</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> scanner.next().charAt(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">switch</span> (c1) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;E&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;您输入有误~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;swtich结束，继续执行程序&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="2-思路"><a href="#2-思路" class="headerlink" title="2.思路"></a>2.思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226141419413.png" alt="image-20221226141419413"></p><h6 id="2-代码"><a href="#2-代码" class="headerlink" title="2. 代码"></a>2. 代码</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226141741705.png" alt="image-20221226141741705"></p><h6 id="2-自己写的代码"><a href="#2-自己写的代码" class="headerlink" title="2.自己写的代码"></a>2.自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SwithchExercise02</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 对学生成绩大于60分的，输出”合格&quot;。低于60分的，输出&quot;不合格”。</span></span><br><span class="line"><span class="comment">     * （注：输入的成绩不能大于100)，提示成绩/60*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">score</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (score &gt;= <span class="number">0</span> &amp;&amp; score &lt;= <span class="number">100</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> ((<span class="type">int</span>) (score / <span class="number">60</span>)) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;不合格&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;合格&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">/*                default:</span></span><br><span class="line"><span class="comment">                    System.out.println(&quot;您的输入有误&quot;);*/</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的成绩在0-100&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="3-思路"><a href="#3-思路" class="headerlink" title="3. 思路"></a>3. 思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226143057273.png" alt="image-20221226143057273"></p><h6 id="3-自己写的代码"><a href="#3-自己写的代码" class="headerlink" title="3. 自己写的代码"></a>3. 自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.swtich;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年12月26日</span></span><br><span class="line"><span class="comment"> * 练习swtich*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwitchExercise</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 使用switch把小写类型的char型转为大写（键盘输入）。</span></span><br><span class="line"><span class="comment">         * 只转换a,b,c,d,e.其它的输出&quot;other*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入a-e&quot;</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> scanner.next().charAt(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">switch</span> (c1) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;E&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;您输入有误~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;swtich结束，继续执行程序&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SwithchExercise02</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 对学生成绩大于60分的，输出”合格&quot;。低于60分的，输出&quot;不合格”。</span></span><br><span class="line"><span class="comment">     * （注：输入的成绩不能大于100)，提示成绩/60*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">score</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (score &gt;= <span class="number">0</span> &amp;&amp; score &lt;= <span class="number">100</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> ((<span class="type">int</span>) (score / <span class="number">60</span>)) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;不合格&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;合格&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">/*                default:</span></span><br><span class="line"><span class="comment">                    System.out.println(&quot;您的输入有误&quot;);*/</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的成绩在0-100&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SwithchExercise03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*根据用于指定月份，打印该月份所属的季节。</span></span><br><span class="line"><span class="comment">        3,4,5春季6,7,8夏季9,10,11</span></span><br><span class="line"><span class="comment">        秋季12,1,2冬季[课堂练习，提示使用穿透*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入月份&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (month &gt;= <span class="number">0</span> &amp;&amp; month &lt;=<span class="number">12</span>) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (month) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;春季&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;夏季&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;秋季&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;冬季&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;您的输入有误~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-6-switch-和-if-的比较"><a href="#2-6-switch-和-if-的比较" class="headerlink" title="2.6 switch 和 if 的比较"></a>2.6 switch 和 if 的比较</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226143745992.png" alt="image-20221226143745992"></p><h3 id="3-循环控制"><a href="#3-循环控制" class="headerlink" title="3. 循环控制"></a>3. 循环控制</h3><h4 id="3-1-while循环"><a href="#3-1-while循环" class="headerlink" title="3.1 while循环"></a>3.1 while循环</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226150325805.png" alt="image-20221226150325805"></p><h5 id="流程图-3"><a href="#流程图-3" class="headerlink" title="流程图"></a>流程图</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226150530036.png" alt="image-20221226150530036"></p><h6 id="i变成11"><a href="#i变成11" class="headerlink" title="i变成11"></a>i变成11</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226150940021.png" alt="image-20221226150940021"></p><h5 id="细节-9"><a href="#细节-9" class="headerlink" title="细节"></a>细节</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226151134320.png" alt="image-20221226151134320"></p><h5 id="练习-5"><a href="#练习-5" class="headerlink" title="练习"></a>练习</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226154940656.png" alt="image-20221226154940656"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226155235035.png" alt="image-20221226155235035"></p><h4 id="3-2-do-while"><a href="#3-2-do-while" class="headerlink" title="3.2 do..while"></a>3.2 do..while</h4><p>–Dowhile</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226155457309.png" alt="image-20221226155457309"></p><h5 id="执行流程图"><a href="#执行流程图" class="headerlink" title="执行流程图"></a>执行流程图</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226155732978.png" alt="image-20221226155732978"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226155806036.png" alt="image-20221226155806036"></p><h5 id="内存分析"><a href="#内存分析" class="headerlink" title="内存分析"></a>内存分析</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226164126229.png" alt="image-20221226164126229"></p><h5 id="练习-6"><a href="#练习-6" class="headerlink" title="练习"></a>练习</h5><h6 id="1-思路"><a href="#1-思路" class="headerlink" title="1. 思路"></a>1. 思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226164813463.png" alt="image-20221226164813463"></p><h6 id="1-自己写的代码"><a href="#1-自己写的代码" class="headerlink" title="1. 自己写的代码"></a>1. 自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.dowhile_;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年12月26日</span></span><br><span class="line"><span class="comment"> * 练习Dowhile*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DoWhileExercise</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*统计1--200之间能被5整除但不能被3整除的个数*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">5</span> == <span class="number">0</span> &amp;&amp; i % <span class="number">3</span> != <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;i=&quot;</span> + i);</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">        &#125; <span class="keyword">while</span> (i &lt;= <span class="number">200</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;个数为：&quot;</span> + count);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="2-思路-1"><a href="#2-思路-1" class="headerlink" title="2. 思路"></a>2. 思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226170219241.png" alt="image-20221226170219241"></p><h4 id="3-3-x3D-x3D-多重循环-x3D-x3D"><a href="#3-3-x3D-x3D-多重循环-x3D-x3D" class="headerlink" title="3.3 &#x3D;&#x3D;多重循环&#x3D;&#x3D;"></a>3.3 &#x3D;&#x3D;多重循环&#x3D;&#x3D;</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226175941794.png" alt="image-20221226175941794"></p><h5 id="3-3-1-执行步骤-–Multiply"><a href="#3-3-1-执行步骤-–Multiply" class="headerlink" title="3.3.1 执行步骤 –Multiply"></a>3.3.1 执行步骤 –Multiply</h5><p>MulFor</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226192013391.png" alt="image-20221226192013391"></p><h6 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226192557674.png" alt="image-20221226192557674"></p><h5 id="3-3-2-练习-–MulForExercise01"><a href="#3-3-2-练习-–MulForExercise01" class="headerlink" title="3.3.2 练习 –MulForExercise01"></a>3.3.2 练习 –MulForExercise01</h5><h6 id="1-思路-1"><a href="#1-思路-1" class="headerlink" title="1. 思路"></a>1. 思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226195608604.png" alt="image-20221226195608604"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226195738186.png" alt="image-20221226195738186"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226200756957.png" alt="image-20221226200756957"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226201247628.png" alt="image-20221226201247628"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226201440929.png" alt="image-20221226201440929"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226201532850.png" alt="image-20221226201532850"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226201613614.png" alt="image-20221226201613614"></p><h6 id="2-思路-2"><a href="#2-思路-2" class="headerlink" title="2. 思路"></a>2. 思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226201955714.png" alt="image-20221226201955714"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226202040550.png" alt="image-20221226202040550"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226202234112.png" alt="image-20221226202234112"></p><h6 id="2-自己写的代码-1"><a href="#2-自己写的代码-1" class="headerlink" title="2.自己写的代码"></a>2.自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MulForExercise02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//        从键盘输入</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">totalScore</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//学生总成绩</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">passNum</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">// 及格人数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= <span class="number">3</span>; j++) &#123; <span class="comment">//3个班</span></span><br><span class="line">            <span class="comment">//        每个班5名同学</span></span><br><span class="line">            <span class="type">double</span> score;</span><br><span class="line">            <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入第&quot;</span> + j + <span class="string">&quot;个班&quot;</span>+<span class="string">&quot;第&quot;</span> + i + <span class="string">&quot;名学生的成绩：&quot;</span>);</span><br><span class="line">                score = scanner.nextDouble();</span><br><span class="line"><span class="comment">//                判断是否及格</span></span><br><span class="line">                <span class="keyword">if</span> (score &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">                    passNum ++;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="comment">//            平均分</span></span><br><span class="line">                sum += score;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;总分为：&quot;</span> + sum +<span class="string">&quot;\t&quot;</span>+ <span class="string">&quot;平均分为：&quot;</span> + (sum / <span class="number">5</span>));</span><br><span class="line"><span class="comment">//            一班的总分相加</span></span><br><span class="line">            totalScore += sum;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;======&quot;</span>);</span><br><span class="line"><span class="comment">//        三个班的平均分</span></span><br><span class="line">        System.out.println(<span class="string">&quot;总分为：&quot;</span> + totalScore +<span class="string">&quot;\t&quot;</span>+</span><br><span class="line">                <span class="string">&quot;平均分为：&quot;</span> + (totalScore / <span class="number">15</span>));</span><br><span class="line"><span class="comment">//        及格人数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;三个班的及格人数为：&quot;</span> + passNum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-3-3-空心金字塔-–Stars"><a href="#3-3-3-空心金字塔-–Stars" class="headerlink" title="3.3.3 空心金字塔 –Stars"></a>3.3.3 空心金字塔 –Stars</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226211556608.png" alt="image-20221226211556608"></p><h6 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h6><p>1. </p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226212019758.png" alt="image-20221226212019758"></p><p>2. </p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226212254169.png" alt="image-20221226212254169"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226212446927.png" alt="image-20221226212446927"></p><p>3. </p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221226212828475.png" alt="image-20221226212828475"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221226213200743.png" alt="image-20221226213200743"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221226213227015.png" alt="image-20221226213227015"></p><blockquote><p>空格没打印</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221226213402895.png" alt="image-20221226213402895"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221226213541256.png" alt="image-20221226213541256"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221226213558189.png" alt="image-20221226213558189"></p><p>4. </p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221226213921115.png" alt="image-20221226213921115"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221226214311069.png" alt="image-20221226214311069"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221226214352432.png" alt="image-20221226214352432"></p><p>5. </p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221226214619775.png" alt="image-20221226214619775"></p><h6 id="自己写的代码-1"><a href="#自己写的代码-1" class="headerlink" title="自己写的代码"></a>自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.multiply_;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年12月27日</span></span><br><span class="line"><span class="comment"> * 练习空心金字塔*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Stars</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        1.打印矩形</span></span><br><span class="line"><span class="comment">/*        for (int j = 0; j &lt;= 5; j++) &#123;</span></span><br><span class="line"><span class="comment">            for (int i = 0; i &lt; 5; i++) &#123;</span></span><br><span class="line"><span class="comment">                System.out.print(&quot;*&quot;);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;&quot;);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        2. 打印直角三角形</span></span><br><span class="line"><span class="comment">/*        for (int j = 1; j &lt;= 5; j++) &#123;</span></span><br><span class="line"><span class="comment">            for (int i = 1; i &lt;= j; i++) &#123;</span></span><br><span class="line"><span class="comment">                System.out.print(&quot;*&quot;);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;&quot;);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        3.打印等腰三角形</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 第一行       1   1*2-1       4个空格</span></span><br><span class="line"><span class="comment">         * 第二行       3   2*2-1       3个空格</span></span><br><span class="line"><span class="comment">         * 第三行       5   3*2-1       2个空格</span></span><br><span class="line"><span class="comment">         * 第四行       7   4*2-1       1个空格</span></span><br><span class="line"><span class="comment">         * 第五行       9   5*2-1       0个空格</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line"><span class="comment">/*        for (int j = 1; j &lt;= 5; j++) &#123;</span></span><br><span class="line"><span class="comment">//            加空格</span></span><br><span class="line"><span class="comment">            for (int i = 1; i &lt;= 5 - j; i++) &#123;</span></span><br><span class="line"><span class="comment">                System.out.print(&quot; &quot;);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            for (int i = 1; i &lt;= j * 2 - 1; i++) &#123;</span></span><br><span class="line"><span class="comment">                System.out.print(&quot;*&quot;);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;&quot;);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        4.打印空心三角形</span></span><br><span class="line">       <span class="comment">/* for (int j = 1; j &lt;= 5; j++) &#123;</span></span><br><span class="line"><span class="comment">//            在输出*之前，还有输出 对应空格 = 总层数 - 当前层</span></span><br><span class="line"><span class="comment">            for (int i = 1; i &lt;= 5 - j; i++) &#123;</span></span><br><span class="line"><span class="comment">                System.out.print(&quot; &quot;);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">//            控制打印每层的*个数</span></span><br><span class="line"><span class="comment">            for (int i = 1; i &lt;= j * 2 - 1; i++) &#123;</span></span><br><span class="line"><span class="comment">//                当前行的第一个位置是*，最后一个位置也是*</span></span><br><span class="line"><span class="comment">//                否则输出空格，最后一行都输出</span></span><br><span class="line"><span class="comment">                    if (i == 1 || i == j * 2 -1 || j == 5) &#123;</span></span><br><span class="line"><span class="comment">                        System.out.print(&quot;*&quot;);</span></span><br><span class="line"><span class="comment">                    &#125; else &#123;</span></span><br><span class="line"><span class="comment">                        System.out.print(&quot; &quot;);</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;&quot;);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        5.先死后活</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">totalLevel</span> <span class="operator">=</span> <span class="number">15</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= totalLevel; j++) &#123;</span><br><span class="line"><span class="comment">//            在输出*之前，还有输出 对应空格 = 总层数 - 当前层</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= totalLevel  - j; i++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//            控制打印每层的*个数</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= j * <span class="number">2</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="comment">//                当前行的第一个位置是*，最后一个位置也是*</span></span><br><span class="line"><span class="comment">//                否则输出空格，最后一行都输出</span></span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">1</span> || i == j * <span class="number">2</span> -<span class="number">1</span> || j == totalLevel) &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-3-4-空心菱形"><a href="#3-3-4-空心菱形" class="headerlink" title="3.3.4 空心菱形"></a>3.3.4 空心菱形</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.multiply_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Stars01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        化繁为简</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">totalLevel</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="comment">//        1.打印矩形</span></span><br><span class="line"><span class="comment">//        上三角</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= totalLevel; j++) &#123;</span><br><span class="line"><span class="comment">//            加空格</span></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * 第一行       1   1*2-1       4个空格</span></span><br><span class="line"><span class="comment">             * 第二行       3   2*2-1       3个空格</span></span><br><span class="line"><span class="comment">             * 第三行       5   3*2-1       2个空格</span></span><br><span class="line"><span class="comment">             * 第四行       7   4*2-1       1个空格</span></span><br><span class="line"><span class="comment">             * 第五行       9   5*2-1       0个空格</span></span><br><span class="line"><span class="comment">             * */</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= totalLevel - j; i++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= j * <span class="number">2</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">1</span> || i == j * <span class="number">2</span> - <span class="number">1</span>) &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt; totalLevel; j++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//            打印空格</span></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * 第一行       7   4*2-1       1个空格</span></span><br><span class="line"><span class="comment">             * 第二行       5   3*2-1       2个空格</span></span><br><span class="line"><span class="comment">             * 第三行       3   2*2-1       3个空格</span></span><br><span class="line"><span class="comment">             * 第四行       1   1*2-1       4个空格</span></span><br><span class="line"><span class="comment">             * */</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; j; i++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * 第一行       7   4*2-1       4个空格</span></span><br><span class="line"><span class="comment">             * 第二行       5   3*2-1       3个空格</span></span><br><span class="line"><span class="comment">             * 第三行       3   2*2-1       2个空格</span></span><br><span class="line"><span class="comment">             * 第四行       1   1*2-1       1个空格</span></span><br><span class="line"><span class="comment">             * */</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= (totalLevel - <span class="number">1</span> - j + <span class="number">1</span>) * <span class="number">2</span> - <span class="number">1</span> ; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">1</span> || i == (totalLevel - <span class="number">1</span> - j + <span class="number">1</span>) * <span class="number">2</span> - <span class="number">1</span>) &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-break"><a href="#4-break" class="headerlink" title="4. break"></a>4. break</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221227110158927.png" alt="image-20221227110158927"></p><h6 id="Math-random-–生成0-1-之间的随机数"><a href="#Math-random-–生成0-1-之间的随机数" class="headerlink" title="Math.random() –生成0-1 之间的随机数"></a>Math.random() –生成0-1 之间的随机数</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221227111208833.png" alt="image-20221227111208833"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228125319728.png" alt="image-20221228125319728"></p><h4 id="4-1-快速入门"><a href="#4-1-快速入门" class="headerlink" title="4.1 快速入门"></a>4.1 快速入门</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228130104379.png" alt="image-20221228130104379"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228130130351.png" alt="image-20221228130130351"></p><h4 id="4-2-x3D-x3D-细节-x3D-x3D"><a href="#4-2-x3D-x3D-细节-x3D-x3D" class="headerlink" title="4.2 &#x3D;&#x3D;细节&#x3D;&#x3D;"></a>4.2 &#x3D;&#x3D;细节&#x3D;&#x3D;</h4><p>默认跳出最近的循环</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228130302935.png" alt="image-20221228130302935"></p><h5 id="label标签-（尽量不要用）"><a href="#label标签-（尽量不要用）" class="headerlink" title="label标签 （尽量不要用）"></a>label标签 （尽量不要用）</h5><blockquote><p>可以起随便的标识符名</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228131151828.png" alt="image-20221228131151828"></p><h5 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228131554805.png" alt="image-20221228131554805"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228132111907.png" alt="image-20221228132111907"></p><h6 id="break-abc1"><a href="#break-abc1" class="headerlink" title="break abc1"></a>break abc1</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228132420508.png" alt="image-20221228132420508"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228132449560.png" alt="image-20221228132449560"></p><h4 id="4-3-练习"><a href="#4-3-练习" class="headerlink" title="4.3 练习"></a>4.3 练习</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228132546447.png" alt="image-20221228132546447"></p><h5 id="1-思路-2"><a href="#1-思路-2" class="headerlink" title="1. 思路"></a>1. 思路</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228133219025.png" alt="image-20221228133219025"></p><h6 id="定义一个n，把i的值赋给n"><a href="#定义一个n，把i的值赋给n" class="headerlink" title="定义一个n，把i的值赋给n"></a>定义一个n，把i的值赋给n</h6><h5 id="1-代码-1"><a href="#1-代码-1" class="headerlink" title="1. 代码"></a>1. 代码</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228133532511.png" alt="image-20221228133532511"></p><p>​     </p><h5 id="2-思路-3"><a href="#2-思路-3" class="headerlink" title="2. 思路"></a>2. 思路</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228135453328.png" alt="image-20221228135453328"></p><p> <img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228140245741.png" alt="image-20221228140245741"></p><h5 id="2-代码-1"><a href="#2-代码-1" class="headerlink" title="2. 代码"></a>2. 代码</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228141254934.png" alt="image-20221228141254934"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228141529576.png" alt="image-20221228141529576"></p><h5 id="2-自己写的代码-–未改进"><a href="#2-自己写的代码-–未改进" class="headerlink" title="2. 自己写的代码 –未改进"></a>2. 自己写的代码 –未改进</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BreakExercise02</span> &#123;</span><br><span class="line">    <span class="comment">/*第一次自己写的</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*        实现登录验证，有3次机会，如果用户名为&quot;丁真”，密码&quot;666&quot;提示登录成功</span></span><br><span class="line"><span class="comment">        否则提示还有几次机会，请使用for+break完成*/</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入用户名:&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入密码:&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">passwd</span> <span class="operator">=</span> scanner.next();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (username.equals(<span class="string">&quot;丁真&quot;</span>) &amp;&amp; passwd.equals(<span class="string">&quot;666&quot;</span>)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;还有&quot;</span> + (<span class="number">3</span>-i-<span class="number">1</span>) + <span class="string">&quot;次机会&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-改进的代码"><a href="#2-改进的代码" class="headerlink" title="2.改进的代码"></a>2.改进的代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        String name;</span><br><span class="line">        String passwd;</span><br><span class="line">        <span class="type">int</span> <span class="variable">chance</span> <span class="operator">=</span> <span class="number">3</span>;<span class="comment">//一共三次机会，登录一次，减少一次</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++) &#123;</span><br><span class="line"><span class="comment">//            提示输入</span></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入用户名：&quot;</span>);</span><br><span class="line">            name = scanner.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入密码&quot;</span>);</span><br><span class="line">            passwd = scanner.next();</span><br><span class="line"><span class="comment">//            比较输入的用户名和密码是否正确</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;丁真&quot;</span>.equals(name) &amp;&amp; <span class="string">&quot;666&quot;</span>.equals(passwd)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;登入成功~&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//            机会减1</span></span><br><span class="line">            chance--;</span><br><span class="line">            System.out.println(<span class="string">&quot;您还有&quot;</span> + chance + <span class="string">&quot;次机会~&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="字符串的内容比较使用的方法equals"><a href="#字符串的内容比较使用的方法equals" class="headerlink" title="字符串的内容比较使用的方法equals"></a><code>字符串的内容比较使用的方法equals</code></h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228140702663.png" alt="image-20221228140702663"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228140942741.png" alt="image-20221228140942741"></p><h6 id="推荐-林黛玉-quot-equals-name"><a href="#推荐-林黛玉-quot-equals-name" class="headerlink" title="推荐 林黛玉&quot;.equals(name)"></a>推荐 <code>林黛玉&quot;.equals(name)</code></h6><h3 id="5-continue"><a href="#5-continue" class="headerlink" title="5. continue"></a>5. continue</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228143441742.png" alt="image-20221228143441742"></p><h4 id="示意图"><a href="#示意图" class="headerlink" title="示意图"></a>示意图</h4><blockquote><p>其他语句不会执行</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228143821685.png" alt="image-20221228143821685"></p><h4 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228144529902.png" alt="image-20221228144529902"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228144619670.png" alt="image-20221228144619670"></p><h4 id="细节-10"><a href="#细节-10" class="headerlink" title="细节"></a>细节</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228144657553.png" alt="image-20221228144657553"></p><h6 id="continue-label2"><a href="#continue-label2" class="headerlink" title="continue label2"></a>continue label2</h6><blockquote><p>4组<code>013456789</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228145537280.png" alt="image-20221228145537280"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228145807686.png" alt="image-20221228145807686"></p><h6 id="continue-label1"><a href="#continue-label1" class="headerlink" title="continue label1"></a>continue label1</h6><blockquote><p>输出两次 01</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228150517493.png" alt="image-20221228150517493"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228150645822.png" alt="image-20221228150645822"></p><h3 id="6-return"><a href="#6-return" class="headerlink" title="6. return"></a>6. return</h3><blockquote><p>当return用在方法时，表示跳出方法，当用在main方法时，退出程序</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228150845407.png" alt="image-20221228150845407"></p><h6 id="break"><a href="#break" class="headerlink" title="break"></a>break</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228151014274.png" alt="image-20221228151014274"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228151351229.png" alt="image-20221228151351229"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228151420654.png" alt="image-20221228151420654"></p><h6 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228151448678.png" alt="image-20221228151448678"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228151658072.png" alt="image-20221228151658072"></p><h6 id="return"><a href="#return" class="headerlink" title="return"></a>return</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228151906547.png" alt="image-20221228151906547"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228152006678.png" alt="image-20221228152006678"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228152017630.png" alt="image-20221228152017630"></p><h3 id="7-本章作业-return包下"><a href="#7-本章作业-return包下" class="headerlink" title="7. 本章作业 -return包下"></a>7. 本章作业 -return包下</h3><h4 id="1-2"><a href="#1-2" class="headerlink" title="1."></a>1.</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228153644343.png" alt="image-20221228153644343"></p><h5 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228154123679.png" alt="image-20221228154123679"></p><h5 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228155200956.png" alt="image-20221228155200956"></p><h5 id="自己最开始写的代码"><a href="#自己最开始写的代码" class="headerlink" title="自己最开始写的代码"></a>自己最开始写的代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.return_;</span><br><span class="line"><span class="comment">/*2022年12月28日</span></span><br><span class="line"><span class="comment">* 练习</span></span><br><span class="line"><span class="comment">*某人有100,000元，每经过一次路口，需要交费，规则如下：</span></span><br><span class="line"><span class="comment">1)当现金&gt;50000时，每次交5%</span></span><br><span class="line"><span class="comment">2)当现金&lt;=50000时，每次交1000</span></span><br><span class="line"><span class="comment">编程计算该人可以经过多少次路口，要求：使用while break方式完成 */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        定义个变量存钱</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">100000</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">lu</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//需要经过多少个路口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        当经过路口时需要缴费</span></span><br><span class="line">        <span class="keyword">while</span> (money &gt; <span class="number">50000</span>) &#123;</span><br><span class="line">            lu++;</span><br><span class="line">            money -= (money * <span class="number">.05</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(lu);</span><br><span class="line">        System.out.println(money);</span><br><span class="line">        <span class="keyword">while</span> (money &lt;= <span class="number">50000</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (money - <span class="number">1000</span> &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            lu++;</span><br><span class="line">            money = money - <span class="number">1000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(lu);</span><br><span class="line">        System.out.println(money);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="改进后"><a href="#改进后" class="headerlink" title="改进后"></a>改进后</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">HomeWork01Better</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*定义一个变量存钱</span></span><br><span class="line"><span class="comment">        * 当现金&gt;50000时，money-5%</span></span><br><span class="line"><span class="comment">        * 当1000&lt;现金&lt;=50000 减1000</span></span><br><span class="line"><span class="comment">        * 当现金&lt;1000时，直接退出</span></span><br><span class="line"><span class="comment">        * if else</span></span><br><span class="line"><span class="comment">        * 使用count 来保存通过路口</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">100000</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//保存通过路口</span></span><br><span class="line"><span class="comment">//        当他能无限循环</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (money &gt; <span class="number">50000</span>) &#123;</span><br><span class="line">                money *= <span class="number">0.95</span>;</span><br><span class="line">                count++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (money &gt;<span class="number">1000</span>) &#123;</span><br><span class="line">                money -= <span class="number">1000</span>;</span><br><span class="line">                count++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">//钱不够1000</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;可以经过&quot;</span> + count + <span class="string">&quot;次路口&quot;</span> + <span class="string">&quot;,剩余的钱为：&quot;</span> +</span><br><span class="line">                money);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228160324593.png" alt="image-20221228160324593"></p><h4 id="2-4"><a href="#2-4" class="headerlink" title="2."></a>2.</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228160525427.png" alt="image-20221228160525427"></p><h4 id="3-2"><a href="#3-2" class="headerlink" title="3."></a>3.</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228160629703.png" alt="image-20221228160629703"></p><h4 id="4-1"><a href="#4-1" class="headerlink" title="4."></a>4.</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228160639112.png" alt="image-20221228160639112"></p><h5 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228164016312.png" alt="image-20221228164016312"></p><h5 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228164232147.png" alt="image-20221228164232147"></p><h5 id="1000以内的水仙花数"><a href="#1000以内的水仙花数" class="headerlink" title="1000以内的水仙花数"></a>1000以内的水仙花数</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.return_;</span><br><span class="line"><span class="comment">/*2022年12月28日</span></span><br><span class="line"><span class="comment">* 4.判断一个整数是否是水仙花数，所谓水仙花数是指一个3位数，其各个位上数字立方</span></span><br><span class="line"><span class="comment">和等于其本身。例如：153=1*1*1+3*3*3+5*5*5</span></span><br><span class="line"><span class="comment">Homework04.java*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 1.定义一个变量存储百位： n1 num / 100</span></span><br><span class="line"><span class="comment">        *                  十位：n2  (num / 10 % 10)</span></span><br><span class="line"><span class="comment">        *                  个位：n3 num % 10*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">154</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (num = <span class="number">100</span>; num &lt;= <span class="number">1000</span> ; num++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> num /<span class="number">100</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">n2</span> <span class="operator">=</span> (num / <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">n3</span> <span class="operator">=</span> num % <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span> (num == n1 * n1 * n1 + n2 * n2 * n2 + n3 * n3 * n3) &#123;</span><br><span class="line">                System.out.println(num + <span class="string">&quot; 是水仙花数&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//                System.out.println(num+ &quot; 不是&quot;);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h4><p>啥都不输出</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228165333490.png" alt="image-20221228165333490"></p><h4 id="6"><a href="#6" class="headerlink" title="6."></a>6.</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221228165428736.png" alt="image-20221228165428736"></p><h5 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221229095333424.png" alt="image-20221229095333424"></p><h5 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.return_;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 2022年12月28日</span></span><br><span class="line"><span class="comment">* 练习</span></span><br><span class="line"><span class="comment">* 输出1-100之间的不能被5整除的数，每5个一行Homework06.java*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork06</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//    定义一个计数器</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">100</span> ; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">5</span> != <span class="number">0</span>) &#123;</span><br><span class="line">                count++;</span><br><span class="line">                System.out.print(i + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//              判断，每满5个，就输出一个换行符</span></span><br><span class="line">                <span class="keyword">if</span> (count % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.println();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7"><a href="#7" class="headerlink" title="7."></a>7.</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221229104710247.png" alt="image-20221229104710247"></p><h5 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221229105206280.png" alt="image-20221229105206280"></p><h5 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.return_;</span><br><span class="line"><span class="comment">/*2022年12月29日</span></span><br><span class="line"><span class="comment">* 输出小写的a-z以及大写的Z-A*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork07</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>; ch &lt;= <span class="string">&#x27;z&#x27;</span>; ch++) &#123;</span><br><span class="line">            count++;</span><br><span class="line">            System.out.print(ch + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (count % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="type">int</span> <span class="variable">count1</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> <span class="string">&#x27;Z&#x27;</span>; ch &gt;= <span class="string">&#x27;A&#x27;</span>; ch--) &#123;</span><br><span class="line">            count1++;</span><br><span class="line">            System.out.print(ch + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (count1 % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8"><a href="#8" class="headerlink" title="8."></a>8.</h4><p>8.求出1-1&#x2F;2+1&#x2F;3-1&#x2F;4..1&#x2F;100的和</p><p>Homework08.,java</p><h5 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221229111036680.png" alt="image-20221229111036680"></p><h5 id="代码-10"><a href="#代码-10" class="headerlink" title="代码"></a>代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.return_;</span><br><span class="line"><span class="comment">/*2022年12月29日</span></span><br><span class="line"><span class="comment">*8.求出1-1/2+1/3-1/4..1/100的和Homework08.,java */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork08</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line"><span class="comment">//            判断是奇数还是偶数，然后做不同的处理</span></span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">2</span> != <span class="number">0</span>) &#123; <span class="comment">//分母为奇数</span></span><br><span class="line">                sum += (<span class="number">1.0</span> / i);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123; <span class="comment">//分母为偶数</span></span><br><span class="line">                sum -= (<span class="number">1.0</span> / i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="9"><a href="#9" class="headerlink" title="9."></a>9.</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221229111226600.png" alt="image-20221229111226600"></p><h5 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221229112718843.png" alt="image-20221229112718843"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221229112734305.png" alt="image-20221229112734305"></p><h5 id="代码-11"><a href="#代码-11" class="headerlink" title="代码"></a>代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.return_;</span><br><span class="line"><span class="comment">/*2022年12月29日</span></span><br><span class="line"><span class="comment">* 练习</span></span><br><span class="line"><span class="comment">* 求1+(1+2)+（1+2+3)+（1+2+3+4)+..+(1+2+3+.+100)的结果</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork09</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//j可以表示是第几项，同时也是当前项最大的是数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= <span class="number">100</span>; j++) &#123;</span><br><span class="line">            <span class="comment">//内层1 -- i之间进行循环</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= j; i++) &#123;</span><br><span class="line">                sum += i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HomeWork099</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*2022年12月29日</span></span><br><span class="line"><span class="comment">         * 练习</span></span><br><span class="line"><span class="comment">         * 求1+(1+2)+（1+2+3)+（1+2+3+4)+..+(1+2+3+.+100)的结果</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= <span class="number">100</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= j; i++) &#123;</span><br><span class="line">                sum += i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221212927183.png" alt="image-20221221212927183"></p><h3 id="goto保留字"><a href="#goto保留字" class="headerlink" title="goto保留字"></a>goto保留字</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221213157129.png" alt="image-20221221213157129"></p><h3 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221213236431.png" alt="image-20221221213236431"></p><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221213614352.png" alt="image-20221221213614352"></p><h3 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221213659270.png" alt="image-20221221213659270"></p><h2 id="键盘输入"><a href="#键盘输入" class="headerlink" title="键盘输入"></a>键盘输入</h2><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221213741702.png" alt="image-20221221213741702"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221213836604.png" alt="image-20221221213836604"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221214050704.png" alt="image-20221221214050704"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221221214447616.png" alt="image-20221221214447616"></p><h2 id="Java-API"><a href="#Java-API" class="headerlink" title="Java API"></a>Java API</h2><p>网址</p><p><a href="https://www.matools.com/api/java8">https://www.matools.com/api/java8</a></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219145610312.png" alt="image-20221219145610312"></p><h3 id="Java类的组织形式"><a href="#Java类的组织形式" class="headerlink" title="Java类的组织形式"></a>Java类的组织形式</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219150031955.png" alt="image-20221219150031955"></p><p>比如ArrayList</p><blockquote><p>使用，先定位包，再定位类</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219150342030.png" alt="image-20221219150342030"></p><h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><h3 id="for编程思想"><a href="#for编程思想" class="headerlink" title="for编程思想"></a>for编程思想</h3><blockquote><p>化繁为简</p><p>先死后活</p></blockquote><h4 id="化繁为简：即将复杂的需求，拆解成简单的需求，逐步完成"><a href="#化繁为简：即将复杂的需求，拆解成简单的需求，逐步完成" class="headerlink" title="化繁为简：即将复杂的需求，拆解成简单的需求，逐步完成"></a>化繁为简：即将复杂的需求，拆解成简单的需求，逐步完成</h4><h4 id="先死后活：先考虑固定的值，然后转成可以灵活变化的值"><a href="#先死后活：先考虑固定的值，然后转成可以灵活变化的值" class="headerlink" title="先死后活：先考虑固定的值，然后转成可以灵活变化的值"></a>先死后活：先考虑固定的值，然后转成可以灵活变化的值</h4><h4 id="打印1-100之间所有是9的倍数的整数，统计个数-及-总和"><a href="#打印1-100之间所有是9的倍数的整数，统计个数-及-总和" class="headerlink" title="打印1-100之间所有是9的倍数的整数，统计个数 及 总和"></a>打印1-100之间所有是9的倍数的整数，统计个数 及 总和</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221210091543448.png" alt="image-20221210091543448"></p><h6 id="1-完成输出1-100的值"><a href="#1-完成输出1-100的值" class="headerlink" title="1. 完成输出1-100的值"></a>1. 完成输出1-100的值</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221210091809043.png" alt="image-20221210091809043"></p><h6 id="2-在输出的过程中，进行过滤，只输出9的倍数"><a href="#2-在输出的过程中，进行过滤，只输出9的倍数" class="headerlink" title="2. 在输出的过程中，进行过滤，只输出9的倍数"></a>2. 在输出的过程中，进行过滤，只输出9的倍数</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221210091946398.png" alt="image-20221210091946398"></p><h6 id="3-统计个数"><a href="#3-统计个数" class="headerlink" title="3. 统计个数"></a>3. 统计个数</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221210092152776.png" alt="image-20221210092152776"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.for_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForExercise</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">9</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">                count ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;个数为：&quot;</span> + count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="总和"><a href="#总和" class="headerlink" title="总和"></a>总和</h6><h2 id="数组-–Array"><a href="#数组-–Array" class="headerlink" title="数组 –Array"></a>数组 –Array</h2><h3 id="1-数组的引出"><a href="#1-数组的引出" class="headerlink" title="1. 数组的引出"></a>1. 数组的引出</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221214093827336.png" alt="image-20221214093827336"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"><span class="comment">/*2022年12月14日</span></span><br><span class="line"><span class="comment">* 目的：数组的引出*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Array01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        传统的方法</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*思路分析</span></span><br><span class="line"><span class="comment">        * 1. 定义6个 double ，求和</span></span><br><span class="line"><span class="comment">        * 2. 平均体重 = 总体重 / 6</span></span><br><span class="line"><span class="comment">         * 3. 传统方法，6 -&gt; 600</span></span><br><span class="line"><span class="comment">         * 4.引出数组*/</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// 麻烦</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">hen1</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">hen2</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">hen3</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">hen4</span> <span class="operator">=</span> <span class="number">3.4</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">hen5</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">hen6</span> <span class="operator">=</span> <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">totalWeight</span> <span class="operator">=</span> hen1 + hen2 + hen3 +</span><br><span class="line">                                hen4 + hen5 + hen6;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">avg</span> <span class="operator">=</span> totalWeight / <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;总体重为：&quot;</span> + totalWeight);</span><br><span class="line">        System.out.println(<span class="string">&quot;平均体重为：&quot;</span> + avg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-数组的介绍"><a href="#2-数组的介绍" class="headerlink" title="2. 数组的介绍"></a>2. 数组的介绍</h3><blockquote><p>数组可以存放<strong>多个</strong>&#x3D;&#x3D;同一类型&#x3D;&#x3D;的数据。数组也是一种数据类型，是&#x3D;&#x3D;引用类型&#x3D;&#x3D;</p></blockquote><p>&#x3D;&#x3D;即：数(数据）组（一组）就是一组数据。&#x3D;&#x3D;</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221214094218041.png" alt="image-20221214094218041"></p><h3 id="3-快速入门"><a href="#3-快速入门" class="headerlink" title="3. 快速入门"></a>3. 快速入门</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"><span class="comment">/*2022年12月14日</span></span><br><span class="line"><span class="comment">* 目的：数组的引出*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Array01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        传统的方法</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*思路分析</span></span><br><span class="line"><span class="comment">        * 1. 定义6个 double ，求和</span></span><br><span class="line"><span class="comment">        * 2. 平均体重 = 总体重 / 6</span></span><br><span class="line"><span class="comment">         * 3. 传统方法，6 -&gt; 600</span></span><br><span class="line"><span class="comment">         * 4.引出数组*/</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// 麻烦</span></span><br><span class="line"><span class="comment">/*        double hen1 = 3;</span></span><br><span class="line"><span class="comment">        double hen2 = 5;</span></span><br><span class="line"><span class="comment">        double hen3 = 1;</span></span><br><span class="line"><span class="comment">        double hen4 = 3.4;</span></span><br><span class="line"><span class="comment">        double hen5 = 2;</span></span><br><span class="line"><span class="comment">        double hen6 = 50;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        double totalWeight = hen1 + hen2 + hen3 +</span></span><br><span class="line"><span class="comment">                                hen4 + hen5 + hen6;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        double avg = totalWeight / 6;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        System.out.println(&quot;总体重为：&quot; + totalWeight);</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;平均体重为：&quot; + avg);*/</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;==================&quot;</span>);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        定义一个数组</span></span><br><span class="line">        <span class="comment">/*1.double[] 表示是double类型的数组， 数组名 hens</span></span><br><span class="line"><span class="comment">        * 2. &#123;3,5,1,..&#125; 表示数组的值/元素，依次表示数组的第几个元素</span></span><br><span class="line"><span class="comment">        * 3. 使用一个变量totalWeight 将各个元素积累*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">double</span>[] hens = &#123;<span class="number">3</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3.4</span>, <span class="number">2</span>, <span class="number">50</span>&#125;;</span><br><span class="line">        <span class="type">double</span> <span class="variable">totalWeight</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        遍历数组得到数组所有元素的和，使用for</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line"><span class="comment">//            System.out.println(&quot;第&quot; + (i+1) + &quot;个元素的值为：&quot; + hens[i]);</span></span><br><span class="line">            totalWeight += hens[i];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;总体重为：&quot;</span> + totalWeight + <span class="string">&quot;  平均体重&quot;</span> +</span><br><span class="line">                <span class="string">&quot;为：&quot;</span> + (totalWeight / <span class="number">6</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="可以通过-数组名-length-得到数组的大小-x2F-长度"><a href="#可以通过-数组名-length-得到数组的大小-x2F-长度" class="headerlink" title="可以通过 数组名.length 得到数组的大小&#x2F;长度"></a>可以通过 数组名.length 得到数组的大小&#x2F;长度</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"><span class="comment">/*2022年12月14日</span></span><br><span class="line"><span class="comment">* 目的：数组的引出*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Array01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        传统的方法</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*思路分析</span></span><br><span class="line"><span class="comment">        * 1. 定义6个 double ，求和</span></span><br><span class="line"><span class="comment">        * 2. 平均体重 = 总体重 / 6</span></span><br><span class="line"><span class="comment">         * 3. 传统方法，6 -&gt; 600</span></span><br><span class="line"><span class="comment">         * 4.引出数组*/</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// 麻烦</span></span><br><span class="line"><span class="comment">/*        double hen1 = 3;</span></span><br><span class="line"><span class="comment">        double hen2 = 5;</span></span><br><span class="line"><span class="comment">        double hen3 = 1;</span></span><br><span class="line"><span class="comment">        double hen4 = 3.4;</span></span><br><span class="line"><span class="comment">        double hen5 = 2;</span></span><br><span class="line"><span class="comment">        double hen6 = 50;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        double totalWeight = hen1 + hen2 + hen3 +</span></span><br><span class="line"><span class="comment">                                hen4 + hen5 + hen6;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        double avg = totalWeight / 6;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        System.out.println(&quot;总体重为：&quot; + totalWeight);</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;平均体重为：&quot; + avg);*/</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;==================&quot;</span>);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        定义一个数组</span></span><br><span class="line">        <span class="comment">/*1.double[] 表示是double类型的数组， 数组名 hens</span></span><br><span class="line"><span class="comment">        * 2. &#123;3,5,1,..&#125; 表示数组的值/元素，依次表示数组的第几个元素</span></span><br><span class="line"><span class="comment">        * 3. 使用一个变量totalWeight 将各个元素积累*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">double</span>[] hens = &#123;<span class="number">3</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3.4</span>, <span class="number">2</span>, <span class="number">50</span>&#125;;</span><br><span class="line">        <span class="type">double</span> <span class="variable">totalWeight</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        数组的长度</span></span><br><span class="line">        System.out.println(<span class="string">&quot;数组的长度=&quot;</span> + hens.length);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        遍历数组得到数组所有元素的和，使用for</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; hens.length; i++) &#123;</span><br><span class="line"><span class="comment">//            System.out.println(&quot;第&quot; + (i+1) + &quot;个元素的值为：&quot; + hens[i]);</span></span><br><span class="line">            totalWeight += hens[i];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;总体重为：&quot;</span> + totalWeight + <span class="string">&quot;  平均体重&quot;</span> +</span><br><span class="line">                <span class="string">&quot;为：&quot;</span> + (totalWeight / hens.length));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-数组的三种使用方式"><a href="#4-数组的三种使用方式" class="headerlink" title="4.数组的三种使用方式"></a>4.数组的三种使用方式</h3><h4 id="4-1-动态初始化"><a href="#4-1-动态初始化" class="headerlink" title="4.1 动态初始化"></a>4.1 动态初始化</h4><p>数据类型 数组名[] &#x3D; new 数据类型 [大小];</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221214135407573.png" alt="image-20221214135407573"></p><h5 id="x3D-x3D-内存-x3D-x3D"><a href="#x3D-x3D-内存-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;内存&#x3D;&#x3D;"></a>&#x3D;&#x3D;内存&#x3D;&#x3D;</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221214140254008.png" alt="image-20221214140254008"></p><h5 id="数组的引用-使用-x2F-访问-x2F-获取数组元素"><a href="#数组的引用-使用-x2F-访问-x2F-获取数组元素" class="headerlink" title="数组的引用(使用&#x2F;访问&#x2F;获取数组元素)"></a>数组的引用(使用&#x2F;访问&#x2F;获取数组元素)</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221214140541710.png" alt="image-20221214140541710"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年12月14日</span></span><br><span class="line"><span class="comment"> * 目的</span></span><br><span class="line"><span class="comment"> * 数据类型 数组名[] = new 数据类型 [大小];</span></span><br><span class="line"><span class="comment"> * 循环输入5个成绩，保存到double数组，并输出</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Array02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span>[] score = <span class="keyword">new</span> <span class="title class_">double</span>[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; score.length; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入第&quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot;的值：&quot;</span>);</span><br><span class="line">            score[i] = scanner.nextDouble();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        输出遍历</span></span><br><span class="line">        System.out.println(<span class="string">&quot;==当前数组的情况==&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; score.length; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;第&quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot;的值：&quot;</span> +</span><br><span class="line">                    score[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-2-动态初始化"><a href="#4-2-动态初始化" class="headerlink" title="4.2 动态初始化"></a>4.2 动态初始化</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221214171432884.png" alt="image-20221214171432884"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221214171853742.png" alt="image-20221214171853742"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221214171902056.png" alt="image-20221214171902056"></p><h4 id="4-3-静态初始化"><a href="#4-3-静态初始化" class="headerlink" title="4.3 静态初始化"></a>4.3 静态初始化</h4><p>&#x3D;&#x3D;数据类型 数组名[] &#x3D; {元素值，元素值}&#x3D;&#x3D;</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221214172100851.png" alt="image-20221214172100851"></p><h3 id="5-数组的使用细节"><a href="#5-数组的使用细节" class="headerlink" title="5. 数组的使用细节"></a>5. 数组的使用细节</h3><h4 id="5-1-数组是多个相同类型的组合，实现对这些数据的统一管理"><a href="#5-1-数组是多个相同类型的组合，实现对这些数据的统一管理" class="headerlink" title="5.1  数组是多个相同类型的组合，实现对这些数据的统一管理"></a>5.1  数组是多个相同类型的组合，实现对这些数据的统一管理</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        不能把高精度直接赋值给低精度</span></span><br><span class="line"><span class="comment">//        int[] arr1 = &#123;1,2,3,4,5,1.1&#125;;// 报错</span></span><br></pre></td></tr></table></figure><h4 id="5-2-数组中的元素可以是任何数据类型，包括基本类型和引用类型，但是不能混用。"><a href="#5-2-数组中的元素可以是任何数据类型，包括基本类型和引用类型，但是不能混用。" class="headerlink" title="5.2 数组中的元素可以是任何数据类型，包括基本类型和引用类型，但是不能混用。"></a>5.2 数组中的元素可以是任何数据类型，包括基本类型和引用类型，但是不能混用。</h4><h4 id="5-3-3-数组创建后-如果没有赋值，-有默认值-int-0-short-0-byte-0-long-0-float-0-0-double-0-0-char-u0000-boolean-false-String-null"><a href="#5-3-3-数组创建后-如果没有赋值，-有默认值-int-0-short-0-byte-0-long-0-float-0-0-double-0-0-char-u0000-boolean-false-String-null" class="headerlink" title="5.3 3.数组创建后 如果没有赋值， 有默认值 int 0,short 0,byte 0,long 0,float 0.0,double 0.0,char \u0000 boolean false,String null"></a>5.3 3.数组创建后 如果没有赋值， 有默认值 int 0,short 0,byte 0,long 0,float 0.0,double 0.0,char \u0000 boolean false,String null</h4><h4 id="5-4-使用数组的步骤1-声明数组并开辟空间2给数组各个元素赋值3使用数组"><a href="#5-4-使用数组的步骤1-声明数组并开辟空间2给数组各个元素赋值3使用数组" class="headerlink" title="5.4 使用数组的步骤1.声明数组并开辟空间2给数组各个元素赋值3使用数组"></a>5.4 使用数组的步骤1.声明数组并开辟空间2给数组各个元素赋值3使用数组</h4><h4 id="5-5-数组的下标是从0开始的"><a href="#5-5-数组的下标是从0开始的" class="headerlink" title="5.5 数组的下标是从0开始的"></a>5.5 数组的下标是从0开始的</h4><h4 id="5-6-数组下标必须在指定范围内使用，否则报：下标越界异常，比如-int-arr-x3D-new-int-5-则有效下标为0-4"><a href="#5-6-数组下标必须在指定范围内使用，否则报：下标越界异常，比如-int-arr-x3D-new-int-5-则有效下标为0-4" class="headerlink" title="5.6 数组下标必须在指定范围内使用，否则报：下标越界异常，比如 int[]arr&#x3D;new int[5];则有效下标为0-4"></a>5.6 数组下标必须在指定范围内使用，否则报：下标越界异常，比如 int[]arr&#x3D;new int[5];则有效下标为0-4</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221214173806737.png" alt="image-20221214173806737"></p><h4 id="5-7-数组属引用类型，数组型数据是对象-object"><a href="#5-7-数组属引用类型，数组型数据是对象-object" class="headerlink" title="5.7 数组属引用类型，数组型数据是对象(object)"></a>5.7 数组属引用类型，数组型数据是对象(object)</h4><h3 id="6-数组应用案例"><a href="#6-数组应用案例" class="headerlink" title="6. 数组应用案例"></a>6. 数组应用案例</h3><h4 id="1-创建一个char类型的26个元素的数组，分别放置’A’-‘Z‘"><a href="#1-创建一个char类型的26个元素的数组，分别放置’A’-‘Z‘" class="headerlink" title="1. 创建一个char类型的26个元素的数组，分别放置’A’-‘Z‘"></a>1. 创建一个char类型的26个元素的数组，分别放置’A’-‘Z‘</h4><blockquote><p>带下标之前chars是数组类型</p><p>带下标之后就是char 基本数据类型</p><p>后面需要强制转换</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221214190150084.png" alt="image-20221214190150084"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"><span class="comment">/*2022年12月14日</span></span><br><span class="line"><span class="comment">* 创建一个char类型的26个元素的数组，分别放置&#x27;A&#x27;-&#x27;Z‘。</span></span><br><span class="line"><span class="comment">使用for循环访问所有元素并打印出来。</span></span><br><span class="line"><span class="comment">提示：char类型数据运算&#x27;A&#x27;+2-&gt;&#x27;C*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayExercise01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 思路分析</span></span><br><span class="line"><span class="comment">        1,定义一个数组</span></span><br><span class="line"><span class="comment">        char[]chars new char[26]</span></span><br><span class="line"><span class="comment">        2.因为&#x27;A&#x27;+1=&#x27;B”类推，所以老师使用for来赋值</span></span><br><span class="line"><span class="comment">        3.使用for循环访问所有元素*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">char</span>[] chars = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">26</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; chars.length; i++) &#123; <span class="comment">//循环26次</span></span><br><span class="line"><span class="comment">//            chars 是 char[]</span></span><br><span class="line"><span class="comment">//            chars[i] 是 char</span></span><br><span class="line">            chars[i] = (<span class="type">char</span>)(<span class="string">&#x27;A&#x27;</span> + i);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        循环输出</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; chars.length; i++) &#123;</span><br><span class="line">            System.out.print(chars[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-请求出一个数组int-的最大值"><a href="#2-请求出一个数组int-的最大值" class="headerlink" title="2. 请求出一个数组int[]的最大值"></a>2. 请求出一个数组int[]的最大值</h4><blockquote><p>思路</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//1,定义一个int数组int[]arr=&#123;4,-1,9,10,23&#125;;</span><br><span class="line">//2.假定max=arr[0]是最大值，maxIndex=0;</span><br><span class="line">//3.从下标1开始遍历arr,如果max&lt;当前元素，说明max</span><br><span class="line">//不是真正的最大值，我们就max = 当前元素；maxIndex = 当前元素下标</span><br><span class="line">//4.当我们逼历这个数组arr后，max就是真正的最大值，maxIndex最大值对应的下标</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221215132023412.png" alt="image-20221215132023412"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"><span class="comment">/*2022年12月15日</span></span><br><span class="line"><span class="comment">* 目的：请求出一个数组int[]的最大值&#123;4，-1,9,10,23&#125;，</span></span><br><span class="line"><span class="comment">* 并得到对应的下标*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayExerices02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        请求出一个数组int[]的最大值&#123;4，-1,9,10,23&#125;，并得到对应的下标</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//老韩思路分析</span></span><br><span class="line"><span class="comment">//1,定义一个int数组int[]arr=&#123;4,-1,9,10,23&#125;;</span></span><br><span class="line"><span class="comment">//2.假定max=arr[0]是最大值，maxIndex=0;</span></span><br><span class="line"><span class="comment">//3.从下标1开始遍历arr,如果max&lt;当前元素，说明max</span></span><br><span class="line"><span class="comment">//不是真正的最大值，我们就max = 当前元素；maxIndex = 当前元素下标</span></span><br><span class="line"><span class="comment">//4.当我们逼历这个数组arr后，max就是真正的最大值，maxIndex最大值对应的下标</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] arr=&#123;<span class="number">4</span>,-<span class="number">1</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">23</span>&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> arr[<span class="number">0</span>];<span class="comment">// 假定第一个元素就是最大值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">maxIndex</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//下标</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (max &lt; arr[i]) &#123; <span class="comment">//如果 max &lt; 当前元素</span></span><br><span class="line">               max = arr[i]; <span class="comment">// 把max 设置成 当前元素</span></span><br><span class="line">               maxIndex = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        遍历数组输出</span></span><br><span class="line"><span class="comment">/*        for (int i = 0; i &lt; arr.length; i++) &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//      输出值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;最大值为：&quot;</span> + max +</span><br><span class="line">                <span class="string">&quot;   下标为：&quot;</span> + maxIndex);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-x3D-x3D-数组的赋值机制-x3D-x3D-Assign-–分配"><a href="#7-x3D-x3D-数组的赋值机制-x3D-x3D-Assign-–分配" class="headerlink" title="7. &#x3D;&#x3D;数组的赋值机制&#x3D;&#x3D;(Assign –分配)"></a>7. &#x3D;&#x3D;数组的赋值机制&#x3D;&#x3D;(Assign –分配)</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221215132633697.png" alt="image-20221215132633697"></p><h4 id="7-1-基本数据类型是值拷贝"><a href="#7-1-基本数据类型是值拷贝" class="headerlink" title="7.1 基本数据类型是值拷贝"></a>7.1 基本数据类型是值拷贝</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221215132721594.png" alt="image-20221215132721594"></p><h4 id="7-2-数组在默认情况下是引用传递，赋的值是地址，赋值方式为引用传递"><a href="#7-2-数组在默认情况下是引用传递，赋的值是地址，赋值方式为引用传递" class="headerlink" title="7.2 数组在默认情况下是引用传递，赋的值是地址，赋值方式为引用传递"></a>7.2 数组在默认情况下是引用传递，赋的值是地址，赋值方式为引用传递</h4><blockquote><p>修改arr2的值，arr1也会改变</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221215133344021.png" alt="image-20221215133344021"></p><h4 id="7-3-值传递和引用传递的区别示意图"><a href="#7-3-值传递和引用传递的区别示意图" class="headerlink" title="7.3 值传递和引用传递的区别示意图"></a>7.3 值传递和引用传递的区别示意图</h4><p>值拷贝</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221215134609237.png" alt="image-20221215134609237"></p><p>引用传递&#x2F;地址拷贝</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221215134806209.png" alt="image-20221215134806209"></p><h3 id="8-数组拷贝"><a href="#8-数组拷贝" class="headerlink" title="8. 数组拷贝"></a>8. 数组拷贝</h3><p>将int[]arr1&#x3D;{10,20,30);拷贝到arr2数组，要求数据空间是独立的</p><blockquote><p>创建一个新的数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int[] arr2 = new int[arr1.length];</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221215140335143.png" alt="image-20221215140335143"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"><span class="comment">/*2022年12月15日</span></span><br><span class="line"><span class="comment">* 数组拷贝</span></span><br><span class="line"><span class="comment">* 将int[]arr1=&#123;10,20,30);拷贝到arr2数组，</span></span><br><span class="line"><span class="comment">* 要求数据空间是独立的*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayCopy</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr1 = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        先创建一个新的数组arr2，开辟新的数据空间</span></span><br><span class="line"><span class="comment">//        大小 arr1.length</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[arr1.length];</span><br><span class="line"></span><br><span class="line"><span class="comment">//        遍历 arr1 ，把每个元素拷贝到对应的位置</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">            arr2[i] = arr1[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr2.length; i++) &#123;</span><br><span class="line">            System.out.println(arr2[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="9-数组的反转（ArrayReverse"><a href="#9-数组的反转（ArrayReverse" class="headerlink" title="9. 数组的反转（ArrayReverse)"></a>9. 数组的反转（ArrayReverse)</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217200342377.png" alt="image-20221217200342377"></p><p>要求：把数组的元素内容反转。ArrayReverse.java<br>arr{11,22,33,44,55,66}→{66,55,44,33,22,11}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] temp = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length / <span class="number">2</span>; i++) &#123;</span><br><span class="line">    temp[i] = arr[i];</span><br><span class="line">    arr[i] = arr[(arr.length - <span class="number">1</span>) - i];</span><br><span class="line">    arr[(arr.length - <span class="number">1</span>) - i] = temp[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    System.out.print(arr[i] + <span class="string">&quot;  &quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优化后</p><p>ArrayReverse</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"><span class="comment">/*2022年12月17日</span></span><br><span class="line"><span class="comment">* 目的：练习数组的转换</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayReverse</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        定义数组</span></span><br><span class="line">        <span class="type">int</span>[]arr=&#123;<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span>,<span class="number">66</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        翻转前的数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;===翻转前的数组===&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//老韩思路</span></span><br><span class="line"><span class="comment">//1.把arr[0]和arr[5] 进行交换&#123;66,22,33,44,55,11&#125;</span></span><br><span class="line"><span class="comment">//2. 把arr[1]和arr[4] 进行交换&#123;66,55,33,44,22,11</span></span><br><span class="line"><span class="comment">// 3.把arr[2]和arr[3] 进行交换&#123;66,55,44,33,22,11</span></span><br><span class="line"><span class="comment">// 4. 一共要交换3次 = arr.length / 2</span></span><br><span class="line"><span class="comment">// 5. 每次交换时，对应的下标 是 arr[i] 和 arr[arr.length - 1 -i]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        定义一个数组存放数组的值</span></span><br><span class="line"><span class="comment">//        循环让arr[5] 的值等于 a[0]</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> arr.length; <span class="comment">//计算数组的长度</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len / <span class="number">2</span>; i++) &#123;</span><br><span class="line">            temp = arr[i]; <span class="comment">//保存</span></span><br><span class="line">            arr[i] = arr[(len - <span class="number">1</span>) - i];</span><br><span class="line">            arr[(len - <span class="number">1</span>) - i] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="comment">//        翻转后的数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;===翻转后的数组===&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*        for (int i = 0; i &lt; arr.length; i++) &#123;</span></span><br><span class="line"><span class="comment">            a[i] = arr[i];</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        for (int i = 0; i &lt; arr.length; i++) &#123;</span></span><br><span class="line"><span class="comment">            arr[arr.length - 1 -i] = a[i];</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="逆序赋值"><a href="#逆序赋值" class="headerlink" title="逆序赋值()"></a>逆序赋值()</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ArrayReverise01</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217202315660.png" alt="image-20221217202315660"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217205446992.png" alt="image-20221217205446992"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217205531194.png" alt="image-20221217205531194"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217211926319.png" alt="image-20221217211926319"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayReverise01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr1 = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">66</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[arr1.length];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> arr1.length, j = <span class="number">0</span>; i &gt;=<span class="number">0</span>; i--, j++) &#123;</span><br><span class="line">            arr2[j] = arr1[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        arr1 = arr2;</span><br><span class="line">        System.out.println(<span class="string">&quot;翻转后&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">            System.out.println(arr1[i] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="自己想的"><a href="#自己想的" class="headerlink" title="自己想的"></a>自己想的</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayReverse03</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//        定义数组</span></span><br><span class="line">        <span class="type">int</span>[]arr=&#123;<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span>,<span class="number">66</span>&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>,j = arr.length - <span class="number">1</span>; i &lt; arr.length / <span class="number">2</span>; i++,j--) &#123;</span><br><span class="line">            temp = arr[i];</span><br><span class="line">            arr[i] = arr[j];</span><br><span class="line">            arr[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.println(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="10-数组添加"><a href="#10-数组添加" class="headerlink" title="10.数组添加"></a>10.数组添加</h3><p>ArrayAdd.java</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217212129355.png" alt="image-20221217212129355"></p><h6 id="思路-10"><a href="#思路-10" class="headerlink" title="思路"></a>思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217214046434.png" alt="image-20221217214046434"></p><h6 id="代码-12"><a href="#代码-12" class="headerlink" title="代码"></a>代码</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217214703936.png" alt="image-20221217214703936"></p><h6 id="自己写的代码-2"><a href="#自己写的代码-2" class="headerlink" title="自己写的代码"></a>自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"><span class="comment">/*2022年12月17日</span></span><br><span class="line"><span class="comment">* 目的：数组扩容*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 要求：实现动态的给数组添加元素效果，：</span></span><br><span class="line"><span class="comment">实现对数组扩容。ArrayAdd</span></span><br><span class="line"><span class="comment">1)原始数组使用静态分配int]arr=&#123;12,3&#125;</span></span><br><span class="line"><span class="comment">2)增加的元素，直接放在数组的最后arr=&#123;1,2,3,4&#125;</span></span><br><span class="line"><span class="comment">arrNew=&#123;1,2,3,4&#125;</span></span><br><span class="line"><span class="comment">3)用户可以通过如下方法来决定是否继续添加，添加成功，是否继续？y/n*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayAdd</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] newArr = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//        遍历赋值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            newArr[i] = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        把4赋给新的数组</span></span><br><span class="line">        newArr[arr.length] = <span class="number">4</span>;</span><br><span class="line"><span class="comment">//        指向新的数组</span></span><br><span class="line">        arr = newArr;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===arr扩容后元素情况===&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;arr[&quot;</span> + i + <span class="string">&quot;]= &quot;</span> + arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="用户可以通过如下方法来决定是否继续添加，添加成功，是否继续？y-x2F-n"><a href="#用户可以通过如下方法来决定是否继续添加，添加成功，是否继续？y-x2F-n" class="headerlink" title="用户可以通过如下方法来决定是否继续添加，添加成功，是否继续？y&#x2F;n"></a>用户可以通过如下方法来决定是否继续添加，添加成功，是否继续？y&#x2F;n</h4><h6 id="思路-11"><a href="#思路-11" class="headerlink" title="思路"></a>思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217220649773.png" alt="image-20221217220649773"></p><h6 id="Scanner接收字符的方法"><a href="#Scanner接收字符的方法" class="headerlink" title="Scanner接收字符的方法"></a>Scanner接收字符的方法</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">char</span> <span class="variable">key</span> <span class="operator">=</span> scanner.next().charAt(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h6 id="代码-13"><a href="#代码-13" class="headerlink" title="代码"></a>代码</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217225038096.png" alt="image-20221217225038096"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217225104147.png" alt="image-20221217225104147"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217225126198.png" alt="image-20221217225126198"></p><h6 id="自己写的代码-3"><a href="#自己写的代码-3" class="headerlink" title="自己写的代码"></a>自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年12月17日</span></span><br><span class="line"><span class="comment"> * 目的：数组扩容*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 要求：实现动态的给数组添加元素效果，：</span></span><br><span class="line"><span class="comment">实现对数组扩容。ArrayAdd</span></span><br><span class="line"><span class="comment">1)原始数组使用静态分配int]arr=&#123;12,3&#125;</span></span><br><span class="line"><span class="comment">2)增加的元素，直接放在数组的最后arr=&#123;1,2,3,4&#125;</span></span><br><span class="line"><span class="comment">arrNew=&#123;1,2,3,4&#125;</span></span><br><span class="line"><span class="comment">3)用户可以通过如下方法来决定是否继续添加，添加成功，是否继续？y/n*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayAdd</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        无限循环，如果输入n，打断循环，退出</span></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="comment">//           建立一个新的数组</span></span><br><span class="line">            <span class="type">int</span>[] newArr = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//        遍历赋值</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">                newArr[i] = arr[i];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//          把4赋给新的数组</span></span><br><span class="line"><span class="comment">//         把addNum赋值给 newArr 最后一个元素</span></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入添加的值：&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">addNum</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            newArr[arr.length] = addNum;</span><br><span class="line"><span class="comment">//        指向新的数组</span></span><br><span class="line">            arr = newArr;</span><br><span class="line"><span class="comment">//            输出arr 看看效果</span></span><br><span class="line">            System.out.println(<span class="string">&quot;===arr扩容后元素情况===&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;arr[&quot;</span> + i + <span class="string">&quot;]= &quot;</span> + arr[i] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="comment">//            问用户是否接收</span></span><br><span class="line">            System.out.println(<span class="string">&quot;是否继续添加 y/n&quot;</span>);</span><br><span class="line"><span class="comment">//            接收k并判断</span></span><br><span class="line">            <span class="type">char</span> <span class="variable">key</span> <span class="operator">=</span> scanner.next().charAt(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (key == <span class="string">&#x27;n&#x27;</span> || key == <span class="string">&#x27;N&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key == <span class="string">&#x27;y&#x27;</span> || key == <span class="string">&#x27;Y&#x27;</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请继续：&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//                System.out.println(&quot;您的输入有误，请重新输入 y/n&quot;);</span></span><br><span class="line">                System.out.println(<span class="string">&quot;您的输入有误，已退出&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">        &#125; <span class="keyword">while</span> (<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;退出&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="数组缩减"><a href="#数组缩减" class="headerlink" title="数组缩减"></a>数组缩减</h4><h6 id="思路-12"><a href="#思路-12" class="headerlink" title="思路"></a>思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217231559225.png" alt="image-20221217231559225"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221217231718049.png" alt="image-20221217231718049"></p><h6 id="代码-14"><a href="#代码-14" class="headerlink" title="代码"></a>代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 2022年12月17日</span></span><br><span class="line"><span class="comment"> * 数组减少*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayReduce</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        从键盘输入</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        输出新的数组</span></span><br><span class="line">            System.out.println(<span class="string">&quot;===原来的数组===&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">                System.out.print(arr[i] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//        定义一个新的数组</span></span><br><span class="line">            <span class="type">int</span>[] arrNew = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length - <span class="number">1</span>];</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        遍历数组，接收数值</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arrNew.length; i++) &#123;</span><br><span class="line">                arrNew[i] = arr[i];</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//        指向新的数组</span></span><br><span class="line">            arr = arrNew;</span><br><span class="line"></span><br><span class="line">            System.out.println();</span><br><span class="line"><span class="comment">//        输出新的数组</span></span><br><span class="line">            System.out.println(<span class="string">&quot;===新的数组===&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arrNew.length; i++) &#123;</span><br><span class="line">                System.out.print(arrNew[i] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//            如果只剩下最后一个元素则直接退出</span></span><br><span class="line">            <span class="keyword">if</span> (arr.length == <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;数组中只有一个元素&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入是否缩减 y/n&quot;</span>);</span><br><span class="line"><span class="comment">//            接收判断的值</span></span><br><span class="line">            <span class="type">char</span> <span class="variable">key</span> <span class="operator">=</span> scanner.next().charAt(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//            判断是n打断否则继续</span></span><br><span class="line">            <span class="keyword">if</span> (key == <span class="string">&#x27;n&#x27;</span> || key == <span class="string">&#x27;N&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">while</span> (<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;您已退出&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="11-二维数组-–TwoDimensionalArray"><a href="#11-二维数组-–TwoDimensionalArray" class="headerlink" title="11. 二维数组 –TwoDimensionalArray"></a>11. 二维数组 –TwoDimensionalArray</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218121004295.png" alt="image-20221218121004295"></p><h4 id="1-快速入门"><a href="#1-快速入门" class="headerlink" title="1. 快速入门"></a>1. 快速入门</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218121241017.png" alt="image-20221218121241017"></p><h5 id="可以这样理解，原来的一维数组的每个元素是一维数组，就构成二维数组"><a href="#可以这样理解，原来的一维数组的每个元素是一维数组，就构成二维数组" class="headerlink" title="可以这样理解，原来的一维数组的每个元素是一维数组，就构成二维数组"></a>可以这样理解，原来的一维数组的每个元素是一维数组，就构成二维数组</h5><h5 id="解毒"><a href="#解毒" class="headerlink" title="解毒"></a>解毒</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218122347835.png" alt="image-20221218122347835"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218122744456.png" alt="image-20221218122744456"></p><h5 id="自己写的代码-4"><a href="#自己写的代码-4" class="headerlink" title="自己写的代码"></a>自己写的代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"><span class="comment">/*2022年12月18日</span></span><br><span class="line"><span class="comment">* 目的：二维数组入门*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TwoDimensionalArray01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 请用二维数组输出如下图形</span></span><br><span class="line"><span class="comment">            000000</span></span><br><span class="line"><span class="comment">            001000</span></span><br><span class="line"><span class="comment">            020300</span></span><br><span class="line"><span class="comment">            000000</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        什么是二维数组</span></span><br><span class="line"><span class="comment">//可以这样理解，原来的一维数组的每个元素是一维数组，就构成二维数组</span></span><br><span class="line">        <span class="type">int</span>[][] arr = &#123; &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">                        &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">                        &#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">                        &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125; &#125;;</span><br><span class="line"><span class="comment">//        输出二维图形</span></span><br><span class="line"><span class="comment">//        输出四个大括号，相当于四个元素</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*          输出每个大括号里的元素*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//            于输出一个大括号</span></span><br><span class="line"><span class="comment">//            arr[i] 相当于 第几个括号</span></span><br><span class="line"><span class="comment">//            arr[i].length 相当于第几个括号的长度</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line">                System.out.print(arr[i][j] + <span class="string">&quot; &quot;</span>); <span class="comment">//输出一维数组</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//            输出一个括号换一行</span></span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);<span class="comment">//输出一行之后换一行</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-二维数组的内存布局"><a href="#2-二维数组的内存布局" class="headerlink" title="2. 二维数组的内存布局"></a>2. 二维数组的内存布局</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218123737179.png" alt="image-20221218123737179"></p><h5 id="二维数组在内存的存在形式-画图"><a href="#二维数组在内存的存在形式-画图" class="headerlink" title="二维数组在内存的存在形式(画图)"></a>二维数组在内存的存在形式(画图)</h5><p>二维数组先是指向一个空间，空间里是多个一维数组</p><p>一维数组里在指向真正存放数组的空间</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218154351187.png" alt="image-20221218154351187"></p><blockquote><ol><li>arr[0] 指向的绿框不是一个具体的值，他指的是一个地址</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218153945107.png" alt="image-20221218153945107"></p><blockquote><ol start="2"><li>一维数组在另外一个空间</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218154128215.png" alt="image-20221218154128215"></p><blockquote><ol start="3"><li>执行arr语句</li></ol><p>先找arr[1] 的地址，到那以后再找一维数组的值改成8</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218154729180.png" alt="image-20221218154729180"></p><h4 id="3-二维数组的使用"><a href="#3-二维数组的使用" class="headerlink" title="3. 二维数组的使用"></a>3. 二维数组的使用</h4><h5 id="3-1-动态初始化"><a href="#3-1-动态初始化" class="headerlink" title="3.1 动态初始化"></a>3.1 动态初始化</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[][] arr;</span><br><span class="line">arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>][<span class="number">3</span>];</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218155058035.png" alt="image-20221218155058035"></p><h5 id="3-2-动态初始化-列数不确定"><a href="#3-2-动态初始化-列数不确定" class="headerlink" title="3.2 动态初始化 -列数不确定"></a>3.2 动态初始化 -列数不确定</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TwoDimensionalArray03</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218155320702.png" alt="image-20221218155320702"></p><h6 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218155656195.png" alt="image-20221218155656195"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218155729053.png" alt="image-20221218155729053"></p><h6 id="思路-13"><a href="#思路-13" class="headerlink" title="思路"></a>思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218160552486.png" alt="image-20221218160552486"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218160626132.png" alt="image-20221218160626132"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218160943949.png" alt="image-20221218160943949"></p><h6 id="自己写的代码-5"><a href="#自己写的代码-5" class="headerlink" title="自己写的代码"></a>自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"><span class="comment">/*2022年12月18日</span></span><br><span class="line"><span class="comment">* 练习动态初始化，列数不确定*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TwoDimensionalArray03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 1</span></span><br><span class="line"><span class="comment">        * 2 2</span></span><br><span class="line"><span class="comment">        * 3 3 3</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        创建二维数组，只确定有3个一维数组，</span></span><br><span class="line"><span class="comment">//        但是每个一维数组还没有开空间</span></span><br><span class="line">        <span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">6</span>][];</span><br><span class="line"></span><br><span class="line"><span class="comment">//        遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;arr.length ; i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//            给每个一维数组开空间</span></span><br><span class="line">            arr[i] = <span class="keyword">new</span> <span class="title class_">int</span>[i+<span class="number">1</span>]; <span class="comment">//如果没有给一维数组new，那么arr[i]就是null</span></span><br><span class="line"><span class="comment">//            赋值</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line">                arr[i][j] = j + <span class="number">1</span>; <span class="comment">//赋值</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line">                System.out.print(arr[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3-3-静态初始化"><a href="#3-3-静态初始化" class="headerlink" title="3. 3 静态初始化"></a>3. 3 静态初始化</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218165455541.png" alt="image-20221218165455541"></p><h4 id="4-二维数组的练习"><a href="#4-二维数组的练习" class="headerlink" title="4. 二维数组的练习"></a>4. 二维数组的练习</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218170053226.png" alt="image-20221218170053226"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TwoDimensionalArray05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[][] arr = &#123;&#123;<span class="number">4</span>,<span class="number">6</span>&#125;, &#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">7</span>&#125;,</span><br><span class="line">                        &#123;-<span class="number">2</span>&#125;&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line">                sum += arr[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;sum = &quot;</span> + sum);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="4-2-x3D-x3D-杨辉三角-x3D-x3D"><a href="#4-2-x3D-x3D-杨辉三角-x3D-x3D" class="headerlink" title="4.2 &#x3D;&#x3D;杨辉三角&#x3D;&#x3D;"></a>4.2 &#x3D;&#x3D;杨辉三角&#x3D;&#x3D;</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218170244234.png" alt="image-20221218170244234"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218170600199.png" alt="image-20221218170600199"></p><h6 id="思路-14"><a href="#思路-14" class="headerlink" title="思路"></a>思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218175619706.png" alt="image-20221218175619706"></p><h6 id="自己写的代码-6"><a href="#自己写的代码-6" class="headerlink" title="自己写的代码"></a>自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年12月18日</span></span><br><span class="line"><span class="comment"> * 练习杨辉三角</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">YangHui</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        1</span></span><br><span class="line"><span class="comment">        1 1</span></span><br><span class="line"><span class="comment">        1 2 1</span></span><br><span class="line"><span class="comment">        1 3 3 1</span></span><br><span class="line"><span class="comment">        1 4 6 4 1</span></span><br><span class="line"><span class="comment">        1 5 10 10 5 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        规律</span></span><br><span class="line"><span class="comment">        1.第一行有1个元素，第n行有n个元素</span></span><br><span class="line"><span class="comment">        2.每一行的第一个元素和最后一个元素都是1</span></span><br><span class="line"><span class="comment">        3.从第三行开始，对于非第一个元素和最后一个元素的元素的值.arr[i][j]</span></span><br><span class="line"><span class="comment">        arr[i][j]=arr[i-1][j]+arr[i-1][j-1];//必须找到这个规律</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        创建二维数组，一共十行</span></span><br><span class="line">        <span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>][];</span><br><span class="line"></span><br><span class="line"><span class="comment">//        遍历10行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"><span class="comment">//            给一维数组开辟空间</span></span><br><span class="line">            arr[i] = <span class="keyword">new</span> <span class="title class_">int</span>[i + <span class="number">1</span>]; <span class="comment">//1行1个，2行2个 i行i+1个</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//                如果j是第一个或是最后一个，那么都等于1</span></span><br><span class="line">                <span class="keyword">if</span> (j == <span class="number">0</span> || j == arr[i].length- <span class="number">1</span>) &#123;</span><br><span class="line">                    arr[i][j] = <span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123; <span class="comment">//否则就是中间的</span></span><br><span class="line">                    arr[i][j] = arr[i-<span class="number">1</span>][j] + arr[i-<span class="number">1</span>][j-<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        输出杨辉三角</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line">                System.out.print(arr[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(); <span class="comment">//换行</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5-二维数组的使用细节"><a href="#5-二维数组的使用细节" class="headerlink" title="5. 二维数组的使用细节"></a>5. 二维数组的使用细节</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218175826311.png" alt="image-20221218175826311"></p><h6 id="二维数组的声明方式有："><a href="#二维数组的声明方式有：" class="headerlink" title="二维数组的声明方式有："></a>二维数组的声明方式有：</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[][] y 或者 <span class="type">int</span>[] y[] 或者 <span class="type">int</span> y[][]</span><br></pre></td></tr></table></figure><h6 id="维数组实际上是由多个一维数组组成的，它的各个一维数组的长度可以相同也可以不相同。比如："><a href="#维数组实际上是由多个一维数组组成的，它的各个一维数组的长度可以相同也可以不相同。比如：" class="headerlink" title="维数组实际上是由多个一维数组组成的，它的各个一维数组的长度可以相同也可以不相同。比如："></a>维数组实际上是由多个一维数组组成的，它的各个一维数组的长度可以相同也可以不相同。比如：</h6><p>map[][]是一个二维数组</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218180216354.png" alt="image-20221218180216354"></p><h4 id="6-二维数组课堂练习"><a href="#6-二维数组课堂练习" class="headerlink" title="6. 二维数组课堂练习"></a>6. <code>二维数组课堂练习</code></h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218180832921.png" alt="image-20221218180832921"></p><h3 id="12-本章作业"><a href="#12-本章作业" class="headerlink" title="12. 本章作业"></a>12. 本章作业</h3><h5 id="1-3"><a href="#1-3" class="headerlink" title="1."></a>1.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218200834860.png" alt="image-20221218200834860"></p><h5 id="2-5"><a href="#2-5" class="headerlink" title="2."></a>2.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218201340291.png" alt="image-20221218201340291"></p><h5 id="3-3"><a href="#3-3" class="headerlink" title="3."></a>3.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218201301335.png" alt="image-20221218201301335"></p><h5 id="4-扩容-定位-P187"><a href="#4-扩容-定位-P187" class="headerlink" title="4.扩容 + 定位 P187"></a>4.扩容 + 定位 P187</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218202214942.png" alt="image-20221218202214942"></p><h6 id="思路-15"><a href="#思路-15" class="headerlink" title="思路"></a>思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218202831625.png" alt="image-20221218202831625"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219065507786.png" alt="image-20221219065507786"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219070208400.png" alt="image-20221219070208400"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219071232915.png" alt="image-20221219071232915"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221219071723730.png" alt="image-20221219071723730"></p><h6 id="自己写的代码-7"><a href="#自己写的代码-7" class="headerlink" title="自己写的代码"></a>自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.array_;</span><br><span class="line"><span class="comment">/*2022年12月18日</span></span><br><span class="line"><span class="comment">* 4.已知有个升序的数组，要求插入一个元素，该数组顺序依然是升序，比如：</span></span><br><span class="line"><span class="comment">[10,12,45,90],添加23后，数组为[10,12,23,45,90]*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        定义一个数组</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">10</span>, <span class="number">12</span>, <span class="number">45</span>, <span class="number">90</span>, <span class="number">100</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 1. 定义一个索引判断往哪插</span></span><br><span class="line"><span class="comment">        * 2. 扩容*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">insertNum</span> <span class="operator">=</span> <span class="number">23</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"><span class="comment">//            如果insertNum &lt;= arr[i] 就说明要插在那</span></span><br><span class="line">            <span class="keyword">if</span> (insertNum &lt;= arr[i]) &#123;</span><br><span class="line">                index = i;</span><br><span class="line">                System.out.println(<span class="string">&quot;index = &quot;</span> + index);</span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">//打断跳出来，否则会一直变</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        循环结束，如果index 还等于-1 那么就说明应该插在最后</span></span><br><span class="line">        <span class="keyword">if</span> (index == -<span class="number">1</span>) &#123;</span><br><span class="line">            index = arr.length;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        定义一个新数组</span></span><br><span class="line">        <span class="type">int</span>[] newArr = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length + <span class="number">1</span>];</span><br><span class="line"><span class="comment">//        遍历</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = <span class="number">0</span>; i &lt; newArr.length; i++) &#123; <span class="comment">//i新数组，j原数组</span></span><br><span class="line"><span class="comment">//            如果index不等于i的值，就说明不是插入的值，就赋值过去</span></span><br><span class="line">            <span class="keyword">if</span> (index != i) &#123;</span><br><span class="line"><span class="comment">//                赋值</span></span><br><span class="line">                newArr[i] = arr[j];</span><br><span class="line">                j++; <span class="comment">//原数组下标加1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//                否则就说明，这个位置是要插入的数</span></span><br><span class="line">                newArr[i] = insertNum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        arr指向新数组</span></span><br><span class="line">        arr = newArr;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        输出</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; newArr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="5-1"><a href="#5-1" class="headerlink" title="5."></a>5.</h5><p>5.随机生成10个整数(1100的范围)保存到数组，并倒序打印以及求平均值、求最大<br>值和最大值的下标、并查找里面是否有8 Homework05.java</p><h5 id="6-1"><a href="#6-1" class="headerlink" title="6."></a>6.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221229131312545.png" alt="image-20221229131312545"></p><h6 id=""><a href="#" class="headerlink" title=""></a></h6><h6 id="-1"><a href="#-1" class="headerlink" title=""></a></h6><h2 id="排序-–Sort"><a href="#排序-–Sort" class="headerlink" title="排序 –Sort"></a>排序 –Sort</h2><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218082309022.png" alt="image-20221218082309022"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218082359614.png" alt="image-20221218082359614"></p><h3 id="冒泡排序-–BubbleSort-java"><a href="#冒泡排序-–BubbleSort-java" class="headerlink" title="冒泡排序 –BubbleSort.java"></a>冒泡排序 –BubbleSort.java</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218082515471.png" alt="image-20221218082515471"></p><h5 id="思路-16"><a href="#思路-16" class="headerlink" title="思路"></a>思路</h5><p>第一轮</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218083116738.png" alt="image-20221218083116738"></p><p>第二轮</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218083153713.png" alt="image-20221218083153713"></p><p>第三轮</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218083306176.png" alt="image-20221218083306176"></p><p>第四轮</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218083351862.png" alt="image-20221218083351862"></p><h5 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218083837261.png" alt="image-20221218083837261"></p><h5 id="代码-15"><a href="#代码-15" class="headerlink" title="代码"></a>代码</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218093147060.png" alt="image-20221218093147060"></p><h5 id="自己写的代码-8"><a href="#自己写的代码-8" class="headerlink" title="自己写的代码"></a>自己写的代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.sort;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年12月18日</span></span><br><span class="line"><span class="comment"> * 冒泡排序</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BubbleSort</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        化繁为简，先死后活</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">24</span>, <span class="number">69</span>, <span class="number">80</span>, <span class="number">57</span>, <span class="number">13</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        1. 先把最大的数放到最后一位</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//        五个数组进行四轮排序</span></span><br><span class="line"><span class="comment">//        先死后活</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123; <span class="comment">//4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//            第一轮进行4次，第二轮3次，第三轮2次，第四轮一次</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123; <span class="comment">//进行4次比较</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123; <span class="comment">//如果前面的数大于后面的数就交换</span></span><br><span class="line">                    temp = arr[j];</span><br><span class="line">                    arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//        输出</span></span><br><span class="line">            System.out.println(<span class="string">&quot;\n第&quot;</span>+ (i+<span class="number">1</span>) +<span class="string">&quot;轮排序&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                System.out.print(arr[j] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查找-–Search"><a href="#查找-–Search" class="headerlink" title="查找  –Search"></a>查找  –Search</h2><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218093409570.png" alt="image-20221218093409570"></p><h3 id="1-顺序查找-–SeqSearch-java"><a href="#1-顺序查找-–SeqSearch-java" class="headerlink" title="1. 顺序查找  –SeqSearch.java"></a>1. 顺序查找  –SeqSearch.java</h3><h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218105518457.png" alt="image-20221218105518457"></p><h4 id="代码-16"><a href="#代码-16" class="headerlink" title="代码"></a>代码</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218105441177.png" alt="image-20221218105441177"></p><h4 id="编程思想"><a href="#编程思想" class="headerlink" title="编程思想"></a><code>编程思想</code></h4><blockquote><p>定义一个索引等于 <strong>-1</strong>，当发现找到目标时，把索引的值改为目标值的下标</p><p>如果没有找到，在循环结束后索引应该还是为 <strong>-1</strong></p></blockquote><h5 id="代码-17"><a href="#代码-17" class="headerlink" title="代码"></a>代码</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218120416611.png" alt="image-20221218120416611"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221218120501242.png" alt="image-20221218120501242"></p><h5 id="自己写的代码-9"><a href="#自己写的代码-9" class="headerlink" title="自己写的代码"></a>自己写的代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.search_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年12月18日</span></span><br><span class="line"><span class="comment"> * 练习顺序查找*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SeqSearch</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">     <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 有一个数列：白眉鹰王、金毛狮王、紫衫龙王、青翼蝠王</span></span><br><span class="line"><span class="comment">        猜数游戏：从键盘中任意输入一个名称，</span></span><br><span class="line"><span class="comment">        判断数列中是否包含此名称【顺序查找】</span></span><br><span class="line"><span class="comment">        要求：如果找到了，就提示找到，并给出下标值。</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">        String[] arr = &#123;<span class="string">&quot;白眉鹰王&quot;</span>,<span class="string">&quot;金毛狮王&quot;</span>,<span class="string">&quot;紫衫龙王&quot;</span>,<span class="string">&quot;青翼蝠王&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="comment">//       从键盘上输入字符串</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入要查找的字符串：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> scanner.next();</span><br><span class="line"></span><br><span class="line"><span class="comment">//            给一个标记位 -1</span></span><br><span class="line"><span class="comment">//            如果标记为等于-1就是没找到</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//            如果找到了就打断循环</span></span><br><span class="line">            <span class="keyword">if</span> (key.equals(arr[i])) &#123;</span><br><span class="line"><span class="comment">//                把i 保存到 index</span></span><br><span class="line">                index = i;</span><br><span class="line">                System.out.println(<span class="string">&quot;恭喜你找到了！&quot;</span> + key);</span><br><span class="line"><span class="comment">//                返回下标</span></span><br><span class="line">                System.out.println(<span class="string">&quot;下标为：&quot;</span> + i);</span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">//退出</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        在循环外，运行到这了，就说明循环结束还没有找到</span></span><br><span class="line">        <span class="keyword">if</span> (index == -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;sorry, 没有找到:&quot;</span> + key);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-6"><a href="#2-6" class="headerlink" title="2."></a>2.</h3><h2 id="idea"><a href="#idea" class="headerlink" title="idea"></a>idea</h2><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130224311279.png" alt="image-20221130224311279"></p><h3 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130224202727.png" alt="image-20221130224202727">)</p><h3 id="idea快捷键"><a href="#idea快捷键" class="headerlink" title="idea快捷键"></a>idea快捷键</h3><blockquote><ol><li>搜索 delete</li><li>搜duplicate</li><li></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221113081308576.png" alt="image-20221113081308576"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221113080830417.png" alt="image-20221113080830417"></p><h4 id="自动导包"><a href="#自动导包" class="headerlink" title="自动导包"></a>自动导包</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221113082120322.png" alt="image-20221113082120322"></p><h4 id="快速格式化代码-Ctrl-ALT-L"><a href="#快速格式化代码-Ctrl-ALT-L" class="headerlink" title="快速格式化代码 Ctrl + ALT + L"></a>快速格式化代码 Ctrl + ALT + L</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221113084533829.png" alt="image-20221113084533829"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221113084410276.png" alt="image-20221113084410276"></p><h4 id="快速运行程序-自己定义-alt-b"><a href="#快速运行程序-自己定义-alt-b" class="headerlink" title="快速运行程序 自己定义 alt + b"></a>快速运行程序 自己定义 alt + b</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221113084905759.png" alt="image-20221113084905759"></p><h4 id="生成构造器-alt-insert"><a href="#生成构造器-alt-insert" class="headerlink" title="生成构造器 alt + insert"></a>生成构造器 alt + insert</h4><h4 id="查看类的继承关系-ctrl-H"><a href="#查看类的继承关系-ctrl-H" class="headerlink" title="查看类的继承关系 ctrl + H"></a>查看类的继承关系 ctrl + H</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221113091036434.png" alt="image-20221113091036434"></p><h4 id="ctrl-B-可以定位到方法"><a href="#ctrl-B-可以定位到方法" class="headerlink" title="ctrl + B 可以定位到方法"></a>ctrl + B 可以定位到方法</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221113091057115.png" alt="image-20221113091057115"></p><h4 id="自动的分配变量名，通过-在后面-var"><a href="#自动的分配变量名，通过-在后面-var" class="headerlink" title="自动的分配变量名，通过 在后面.var"></a>自动的分配变量名，通过 在后面.var</h4><h4 id="自定义模板"><a href="#自定义模板" class="headerlink" title="自定义模板"></a>自定义模板</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221113111736276.png" alt="image-20221113111736276"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221113111919287.png" alt="image-20221113111919287"></p><blockquote><p>指定范围，选Java</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221113112009737.png" alt="image-20221113112009737"></p><h2 id="包"><a href="#包" class="headerlink" title="包"></a>包</h2><h3 id="1-包的引出"><a href="#1-包的引出" class="headerlink" title="1. 包的引出"></a>1. 包的引出</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230106155303952.png" alt="image-20230106155303952"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230106155335602.png" alt="image-20230106155335602"></p><h3 id="1-作用"><a href="#1-作用" class="headerlink" title="1.作用"></a>1.作用</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221113112245527.png" alt="image-20221113112245527"></p><h3 id="2-语法"><a href="#2-语法" class="headerlink" title="2.语法"></a>2.语法</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114184249692.png" alt="image-20221114184249692"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230107084138787.png" alt="image-20230107084138787"></p><h3 id="3-本质"><a href="#3-本质" class="headerlink" title="3.本质"></a>3.本质</h3><blockquote><p>包的本质实际上就是创建不同的文件夹来保存类文件，画出示意图。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114193713544.png" alt="image-20221114193713544"></p><h4 id="3-1-x3D-x3D-com-xiaoming-x3D-x3D"><a href="#3-1-x3D-x3D-com-xiaoming-x3D-x3D" class="headerlink" title="3.1 &#x3D;&#x3D;com.xiaoming&#x3D;&#x3D;"></a>3.1 &#x3D;&#x3D;com.xiaoming&#x3D;&#x3D;</h4><blockquote><p>. 代表下一级目录</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114194230870.png" alt="image-20221114194230870"></p><blockquote><p>输出 <code>com.xiaoqiang</code>,变成</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114194501819.png" alt="image-20221114194501819"></p><h4 id="3-2-两个包下可以建同名的类"><a href="#3-2-两个包下可以建同名的类" class="headerlink" title="3.2 两个包下可以建同名的类"></a>3.2 两个包下可以建同名的类</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114194642573.png" alt="image-20221114194642573"></p><h5 id="3-2-1-引用包"><a href="#3-2-1-引用包" class="headerlink" title="3.2.1 引用包"></a>3.2.1 引用包</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114194822348.png" alt="image-20221114194822348"></p><blockquote><p>自动导入xiaoming的包的类</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114194918548.png" alt="image-20221114194918548"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.use;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 日期：2022年11月14日</span></span><br><span class="line"><span class="comment">* 练习导包*/</span></span><br><span class="line"><span class="keyword">import</span> com.xiaoming.Dog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        输出小明的dog</span></span><br><span class="line">        <span class="type">Dog</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(); <span class="comment">//等价于   com.xiaoming.Dog dog = new com.xiaoming.Dog();</span></span><br><span class="line">        </span><br><span class="line">        System.out.println(dog);</span><br><span class="line">        System.out.println(<span class="string">&quot;fsf&quot;</span>);</span><br><span class="line">        </span><br><span class="line"><span class="comment">//        创建输出小强的dog</span></span><br><span class="line">        com.xiaoqiang.<span class="type">Dog</span> <span class="variable">dog1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">com</span>.xiaoqiang.Dog();<span class="comment">//告诉编译器输出xioaqiang的包</span></span><br><span class="line">        System.out.println(dog1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输出</span><br><span class="line">    </span><br><span class="line">com.xiaoming.Dog@4554617c</span><br><span class="line">fsf</span><br><span class="line">com.xiaoqiang.Dog@74a14482</span><br></pre></td></tr></table></figure><h5 id="3-2-2-不能同时引用xioaming和xiaoqiang的包"><a href="#3-2-2-不能同时引用xioaming和xiaoqiang的包" class="headerlink" title="3.2.2 不能同时引用xioaming和xiaoqiang的包"></a>3.2.2 不能同时引用xioaming和xiaoqiang的包</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114200047901.png" alt="image-20221114200047901"></p><h5 id="3-2-3-命名规则"><a href="#3-2-3-命名规则" class="headerlink" title="3.2.3 命名规则"></a>3.2.3 命名规则</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114221131174.png" alt="image-20221114221131174"></p><h5 id="3-2-4-常用的包"><a href="#3-2-4-常用的包" class="headerlink" title="3.2.4 常用的包"></a>3.2.4 常用的包</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114221301775.png" alt="image-20221114221301775"></p><blockquote><p>使用lang包的内容不需要再引用 – Math.abs  (求绝对值)</p></blockquote><h5 id="3-2-5-导入包"><a href="#3-2-5-导入包" class="headerlink" title="3.2.5 导入包"></a>3.2.5 导入包</h5><blockquote><p>最好需要什么类，就导入什么类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.pkg;</span><br><span class="line"><span class="comment">/*2022年11月14日</span></span><br><span class="line"><span class="comment">* 练习导包*/</span></span><br><span class="line"><span class="comment">//建议：我们需要使用到哪个类，就导入哪个类即可，不建议使用新的方式导入</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner; <span class="comment">// 表示只会引入Java.util 包下的Scanner</span></span><br><span class="line"><span class="keyword">import</span>  java.util.*; <span class="comment">// 表示将Java.util 包下的所有类都导入</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Import01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114222013280.png" alt="image-20221114222013280"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.pkg;</span><br><span class="line"><span class="comment">/*2022年11月14日</span></span><br><span class="line"><span class="comment">* 练习导包*/</span></span><br><span class="line"><span class="comment">//建议：我们需要使用到哪个类，就导入哪个类即可，不建议使用新的方式导入</span></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner; <span class="comment">// 表示只会引入Java.util 包下的Scanner</span></span><br><span class="line"><span class="comment">//import  java.util.*; // 表示将Java.util 包下的所有类都导入</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Import01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        Scanner scanner = new Scanner(System.in);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        使用系统提供Arrays 完成数组排序</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;-<span class="number">1</span>,<span class="number">20</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="comment">//        传统方法是，自己编写排序</span></span><br><span class="line"><span class="comment">//        系统是提供了相关的类，可以方便完成 Arrays</span></span><br><span class="line">        Arrays.sort(arr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        输出排序结果</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3-2-6-注意事项和细节"><a href="#3-2-6-注意事项和细节" class="headerlink" title="3.2.6 注意事项和细节"></a>3.2.6 注意事项和细节</h5><blockquote><ol><li>package的作用是声明当前类所在的包，需要放在类的最上面，一个类中最多<br> 只有一句package</li><li>import指令位置放在package的下面，在类定义前面，可以有多句且没有顺序<br> 要求。</li></ol></blockquote><h6 id="package的作用"><a href="#package的作用" class="headerlink" title="package的作用"></a>package的作用</h6><blockquote><p>声明当前类所在的包，需要放在类的最上面，一个类中最多只有一句</p><p>package</p></blockquote><h2 id="访问修饰符-modifier"><a href="#访问修饰符-modifier" class="headerlink" title="访问修饰符(modifier)"></a>访问修饰符(modifier)</h2><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114223718144.png" alt="image-20221114223718144"></p><h4 id="x3D-x3D-同类-–本类-x3D-x3D"><a href="#x3D-x3D-同类-–本类-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;同类 –本类&#x3D;&#x3D;"></a>&#x3D;&#x3D;同类 –本类&#x3D;&#x3D;</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114223750780.png" alt="image-20221114223750780"></p><h3 id="1-同包不同类"><a href="#1-同包不同类" class="headerlink" title="1. 同包不同类"></a>1. 同包不同类</h3><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//        在同一个包下，可以访问 public, protected 和 默认</span><br><span class="line">//        不能访问private </span><br></pre></td></tr></table></figure></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114224918236.png" alt="image-20221114224918236"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221114224935422.png" alt="image-20221114224935422"></p><h3 id="2-不同包"><a href="#2-不同包" class="headerlink" title="2. 不同包"></a>2. 不同包</h3><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//        在不同包下，可以访问public 修饰的属性或方法</span><br><span class="line">//        但是不能访问 protected ，默认，private 修饰的属性或方法</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221115184619712.png" alt="image-20221115184619712"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.pkg;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hspedu.modifier.A;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line"><span class="comment">//        在不同包下，可以访问public 修饰的属性或方法</span></span><br><span class="line"><span class="comment">//        但是不能访问 protected ，默认，private 修饰的属性或方法</span></span><br><span class="line">        System.out.println(a.n1 );</span><br><span class="line"><span class="comment">//        System.out.println(a.n2); // 报错</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>方法也是一样</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.pkg;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hspedu.modifier.A;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line"><span class="comment">//        在不同包下，可以访问public 修饰的属性或方法</span></span><br><span class="line"><span class="comment">//        但是不能访问 protected ，默认，private 修饰的属性或方法</span></span><br><span class="line">        System.out.println(a.n1 );</span><br><span class="line"><span class="comment">//        System.out.println(a.n2); // 报错</span></span><br><span class="line"></span><br><span class="line">        a.m1();</span><br><span class="line"><span class="comment">//        不能访问a.m2() a.m3() a.m4() </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-同类中"><a href="#3-同类中" class="headerlink" title="3. 同类中"></a>3. 同类中</h3><blockquote><p>在同类中，可以访问public protected 默认 private 修饰属性和方法</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221115185054035.png" alt="image-20221115185054035"></p><h3 id="4-修饰类-只有-x3D-x3D-public-和默认-x3D-x3D"><a href="#4-修饰类-只有-x3D-x3D-public-和默认-x3D-x3D" class="headerlink" title="4. 修饰类 只有&#x3D;&#x3D;public 和默认&#x3D;&#x3D;"></a>4. 修饰类 只有&#x3D;&#x3D;public 和默认&#x3D;&#x3D;</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221115185830066.png" alt="image-20221115185830066"></p><h2 id="面向对象三大特征：封装、继承-和多态"><a href="#面向对象三大特征：封装、继承-和多态" class="headerlink" title="面向对象三大特征：封装、继承 和多态"></a>面向对象三大特征：封装、继承 和多态</h2><h3 id="x3D-x3D-1-封装-x3D-x3D-encapsulation"><a href="#x3D-x3D-1-封装-x3D-x3D-encapsulation" class="headerlink" title="&#x3D;&#x3D;1. 封装&#x3D;&#x3D;(encapsulation)"></a>&#x3D;&#x3D;1. 封装&#x3D;&#x3D;(encapsulation)</h3><blockquote><p>封装(<code>encap</code>sulation)就是把抽象出的数据[<code>属性</code>]和对数据的操作[<code>方法</code>]封装在一起，数据被保护在内部，程序的其它部分只有通过被授权的操作[<code>方法</code>]，才能对数据进行操作。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221115191445506.png" alt="image-20221115191445506"></p><h4 id="1-1-理解-和-好处"><a href="#1-1-理解-和-好处" class="headerlink" title="1.1 理解 和 好处"></a>1.1 理解 和 好处</h4><p><strong>就像电视机，普通用户只需要按开关机按钮，具体怎么操作是内部的事</strong></p><blockquote><ol><li>隐藏实现细节</li><li>可以对数据进行验证，保证安全合理</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221115213852575.png" alt="image-20221115213852575"></p><h5 id="对数据进行验证"><a href="#对数据进行验证" class="headerlink" title="对数据进行验证"></a>对数据进行验证</h5><blockquote><p>在内部验证</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230107102338186.png" alt="image-20230107102338186"></p><h4 id="1-2-封装的实现步骤"><a href="#1-2-封装的实现步骤" class="headerlink" title="1.2 封装的实现步骤"></a>1.2 封装的实现步骤</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221115214234394.png" alt="image-20221115214234394"></p><h4 id="1-3-快速入门案例-–Encapsulation01-java"><a href="#1-3-快速入门案例-–Encapsulation01-java" class="headerlink" title="1.3 快速入门案例 –Encapsulation01.java"></a>1.3 快速入门案例 –Encapsulation01.java</h4><blockquote><p>写在&#x3D;&#x3D;com.hspedu.encap&#x3D;&#x3D;</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221115214539394.png" alt="image-20221115214539394"></p><h5 id="1-3-1-思路"><a href="#1-3-1-思路" class="headerlink" title="1.3.1  思路"></a>1.3.1  思路</h5><p> <img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230109193257130.png" alt="image-20230109193257130"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230109193428894.png" alt="image-20230109193428894"></p><blockquote><p>增加相关的逻辑</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230109194112283.png" alt="image-20230109194112283"></p><h5 id="1-3-2-源码"><a href="#1-3-2-源码" class="headerlink" title="1.3.2 源码"></a>1.3.2 源码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.new_.encapsulation;</span><br><span class="line"><span class="comment">/*2023年1月7日</span></span><br><span class="line"><span class="comment">* 练习封装</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Encapsulation01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        person.setName(<span class="string">&quot;rwrewrwerwrewr&quot;</span>);</span><br><span class="line">        person.setAge(<span class="number">300</span>);</span><br><span class="line">        person.setSalary(<span class="number">3000000</span>);</span><br><span class="line">        System.out.println(person.info());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> salary;</span><br><span class="line">    <span class="keyword">private</span> String job;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    进行验证</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (name.length() &gt;=<span class="number">2</span> &amp;&amp; name.length() &lt;= <span class="number">6</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.name = name;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;name的长度 2-6,默认：无名&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.name = <span class="string">&quot;无名&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (age &gt;=<span class="number">1</span> &amp;&amp; age&lt;= <span class="number">120</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.age = age;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;您的设置有误，年龄1-120，默认值：18&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.age = <span class="number">18</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSalary</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSalary</span><span class="params">(<span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getJob</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> job;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setJob</span><span class="params">(String job)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.job = job;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    输出信息方法</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span>(<span class="string">&quot;name=&quot;</span> + <span class="built_in">this</span>.name + <span class="string">&quot;,age= &quot;</span> + <span class="built_in">this</span>.age +</span><br><span class="line">                <span class="string">&quot;salary=&quot;</span> + <span class="built_in">this</span>.salary );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.encap;</span><br><span class="line"><span class="comment">/*2022年11月15日</span></span><br><span class="line"><span class="comment">* 那么在java中如何实现这种类似的控制呢？</span></span><br><span class="line"><span class="comment">请大家看一个小程序(ncapsulation01,java),不能随便查看人的年龄，工资</span></span><br><span class="line"><span class="comment">等隐私，并对设置的年龄进行合理的验证。年龄合理就设置，否则给默认</span></span><br><span class="line"><span class="comment">。年龄，必须在1-120，年龄，工资不能直接查看，name的长度在2-6字符</span></span><br><span class="line"><span class="comment">之间*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Encapsulation01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        person.name = <span class="string">&quot;Cuiyq&quot;</span>;</span><br><span class="line"><span class="comment">//        person.age = 100; // 报错</span></span><br><span class="line">        person.setAge(<span class="number">30</span>);</span><br><span class="line">        person.setSalary(<span class="number">30000</span>);</span><br><span class="line">        person.info();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> salary;<span class="comment">// 工资私有化</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSalary</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSalary</span><span class="params">(<span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;信息为：name= &quot;</span> + name + <span class="string">&quot;age= &quot;</span> + age +</span><br><span class="line">                            <span class="string">&quot;工资= &quot;</span> + salary);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="根据要求来完善代码"><a href="#根据要求来完善代码" class="headerlink" title="根据要求来完善代码"></a>根据要求来完善代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.encap;</span><br><span class="line"><span class="comment">/*2022年11月15日</span></span><br><span class="line"><span class="comment">* 那么在java中如何实现这种类似的控制呢？</span></span><br><span class="line"><span class="comment">请大家看一个小程序(ncapsulation01,java),不能随便查看人的年龄，工资</span></span><br><span class="line"><span class="comment">等隐私，并对设置的年龄进行合理的验证。年龄合理就设置，否则给默认</span></span><br><span class="line"><span class="comment">。年龄，必须在1-120，年龄，工资不能直接查看，name的长度在2-6字符</span></span><br><span class="line"><span class="comment">之间*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Encapsulation01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"><span class="comment">//        person.name = &quot;Cuiyq&quot;;</span></span><br><span class="line"><span class="comment">//        person.age = 100; // 报错</span></span><br><span class="line">        person.setName(<span class="string">&quot;cuiqiofaf&quot;</span>);</span><br><span class="line">        person.setAge(<span class="number">300</span>);</span><br><span class="line">        person.setSalary(<span class="number">30000</span>);</span><br><span class="line">        System.out.println( person.info());</span><br><span class="line">        System.out.println(person.getSalary());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> salary;<span class="comment">// 工资私有化</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="comment">//        name的长度在2-6个字符之间，否则给个“无名”</span></span><br><span class="line">        <span class="keyword">if</span> (name.length() &gt;= <span class="number">2</span> &amp;&amp; name.length() &lt;= <span class="number">6</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.name = name;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//            给个提示</span></span><br><span class="line">            System.out.println(<span class="string">&quot;输入有误，给个默认名字：无名&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.name = <span class="string">&quot;无名&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ( age &gt; <span class="number">1</span> &amp;&amp; age &lt;= <span class="number">120</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.age = age;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//            提示</span></span><br><span class="line">            System.out.println(<span class="string">&quot;输入的年龄有误,给个默认值：18&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.age = <span class="number">18</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSalary</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        这里可以增加对当前对象的权限判断</span></span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSalary</span><span class="params">(<span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> (<span class="string">&quot;信息为：name= &quot;</span> + name + <span class="string">&quot;age= &quot;</span> + age +</span><br><span class="line">                            <span class="string">&quot;工资= &quot;</span> + salary);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-4-封装与构造器"><a href="#1-4-封装与构造器" class="headerlink" title="1.4 封装与构造器"></a>1.4 封装与构造器</h4><blockquote><p>将构造器setXxx结合</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.encap;</span><br><span class="line"><span class="comment">/*2022年11月15日</span></span><br><span class="line"><span class="comment">* 那么在java中如何实现这种类似的控制呢？</span></span><br><span class="line"><span class="comment">请大家看一个小程序(ncapsulation01,java),不能随便查看人的年龄，工资</span></span><br><span class="line"><span class="comment">等隐私，并对设置的年龄进行合理的验证。年龄合理就设置，否则给默认</span></span><br><span class="line"><span class="comment">。年龄，必须在1-120，年龄，工资不能直接查看，name的长度在2-6字符</span></span><br><span class="line"><span class="comment">之间*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Encapsulation01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"><span class="comment">//        person.name = &quot;Cuiyq&quot;;</span></span><br><span class="line"><span class="comment">//        person.age = 100; // 报错</span></span><br><span class="line">        person.setName(<span class="string">&quot;cuiqiofaf&quot;</span>);</span><br><span class="line">        person.setAge(<span class="number">300</span>);</span><br><span class="line">        person.setSalary(<span class="number">30000</span>);</span><br><span class="line"><span class="comment">//        System.out.println( person.info());</span></span><br><span class="line">        System.out.println(person.getSalary());</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">smith</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;smith&quot;</span>, <span class="number">2000</span>, <span class="number">30000</span>);</span><br><span class="line">        System.out.println(smith.info());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> salary;<span class="comment">// 工资私有化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    无参构造器</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    有参构造器</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="comment">//        name的长度在2-6个字符之间，否则给个“无名”</span></span><br><span class="line">        <span class="keyword">if</span> (name.length() &gt;= <span class="number">2</span> &amp;&amp; name.length() &lt;= <span class="number">6</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.name = name;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//            给个提示</span></span><br><span class="line">            System.out.println(<span class="string">&quot;输入有误，给个默认名字：无名&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.name = <span class="string">&quot;无名&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ( age &gt; <span class="number">1</span> &amp;&amp; age &lt;= <span class="number">120</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.age = age;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//            提示</span></span><br><span class="line">            System.out.println(<span class="string">&quot;输入的年龄有误,给个默认值：18&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.age = <span class="number">18</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSalary</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        这里可以增加对当前对象的权限判断</span></span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSalary</span><span class="params">(<span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        System.out.println (&quot;信息为：name= &quot; + name + &quot;age= &quot; + age +</span></span><br><span class="line"><span class="comment">//                &quot;工资= &quot; + salary);</span></span><br><span class="line">       <span class="keyword">return</span> (<span class="string">&quot;信息为：name= &quot;</span> + name + <span class="string">&quot;age= &quot;</span> + age +</span><br><span class="line">                            <span class="string">&quot;工资= &quot;</span> + salary);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="如果直接在实例化的时候就赋值，就跳过set、get方法"><a href="#如果直接在实例化的时候就赋值，就跳过set、get方法" class="headerlink" title="如果直接在实例化的时候就赋值，就跳过set、get方法"></a>如果直接在实例化的时候就赋值，就跳过set、get方法</h5><h5 id="x3D-x3D-可以把set写在有参构造器中-x3D-x3D"><a href="#x3D-x3D-可以把set写在有参构造器中-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;可以把set写在有参构造器中&#x3D;&#x3D;"></a>&#x3D;&#x3D;可以把set写在有参构造器中&#x3D;&#x3D;</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221115224205010.png" alt="image-20221115224205010"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.encap;</span><br><span class="line"><span class="comment">/*2022年11月15日</span></span><br><span class="line"><span class="comment">* 那么在java中如何实现这种类似的控制呢？</span></span><br><span class="line"><span class="comment">请大家看一个小程序(ncapsulation01,java),不能随便查看人的年龄，工资</span></span><br><span class="line"><span class="comment">等隐私，并对设置的年龄进行合理的验证。年龄合理就设置，否则给默认</span></span><br><span class="line"><span class="comment">。年龄，必须在1-120，年龄，工资不能直接查看，name的长度在2-6字符</span></span><br><span class="line"><span class="comment">之间*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Encapsulation01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"><span class="comment">//        person.name = &quot;Cuiyq&quot;;</span></span><br><span class="line"><span class="comment">//        person.age = 100; // 报错</span></span><br><span class="line">        person.setName(<span class="string">&quot;cuiqiofaf&quot;</span>);</span><br><span class="line">        person.setAge(<span class="number">300</span>);</span><br><span class="line">        person.setSalary(<span class="number">30000</span>);</span><br><span class="line"><span class="comment">//        System.out.println( person.info());</span></span><br><span class="line">        System.out.println(person.getSalary());</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">smith</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;smith&quot;</span>, <span class="number">18</span>, <span class="number">30000</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;====smith的信息====&quot;</span>);</span><br><span class="line">        System.out.println(smith.info());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> salary;<span class="comment">// 工资私有化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    无参构造器</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    有参构造器</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">double</span> salary)</span> &#123;</span><br><span class="line"><span class="comment">//        this.name = name;</span></span><br><span class="line"><span class="comment">//        this.age = age;</span></span><br><span class="line"><span class="comment">//        this.salary = salary;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        我们可以将set方法写在构造器中，这样仍然可以验证</span></span><br><span class="line">        <span class="built_in">this</span>.setName(name);</span><br><span class="line">        <span class="built_in">this</span>.setAge(age);</span><br><span class="line">        <span class="built_in">this</span>.setSalary(salary);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line"><span class="comment">//        name的长度在2-6个字符之间，否则给个“无名”</span></span><br><span class="line">        <span class="keyword">if</span> (name.length() &gt;= <span class="number">2</span> &amp;&amp; name.length() &lt;= <span class="number">6</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.name = name;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//            给个提示</span></span><br><span class="line">            System.out.println(<span class="string">&quot;输入有误，给个默认名字：无名&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.name = <span class="string">&quot;无名&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ( age &gt; <span class="number">1</span> &amp;&amp; age &lt;= <span class="number">120</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.age = age;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//            提示</span></span><br><span class="line">            System.out.println(<span class="string">&quot;输入的年龄有误,给个默认值：18&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.age = <span class="number">18</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSalary</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        这里可以增加对当前对象的权限判断</span></span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSalary</span><span class="params">(<span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        System.out.println (&quot;信息为：name= &quot; + name + &quot;age= &quot; + age +</span></span><br><span class="line"><span class="comment">//                &quot;工资= &quot; + salary);</span></span><br><span class="line">       <span class="keyword">return</span> (<span class="string">&quot;信息为：name= &quot;</span> + name + <span class="string">&quot;age= &quot;</span> + age +</span><br><span class="line">                            <span class="string">&quot;工资= &quot;</span> + salary);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="关掉提示"><a href="#关掉提示" class="headerlink" title="关掉提示"></a>关掉提示</h5><blockquote><p>老韩Java P285</p></blockquote><h4 id="1-5-课堂练习-p285"><a href="#1-5-课堂练习-p285" class="headerlink" title="1.5 课堂练习 p285"></a>1.5 课堂练习 p285</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221115225115504.png" alt="image-20221115225115504"></p><h5 id="源码–未改"><a href="#源码–未改" class="headerlink" title="源码–未改"></a>源码–未改</h5><p>Account</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.new_.encapsulation.encap;</span><br><span class="line"><span class="comment">/*2023年1月13日</span></span><br><span class="line"><span class="comment">* 封装练习*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> salary;</span><br><span class="line">    <span class="keyword">private</span> String passwd;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Account</span><span class="params">(String name, <span class="type">double</span> salary, String passwd)</span> &#123;</span><br><span class="line">        setName(name);</span><br><span class="line">        setSalary(salary);</span><br><span class="line">        setPasswd(passwd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> name.length();</span><br><span class="line">        <span class="keyword">if</span> (len &gt;= <span class="number">2</span> &amp;&amp; len &lt;= <span class="number">4</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.name = name;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;长度有误，长度为2,3,4&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSalary</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSalary</span><span class="params">(<span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (salary &gt;= <span class="number">20</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.salary = salary;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;您的余额不足20元&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPasswd</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> passwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPasswd</span><span class="params">(String passwd)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (passwd.length() == <span class="number">6</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.passwd = passwd;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;密码长度为6,赋默认值123456&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.passwd = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;name= &quot;</span> + <span class="built_in">this</span>.name + <span class="string">&quot;,salary= &quot;</span> + <span class="built_in">this</span>.salary +</span><br><span class="line">                <span class="string">&quot;,passwd= &quot;</span> + <span class="built_in">this</span>.passwd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AccountTest</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.new_.encapsulation.encap;</span><br><span class="line"><span class="comment">/*2023年1月13日</span></span><br><span class="line"><span class="comment">* 测试类*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AccountTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account</span>(<span class="string">&quot;234444&quot;</span>, <span class="number">12</span>,</span><br><span class="line">                <span class="string">&quot;1234567&quot;</span>);</span><br><span class="line">        account.info();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="源码–改版"><a href="#源码–改版" class="headerlink" title="源码–改版"></a>源码–改版</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113115051347.png" alt="image-20230113115051347"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.encap;</span><br><span class="line"><span class="comment">/*2022年11月15日</span></span><br><span class="line"><span class="comment">* 目的：</span></span><br><span class="line"><span class="comment">* 创建程序，在具中定义两个类：Account和AccountTest类体会Java的封装性。</span></span><br><span class="line"><span class="comment">1.Account类要求具有属性：姓名（长度为2位3位或4位）、余额（必须&gt;20）、</span></span><br><span class="line"><span class="comment">密码（必须是六位），如果不满足，则给出提示信息，并给默认值（程序员自己定)</span></span><br><span class="line"><span class="comment">2.通过setXxx的方法给Account的属性赋值。</span></span><br><span class="line"><span class="comment">3.在AccountTest中测试*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account</span> &#123;</span><br><span class="line"><span class="comment">//    为了封装，将3个属性设置为private</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> salary; <span class="comment">// 工资 balance余额</span></span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Account</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Account</span><span class="params">(String name, <span class="type">int</span> age, String pwd)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setAge(age);</span><br><span class="line">        <span class="built_in">this</span>.setPwd(pwd);</span><br><span class="line">        <span class="built_in">this</span>.setName(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (name.length() &gt;= <span class="number">2</span> &amp;&amp; name.length() &lt;= <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入有误，默认值：无名&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.name = <span class="string">&quot;无名&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (age &gt;= <span class="number">20</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.salary = age;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入有误，默认值：0&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPwd</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPwd</span><span class="params">(String pwd)</span> &#123;</span><br><span class="line"><span class="comment">//        密码长度是6位</span></span><br><span class="line">        <span class="keyword">if</span> (pwd.length() == <span class="number">6</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.pwd = pwd;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入不合法，默认：123456&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.pwd = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    输出</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;===信息：name=&quot;</span> + name + <span class="string">&quot;\t&quot;</span>+ <span class="string">&quot;余额= &quot;</span> +</span><br><span class="line">                            <span class="string">&quot;\t&quot;</span> + salary + <span class="string">&quot;===&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AccountTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account</span>();</span><br><span class="line">        account.setName(<span class="string">&quot;Cui&quot;</span>);</span><br><span class="line">        account.setAge(<span class="number">14</span>);</span><br><span class="line">        account.setPwd(<span class="string">&quot;110205&quot;</span>);</span><br><span class="line">        account.info();</span><br><span class="line">        System.out.println(<span class="string">&quot;密码是：&quot;</span>);</span><br><span class="line">        System.out.println(account.getPwd());</span><br><span class="line">        <span class="type">Account</span> <span class="variable">account1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account</span>(<span class="string">&quot;123455&quot;</span>,<span class="number">18</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        account1.info();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221116105652011.png" alt="image-20221116105652011"></p><h3 id="2-继承-–-x3D-x3D-extends-x3D-x3D-–"><a href="#2-继承-–-x3D-x3D-extends-x3D-x3D-–" class="headerlink" title="2. 继承 –&#x3D;&#x3D;extends&#x3D;&#x3D;–"></a>2. 继承 –&#x3D;&#x3D;extends&#x3D;&#x3D;–</h3><h4 id="2-1-为什么需要继承"><a href="#2-1-为什么需要继承" class="headerlink" title="2.1 为什么需要继承"></a>2.1 为什么需要继承</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221116110350368.png" alt="image-20221116110350368"></p><blockquote><p>代码复用性</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113131311215.png" alt="image-20230113131311215"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113131358432.png" alt="image-20230113131358432"></p><p>main</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113131425293.png" alt="image-20230113131425293"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113131451515.png" alt="image-20230113131451515"></p><h4 id="2-2-继承的基本原理"><a href="#2-2-继承的基本原理" class="headerlink" title="2.2 继承的基本原理"></a>2.2 继承的基本原理</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221116154120019.png" alt="image-20221116154120019"></p><h5 id="2-2-1-继承的基本示意图"><a href="#2-2-1-继承的基本示意图" class="headerlink" title="2.2.1  继承的基本示意图"></a>2.2.1  继承的基本示意图</h5><blockquote><p>b类和c类很多属性和方法是相同的</p><p>这时候我们写个a类，我们把b类和c类共用的属性，共有的方法写到a类中</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113130921085.png" alt="image-20230113130921085"></p><blockquote><p>用一个关键字extends继承</p><p>A类[父类，基类，超类]</p><p>B类[子类，派生类]</p><p>C类[子类，派生类]</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221116155027023.png" alt="image-20221116155027023"></p><blockquote><p>B类C类也可以有子类，</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221116155211658.png" alt="image-20221116155211658"></p><h5 id="2-2-2-继承的基本语法"><a href="#2-2-2-继承的基本语法" class="headerlink" title="2.2.2  继承的基本语法"></a>2.2.2  继承的基本语法</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221116155327512.png" alt="image-20221116155327512"></p><h5 id="2-2-3-隔代"><a href="#2-2-3-隔代" class="headerlink" title="2.2.3 隔代"></a>2.2.3 隔代</h5><blockquote><p>D是B的子类，D也是A的子类</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221116155601195.png" alt="image-20221116155601195"></p><h4 id="2-3-快速入门案例"><a href="#2-3-快速入门案例" class="headerlink" title="2.3 快速入门案例"></a>2.3 快速入门案例</h4><p>student</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113133655665.png" alt="image-20230113133655665"></p><p>Graduate</p><blockquote><p>加继承</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113134322158.png" alt="image-20230113134322158"></p><p>Pupil</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113133846138.png" alt="image-20230113133846138"></p><p>main</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113133613594.png" alt="image-20230113133613594"></p><blockquote><p>测试类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_.improve_;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Extends01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Pupil</span> <span class="variable">pupil</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Pupil</span>();</span><br><span class="line"></span><br><span class="line">        pupil.name = <span class="string">&quot;小明~&quot;</span>;</span><br><span class="line">        pupil.age = <span class="number">20</span>;</span><br><span class="line">        pupil.testing();</span><br><span class="line">        pupil.setScore(<span class="number">60</span>);</span><br><span class="line">        pupil.showInfo();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=====&quot;</span>);</span><br><span class="line">        <span class="type">Graduate</span> <span class="variable">graduate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Graduate</span>();</span><br><span class="line">        graduate.name = <span class="string">&quot;金角大~&quot;</span>;</span><br><span class="line">        graduate.age = <span class="number">22</span>;</span><br><span class="line">        graduate.testing();</span><br><span class="line">        graduate.setScore(<span class="number">100</span>);</span><br><span class="line">        graduate.showInfo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>子类 -&gt; 毕业大学生类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_.improve_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Graduate</span> <span class="keyword">extends</span> <span class="title class_">Student</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testing</span><span class="params">()</span> &#123;<span class="comment">//和Pupilb不一样</span></span><br><span class="line">        System.out.println(<span class="string">&quot;大学生正在考大学数学。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>子类 -&gt; 小学生类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_.improve_;</span><br><span class="line"><span class="comment">/*日期2022年11月16日</span></span><br><span class="line"><span class="comment">* 子类，小学生类*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Pupil</span> <span class="keyword">extends</span> <span class="title class_">Student</span>&#123;</span><br><span class="line">    <span class="comment">//    考试方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testing</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;小学生 &quot;</span> + name + <span class="string">&quot;正在考小学数学。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>父类 -&gt; 学生类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_.improve_;</span><br><span class="line"><span class="comment">/*2022年11月16日</span></span><br><span class="line"><span class="comment">* 学习继承，练习父类*/</span></span><br><span class="line"><span class="comment">//父类，是Pupil 和 Graduate 的父类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;123&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> score; <span class="comment">//成绩</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//    共有的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(<span class="type">double</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    显示信息的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;小学生名 &quot;</span> + name + <span class="string">&quot;年龄&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;成绩 &quot;</span> + score);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="继承给编程带来的便利"><a href="#继承给编程带来的便利" class="headerlink" title="继承给编程带来的便利"></a>继承给编程带来的便利</h5><ol><li><strong>&#x3D;&#x3D;代码的复用性提高了&#x3D;&#x3D;</strong></li><li>&#x3D;&#x3D;代码的扩展性和维护性提高了&#x3D;&#x3D;</li></ol><blockquote><p>在A类中添加一个方法，子类都得到了扩展</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113135239963.png" alt="image-20230113135239963"></p><h4 id="x3D-x3D-2-4-继承的深入讨论-x2F-细节-x3D-x3D"><a href="#x3D-x3D-2-4-继承的深入讨论-x2F-细节-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;2.4 继承的深入讨论&#x2F;细节&#x3D;&#x3D;"></a>&#x3D;&#x3D;2.4 继承的深入讨论&#x2F;细节&#x3D;&#x3D;</h4><p>先看有没有extends，有的话记住构造器默认第一行是super</p><h5 id="2-4-1-x3D-x3D-私有属性-x3D-x3D-要通过父类提供的公共的方法去访问-p289"><a href="#2-4-1-x3D-x3D-私有属性-x3D-x3D-要通过父类提供的公共的方法去访问-p289" class="headerlink" title="2.4.1  &#x3D;&#x3D;私有属性&#x3D;&#x3D;要通过父类提供的公共的方法去访问 p289"></a>2.4.1  &#x3D;&#x3D;私有属性&#x3D;&#x3D;要通过父类提供的公共的方法去访问 p289</h5><blockquote><ol><li><p>&#x3D;&#x3D;子类继承了所有的属性和方法&#x3D;&#x3D;，但是&#x3D;&#x3D;私有属性和方法&#x3D;&#x3D;不能在子类直接访问</p><p> 要通过公共的方法区访问</p><p> default在同一个包中可以访问</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221117112003092.png" alt="image-20221117112003092"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113135702081.png" alt="image-20230113135702081"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113135729929.png" alt="image-20230113135729929"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113140014105.png" alt="image-20230113140014105"></p><h6 id="用公共的方法返回"><a href="#用公共的方法返回" class="headerlink" title="用公共的方法返回"></a>用公共的方法返回</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113140348334.png" alt="image-20230113140348334"></p><blockquote><p>直接n4会报错</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113140504688.png" alt="image-20230113140504688"></p><blockquote><p>输出私有n4</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113140618737.png" alt="image-20230113140618737"></p><h6 id="调用私有方法"><a href="#调用私有方法" class="headerlink" title="调用私有方法"></a>调用私有方法</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113140745861.png" alt="image-20230113140745861"></p><p>main</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113140845301.png" alt="image-20230113140845301"></p><h6 id="不同包下的继承"><a href="#不同包下的继承" class="headerlink" title="不同包下的继承"></a>不同包下的继承</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113142658619.png" alt="image-20230113142658619"></p><h6 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113141938630.png" alt="image-20230113141938630"></p><p>父类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.new_.extends_.detail_;</span><br><span class="line"><span class="comment">/*2023年1月13日</span></span><br><span class="line"><span class="comment">* 练习继承的细节*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Base</span> &#123; <span class="comment">//父类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> <span class="variable">n2</span> <span class="operator">=</span> <span class="number">200</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">n3</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">n4</span> <span class="operator">=</span> <span class="number">400</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getN4</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> n4;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test100</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test100&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">test200</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test200&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">test300</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test300&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">test400</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test400&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">callTest400</span><span class="params">()</span> &#123;</span><br><span class="line">        test400();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>子类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.new_.extends_.detail_;</span><br><span class="line"><span class="comment">/*2023年1月13日</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Sub</span> <span class="keyword">extends</span> <span class="title class_">Base</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Sub</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Sub()...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;n1:&quot;</span> + n1 + <span class="string">&quot;,n2:&quot;</span> + n2 +</span><br><span class="line">                            <span class="string">&quot;,n3:&quot;</span> + n3);</span><br><span class="line">        test100();</span><br><span class="line">        test200();</span><br><span class="line">        test300();</span><br><span class="line"><span class="comment">//        访问私有属性，方法</span></span><br><span class="line">        System.out.println(getN4());</span><br><span class="line">        callTest400();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Sub</span> <span class="variable">sub</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Sub</span>();</span><br><span class="line">        sub.say();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>不同包中只能访问public修饰的属性或方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_.improve_;</span><br><span class="line"><span class="comment">/*2022年11月17日</span></span><br><span class="line"><span class="comment">* 测试protected 和默认 权限在不同包中的访问情况*/</span></span><br><span class="line"><span class="keyword">import</span> com.hspedu.extend_.Base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Base01</span>  &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Base</span> <span class="variable">base</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Base</span>();</span><br><span class="line"><span class="comment">//        不同包中只能访问public修饰的属性或方法</span></span><br><span class="line">        System.out.println(base.n1);</span><br><span class="line"><span class="comment">//        System.out.println(base.n2); protected报错</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public void info() &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println(n1 + n2 + n3 + n4); // n3 n4 报错</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>不同包中的子类，defaul不能访问</p><p>protected 可以访问不同包中的子类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_.improve_;</span><br><span class="line"><span class="comment">/*2022年11月17日</span></span><br><span class="line"><span class="comment">* 测试protected 和默认 权限在不同包中的访问情况*/</span></span><br><span class="line"><span class="keyword">import</span> com.hspedu.extend_.Base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Base01</span> <span class="keyword">extends</span> <span class="title class_">Base</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Base</span> <span class="variable">base</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Base</span>();</span><br><span class="line"><span class="comment">//        不同包中只能访问public修饰的属性或方法</span></span><br><span class="line">        System.out.println(base.n1);</span><br><span class="line"><span class="comment">//        System.out.println(base.n2); protected报错</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public void info() &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println(n1 + n2 + n3 + n4); // n3 n4 报错</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>测试</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_;</span><br><span class="line"><span class="comment">/*2022年11月17日</span></span><br><span class="line"><span class="comment">* 父类*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> <span class="variable">n2</span> <span class="operator">=</span> <span class="number">200</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">n3</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">n4</span> <span class="operator">=</span> <span class="number">400</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Base</span><span class="params">()</span> &#123; <span class="comment">//无参构造器</span></span><br><span class="line">        System.out.println(<span class="string">&quot;base()....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    父类提供一个public方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getN4</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> n4;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test100</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test100&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">test200</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test200&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">void</span> <span class="title function_">test300</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test300&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">test400</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test400&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    提供一个公共的方法来调用私有方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">callTest400</span><span class="params">()</span> &#123;</span><br><span class="line">        test400();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Sub</span> <span class="keyword">extends</span> <span class="title class_">Base</span>&#123; <span class="comment">// 子类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Sub</span><span class="params">()</span> &#123; <span class="comment">//构造器</span></span><br><span class="line">        System.out.println(<span class="string">&quot;sub()....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayOk</span><span class="params">()</span> &#123;<span class="comment">//子类方法</span></span><br><span class="line"><span class="comment">//        非私有的属性和方法可以在子类直接访问</span></span><br><span class="line"><span class="comment">//        但是私有属性和方法不能在子类直接访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        我们发现 父类 的非private属性和方法</span></span><br><span class="line"><span class="comment">//        都可以访问</span></span><br><span class="line">        System.out.println(n1 + <span class="string">&quot; &quot;</span> + n2 + <span class="string">&quot; &quot;</span> + n3 ); <span class="comment">// n4会报错</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;n4=&quot;</span> + getN4());</span><br><span class="line">        callTest400();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_;</span><br><span class="line"><span class="comment">/*2022年11月16日</span></span><br><span class="line"><span class="comment">* 目的：练习继承的细节*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExtendsDetail</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Sub</span> <span class="variable">sub</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Sub</span>();</span><br><span class="line">        sub.sayOk();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-4-2-子类必须调用父类的构造器，完成父类的初始化-p290"><a href="#2-4-2-子类必须调用父类的构造器，完成父类的初始化-p290" class="headerlink" title="2.4.2 子类必须调用父类的构造器，完成父类的初始化  p290"></a>2.4.2 子类必须调用父类的构造器，完成父类的初始化  p290</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113143231200.png" alt="image-20230113143231200"></p><h6 id="子类构造器中隐藏super关键字"><a href="#子类构造器中隐藏super关键字" class="headerlink" title="子类构造器中隐藏super关键字"></a>子类构造器中隐藏super关键字</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113143441165.png" alt="image-20230113143441165"></p><blockquote><ol start="2"><li>子类必须调用父类的构造器，完成父类的初始化</li></ol><p>  调用子类构造器，父类构造器也会执行</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Sub</span> <span class="keyword">extends</span> <span class="title class_">Base</span>&#123; <span class="comment">// 子类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Sub</span><span class="params">()</span> &#123; <span class="comment">//构造器</span></span><br><span class="line">        <span class="built_in">super</span>(); <span class="comment">// 默认调用父类的无参构造器</span></span><br><span class="line">        System.out.println(<span class="string">&quot;子类sub()....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayOk</span><span class="params">()</span> &#123;<span class="comment">//子类方法</span></span><br><span class="line"><span class="comment">//        非私有的属性和方法可以在子类直接访问</span></span><br><span class="line"><span class="comment">//        但是私有属性和方法不能在子类直接访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        我们发现 父类 的非private属性和方法</span></span><br><span class="line"><span class="comment">//        都可以访问</span></span><br><span class="line">        System.out.println(n1 + <span class="string">&quot; &quot;</span> + n2 + <span class="string">&quot; &quot;</span> + n3 ); <span class="comment">// n4会报错</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;n4=&quot;</span> + getN4());</span><br><span class="line">        callTest400();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-4-3-当创建子类对象时，不管使用子类的哪个构造器，默认情况下总会去调用父类的无参构造器，-p291"><a href="#2-4-3-当创建子类对象时，不管使用子类的哪个构造器，默认情况下总会去调用父类的无参构造器，-p291" class="headerlink" title="2.4.3  当创建子类对象时，不管使用子类的哪个构造器，默认情况下总会去调用父类的无参构造器，   p291"></a>2.4.3  当创建子类对象时，不管使用子类的哪个构造器，默认情况下总会去调用父类的无参构造器，   p291</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113143631748.png" alt="image-20230113143631748"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113144410455.png" alt="image-20230113144410455"></p><blockquote><p>当创建子类对象时，不管使用子类的哪个构造器，默认情况下总会</p><p>去调用父类的无参构造器，如果父类没有提供无参构造器，则必须在子类的构造器中用super去指定使用父类的哪个构造器完成对父类的初始化工作，否则，编译不会通过</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113144218772.png" alt="image-20230113144218772"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113144234119.png" alt="image-20230113144234119"></p><h6 id="如果父类没有提供无参构造器，则必须在子类的构造器中用super去指定使用父类的哪个构造器完成对父类的初始化工作，否则，编译不会通过"><a href="#如果父类没有提供无参构造器，则必须在子类的构造器中用super去指定使用父类的哪个构造器完成对父类的初始化工作，否则，编译不会通过" class="headerlink" title="如果父类没有提供无参构造器，则必须在子类的构造器中用super去指定使用父类的哪个构造器完成对父类的初始化工作，否则，编译不会通过"></a>如果父类没有提供无参构造器，则必须在子类的构造器中用super去指定使用父类的哪个构造器完成对父类的初始化工作，否则，编译不会通过</h6><blockquote><p>父亲没有提供无参构造器，子类默认super会报错</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113144820851.png" alt="image-20230113144820851"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113144908062.png" alt="image-20230113144908062"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113144857943.png" alt="image-20230113144857943"></p><blockquote><p>必须用super(实参) 指定;</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221119091456728.png" alt="image-20221119091456728"></p><p>父类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113145538378.png" alt="image-20230113145538378"></p><p>子类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113145600377.png" alt="image-20230113145600377"></p><p>测试类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113145516087.png" alt="image-20230113145516087"></p><h5 id="2-4-4-如果希望指定去调用父类的某个构造器，则显示的调用一下"><a href="#2-4-4-如果希望指定去调用父类的某个构造器，则显示的调用一下" class="headerlink" title="2.4.4 如果希望指定去调用父类的某个构造器，则显示的调用一下"></a>2.4.4 如果希望指定去调用父类的某个构造器，则显示的调用一下</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113151246467.png" alt="image-20230113151246467"></p><p>&#x3D;&#x3D;super(参数列表);&#x3D;&#x3D;</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113151559661.png" alt="image-20230113151559661"></p><blockquote><p>子类调用带两个参数的构造器</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113151614836.png" alt="image-20230113151614836"></p><p><strong>测试类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_;</span><br><span class="line"><span class="comment">/*2022年11月16日</span></span><br><span class="line"><span class="comment">* 目的：练习继承的细节*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExtendsDetail</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        无参构造器</span></span><br><span class="line">        System.out.println(<span class="string">&quot;===第一个对象===&quot;</span>);</span><br><span class="line">        <span class="type">Sub</span> <span class="variable">sub</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Sub</span>(); <span class="comment">//父类Base构造器被调用</span></span><br><span class="line"><span class="comment">//        有参构造器</span></span><br><span class="line">        System.out.println(<span class="string">&quot;===第二个对象===&quot;</span>);</span><br><span class="line">        <span class="type">Sub</span> <span class="variable">sub1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Sub</span>(<span class="string">&quot;jack&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===第三个对象===&quot;</span>);</span><br><span class="line">        <span class="type">Sub</span> <span class="variable">sub2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Sub</span>(<span class="string">&quot;tom&quot;</span>, <span class="number">12</span>); <span class="comment">// 调用父类无参构造器，子类有参构造器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        sub.sayOk();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>子类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Sub</span> <span class="keyword">extends</span> <span class="title class_">Base</span>&#123; <span class="comment">// 子类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Sub</span><span class="params">()</span> &#123; <span class="comment">//构造器</span></span><br><span class="line"><span class="comment">//        super(); // 默认调用父类的无参构造器</span></span><br><span class="line"><span class="comment">//        指定用父类的某个构造器</span></span><br><span class="line">        <span class="built_in">super</span>(<span class="string">&quot;无参&quot;</span>,<span class="number">20</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;子类sub()....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    当创建子类对象时，不管使用子类的哪个构造器，</span></span><br><span class="line"><span class="comment">// 默认情况下总会去调用父类的无参构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Sub</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(<span class="string">&quot;name&quot;</span>,<span class="number">10</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;子类Sub(String name)构造器&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Sub</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="comment">//        1. 调用父类的无参构造器 super(); 也可以什么都不写</span></span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;子类Sub(String name, int age)构造器&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayOk</span><span class="params">()</span> &#123;<span class="comment">//子类方法</span></span><br><span class="line"><span class="comment">//        非私有的属性和方法可以在子类直接访问</span></span><br><span class="line"><span class="comment">//        但是私有属性和方法不能在子类直接访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        我们发现 父类 的非private属性和方法</span></span><br><span class="line"><span class="comment">//        都可以访问</span></span><br><span class="line">        System.out.println(n1 + <span class="string">&quot; &quot;</span> + n2 + <span class="string">&quot; &quot;</span> + n3 ); <span class="comment">// n4会报错</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;n4=&quot;</span> + getN4());</span><br><span class="line">        callTest400();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>父类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_;</span><br><span class="line"><span class="comment">/*2022年11月17日</span></span><br><span class="line"><span class="comment">* 父类*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> <span class="variable">n2</span> <span class="operator">=</span> <span class="number">200</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">n3</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">n4</span> <span class="operator">=</span> <span class="number">400</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Base</span><span class="params">()</span> &#123; <span class="comment">//无参构造器</span></span><br><span class="line">        System.out.println(<span class="string">&quot;父类base()....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Base</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;父类baseBase(String name)构造器&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    当创建子类对象时，不管使用子类的哪个构造器，</span></span><br><span class="line"><span class="comment">// 默认情况下总会去调用父类的无参构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Base</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;父类baseBase(String name,int age)构造器&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    父类提供一个public方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getN4</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> n4;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test100</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test100&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">test200</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test200&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">void</span> <span class="title function_">test300</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test300&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">test400</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test400&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    提供一个公共的方法来调用私有方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">callTest400</span><span class="params">()</span> &#123;</span><br><span class="line">        test400();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-4-5-super在使用时，-必须放在构造器第一行-super只能放在构造器中"><a href="#2-4-5-super在使用时，-必须放在构造器第一行-super只能放在构造器中" class="headerlink" title="2.4.5 super在使用时， 必须放在构造器第一行(super只能放在构造器中)"></a>2.4.5 super在使用时， 必须放在构造器第一行(super只能放在构造器中)</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113152344161.png" alt="image-20230113152344161"></p><blockquote><p>必须放在子类构造器的前面</p><p>子类new对象时，先执行父类构造器，再回到子类 构造器</p><p>在构造器中调用</p></blockquote><h5 id="2-4-6-sper-和-this-都只能放在构造器第一行，因此这两个方法不同存在同一个构造器"><a href="#2-4-6-sper-和-this-都只能放在构造器第一行，因此这两个方法不同存在同一个构造器" class="headerlink" title="2.4.6 sper() 和 this() 都只能放在构造器第一行，因此这两个方法不同存在同一个构造器"></a>2.4.6 sper() 和 this() 都只能放在构造器第一行，因此这两个方法不同存在同一个构造器</h5><blockquote><p>super() 和 this() 都只能放在构造器第一行，因此这两个方法不能</p><p>共存在一个构造器</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221119155137629.png" alt="image-20221119155137629"></p><h5 id="2-4-7-java-所有类都是Object的子类"><a href="#2-4-7-java-所有类都是Object的子类" class="headerlink" title="2.4.7 java 所有类都是Object的子类"></a>2.4.7 java 所有类都是Object的子类</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221119155323176.png" alt="image-20221119155323176"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113153057739.png" alt="image-20230113153057739"></p><h5 id="2-4-8-父类构造器的调用不限于直接父类！将一直往上追溯知道Object类-顶级父类"><a href="#2-4-8-父类构造器的调用不限于直接父类！将一直往上追溯知道Object类-顶级父类" class="headerlink" title="2.4.8 父类构造器的调用不限于直接父类！将一直往上追溯知道Object类(顶级父类)"></a>2.4.8 父类构造器的调用不限于直接父类！将一直往上追溯知道Object类(顶级父类)</h5><blockquote><p>new C 先找B类 再找A类 再找Object类</p><p>先执行Object类的构造器，再执行A类的构造器，再执行B类的构造器</p><p>最后再执行C类的构造器</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120081248735.png" alt="image-20221120081248735"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120081710767.png" alt="image-20221120081710767"></p><h6 id="先看有没有extends"><a href="#先看有没有extends" class="headerlink" title="先看有没有extends"></a>先看有没有extends</h6><blockquote><p>祖父类</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113165547578.png" alt="image-20230113165547578"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113165757628.png" alt="image-20230113165757628"></p><blockquote><p>父类</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113165628328.png" alt="image-20230113165628328"></p><blockquote><p>子类</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113165702600.png" alt="image-20230113165702600"></p><h5 id="2-4-9-子类最多只继承一个父类-指直接继承-，即Java中是-x3D-x3D-单继承机制-x3D-x3D-。思考：如何让A类继承B类和C类"><a href="#2-4-9-子类最多只继承一个父类-指直接继承-，即Java中是-x3D-x3D-单继承机制-x3D-x3D-。思考：如何让A类继承B类和C类" class="headerlink" title="2.4.9 子类最多只继承一个父类(指直接继承)，即Java中是&#x3D;&#x3D;单继承机制&#x3D;&#x3D;。思考：如何让A类继承B类和C类?"></a>2.4.9 子类最多只继承一个父类(指直接继承)，即Java中是&#x3D;&#x3D;单继承机制&#x3D;&#x3D;。思考：如何让A类继承B类和C类?</h5><blockquote><p>A类继承B类，A类就不能同时继承C类</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120083836606.png" alt="image-20221120083836606"></p><p><strong>如何让A类继承B类和C类</strong></p><blockquote><p>先让A类继承B类，再让A类继承C类</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120084018157.png" alt="image-20221120084018157"></p><h5 id="2-4-10-不能滥用继承，子类和父类之间必须满足is-a-的逻辑关系"><a href="#2-4-10-不能滥用继承，子类和父类之间必须满足is-a-的逻辑关系" class="headerlink" title="2.4.10  不能滥用继承，子类和父类之间必须满足is-a 的逻辑关系"></a>2.4.10  不能滥用继承，子类和父类之间必须满足is-a 的逻辑关系</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120084305822.png" alt="image-20221120084305822"></p><h5 id="2-4-11-super不能调用父类的父类"><a href="#2-4-11-super不能调用父类的父类" class="headerlink" title="2.4.11 super不能调用父类的父类"></a>2.4.11 super不能调用父类的父类</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113172625827.png" alt="image-20230113172625827"></p><h4 id="2-5-x3D-x3D-继承的本质-x3D-x3D-–p294"><a href="#2-5-x3D-x3D-继承的本质-x3D-x3D-–p294" class="headerlink" title="2.5 &#x3D;&#x3D;继承的本质&#x3D;&#x3D; –p294"></a>2.5 &#x3D;&#x3D;继承的本质&#x3D;&#x3D; –p294</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120090824796.png" alt="image-20221120090824796"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113170706449.png" alt="image-20230113170706449"></p><h5 id="jvm的内存-：-继承的内存布局"><a href="#jvm的内存-：-继承的内存布局" class="headerlink" title="jvm的内存 ： 继承的内存布局"></a>jvm的内存 ： 继承的内存布局</h5><h6 id="加载类的时候先看extends，有的话就先加载父类"><a href="#加载类的时候先看extends，有的话就先加载父类" class="headerlink" title="加载类的时候先看extends，有的话就先加载父类"></a>加载类的时候先看extends，有的话就先加载父类</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120100106438.png" alt="image-20221120100106438"></p><blockquote><ol><li><p>执行&#x3D;&#x3D;new Son()&#x3D;&#x3D; 加载Son的类信息，因为son有父类，son的父类还有父类</p><p> Son的父类是Father ，Father的父类是Grandp，父类是Object类</p><p> 因此最先加载的是&#x3D;&#x3D;Object类&#x3D;&#x3D;然后是&#x3D;&#x3D;Father类&#x3D;&#x3D;然后是&#x3D;&#x3D;Son&#x3D;&#x3D;</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120100432533.png" alt="image-20221120100432533"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120100737908.png" alt="image-20221120100737908"></p><blockquote><ol start="2"><li>在堆中分配一个空间给son，比如0x11</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120101116019.png" alt="image-20221120101116019"></p><blockquote><ol start="3"><li><p>给爷爷类分配属性</p><p> name放到常量池</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120101609231.png" alt="image-20221120101609231"></p><blockquote><ol start="4"><li><p>Father类</p><p> 在堆中ox11中新开一块空间</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120101947121.png" alt="image-20221120101947121"></p><blockquote><ol start="5"><li><p>Son本身类</p><p> 再开辟一块空间</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120102750248.png" alt="image-20221120102750248"></p><blockquote><ol start="6"><li>当把堆中的数据分配好以后 &#x3D;&#x3D;0x11&#x3D;&#x3D;就会分配给主栈(主方法)中的son对象引用</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120103234928.png" alt="image-20221120103234928"></p><p><strong>先加载类</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120103425886.png" alt="image-20221120103425886"></p><h5 id="当子类调用name"><a href="#当子类调用name" class="headerlink" title="当子类调用name"></a>当子类调用name</h5><blockquote><ol><li>首先看子类是否该属性</li><li>如果子类有这个属性，并且可以访问，则返回信息</li><li>如果子类没有这个属性，就看父类有没有()</li><li>如果父类没有就按照 <code>3</code> 的规则，继续找上级父类，直到Object</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120111147562.png" alt="image-20221120111147562"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_;</span><br><span class="line"><span class="comment">/*日期：2022年11月20日</span></span><br><span class="line"><span class="comment">* 目的：学习继承的本质*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExtendsTheory</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Son</span> <span class="variable">son</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Son</span>(); <span class="comment">//内存的布局</span></span><br><span class="line"><span class="comment">//        ？ -&gt; 这时要按照查找关系来返回信息</span></span><br><span class="line"><span class="comment">//        1. 首先看子类是否有该属性</span></span><br><span class="line"><span class="comment">//        2. 如果子类有这个属性，并且可以访问，则返回信息</span></span><br><span class="line"><span class="comment">//        3.如果子类没有这个属性，就看父类有没有()</span></span><br><span class="line"><span class="comment">//        4.如果父类没有就按照 3. 的规则，继续找上级父类，直到Object</span></span><br><span class="line">        System.out.println(son.name); <span class="comment">// 大头儿子</span></span><br><span class="line">        System.out.println(son.age);</span><br><span class="line">        System.out.println(son.hobby);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GrandPa</span> &#123; <span class="comment">// 爷爷类</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;大头爷爷&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">hobby</span> <span class="operator">=</span> <span class="string">&quot;旅游&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Father</span> <span class="keyword">extends</span> <span class="title class_">GrandPa</span> &#123; <span class="comment">//父类</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;大头爸爸&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">39</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> <span class="keyword">extends</span> <span class="title class_">Father</span> &#123;  <span class="comment">// 子类</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;大头儿子&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="把age改为private-，new-son-；内存中还有age么"><a href="#把age改为private-，new-son-；内存中还有age么" class="headerlink" title="把age改为private ，new son()；内存中还有age么"></a>把age改为private ，new son()；内存中还有age么</h5><blockquote><p>就会报错</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120112110920.png" alt="image-20221120112110920"></p><p>&#x3D;&#x3D;内存中还有age么？&#x3D;&#x3D;</p><blockquote><p>有，但是不能直接访问 ，写一个get方法</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120112444133.png" alt="image-20221120112444133"></p><blockquote><p>如果父类私有age，爷爷类 有公共的age</p><p>那么也不会访问爷爷类，直接访问父类的age发现私有，直接报错</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120135513418.png" alt="image-20221120135513418"></p><h6 id="访问爷爷的年龄"><a href="#访问爷爷的年龄" class="headerlink" title="访问爷爷的年龄"></a>访问爷爷的年龄</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113174809854.png" alt="image-20230113174809854"></p><h4 id="2-6-继承的课堂练习"><a href="#2-6-继承的课堂练习" class="headerlink" title="2.6 继承的课堂练习"></a>2.6 继承的课堂练习</h4><h5 id="2-6-1-this和super不能共存"><a href="#2-6-1-this和super不能共存" class="headerlink" title="2.6.1  this和super不能共存"></a>2.6.1  this和super不能共存</h5><blockquote><p>1. </p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120135616614.png" alt="image-20221120135616614"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113180122640.png" alt="image-20230113180122640"></p><blockquote><p>输出</p></blockquote><p>a</p><p>b name</p><p>b</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221120141145518.png" alt="image-20221120141145518"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_.exercise;</span><br><span class="line"><span class="comment">/*2022年11月20日</span></span><br><span class="line"><span class="comment">* 目的：练习继承*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExtendsExercise01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    A() &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    A(String name) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;a name&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span> &#123;</span><br><span class="line"></span><br><span class="line">    B() &#123;</span><br><span class="line">        <span class="built_in">this</span>(<span class="string">&quot;abc&quot;</span>); <span class="comment">//this和super不能共存，所以执行this</span></span><br><span class="line">        System.out.println(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    B(String name) &#123;</span><br><span class="line"><span class="comment">//        super(); // 执行A();</span></span><br><span class="line">        System.out.println(<span class="string">&quot;b name&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221121085105148.png" alt="image-20221121085105148"></p><h5 id="2-6-2"><a href="#2-6-2" class="headerlink" title="2.6.2"></a>2.6.2</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221121184712935.png" alt="image-20221121184712935"></p><blockquote><p>传到B类有参的时候，因为B类继承A类</p><p>所以B(String name) 默认第一行有super();</p><p>传到A类无参构造器中</p></blockquote><blockquote><p>输出</p></blockquote><p>我是A类</p><p>hahah我是B类有参</p><p>我是C类有参</p><p>我是C类无参</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.extend_.exercise;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年11月20日</span></span><br><span class="line"><span class="comment"> * 练习继承2*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExtendsExercise02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">C1</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">C1</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A1</span> &#123; <span class="comment">//A类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">A1</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是A类&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B1</span> <span class="keyword">extends</span> <span class="title class_">A1</span> &#123; <span class="comment">// B类继承A类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">B1</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是B类无参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">B1</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;我是B类有参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C1</span> <span class="keyword">extends</span> <span class="title class_">B1</span> &#123; <span class="comment">//C类继承B类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">C1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;我是C类的无参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">C1</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(<span class="string">&quot;hahah&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;我是C类的有参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-6-3-返回信息叠加（复用）"><a href="#2-6-3-返回信息叠加（复用）" class="headerlink" title="2.6.3 返回信息叠加（复用）"></a>2.6.3 返回信息叠加（复用）</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221121191336626.png" alt="image-20221121191336626"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113184509516.png" alt="image-20230113184509516"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113184600872.png" alt="image-20230113184600872"></p><h6 id="源码–未改-1"><a href="#源码–未改-1" class="headerlink" title="源码–未改"></a>源码–未改</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.new_.extends_.exercise;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2023年1月13日</span></span><br><span class="line"><span class="comment"> * 练习继承*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Exercise03</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">编写Computer类，包含CPU、内存、硬盘等属性，getDetails方法用于返▣Computer的详细信息</span></span><br><span class="line"><span class="comment">编写PC子类，继承Computer类，添加特有属性【品牌brand】</span></span><br><span class="line"><span class="comment">编写NotePad子类，继承Computer类，添加特有属性【演示color】</span></span><br><span class="line"><span class="comment">编写Test类，在main方法中创建PC和NotePad对象，分别给对象中特有的属性</span></span><br><span class="line"><span class="comment">赋值，以及从Computer类继承的属性赋值，并使用方法并打印输出信息。*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String cpu;</span><br><span class="line">    <span class="keyword">private</span> String mey;</span><br><span class="line">    <span class="keyword">private</span> String hard;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCpu</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cpu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCpu</span><span class="params">(String cpu)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cpu = cpu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMey</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMey</span><span class="params">(String mey)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mey = mey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getHard</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> hard;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHard</span><span class="params">(String hard)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.hard = hard;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDetails</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;cpu:&quot;</span> + cpu + <span class="string">&quot;,mey:&quot;</span> + mey +</span><br><span class="line">                <span class="string">&quot;,hard:&quot;</span> + hard;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Pc</span> <span class="keyword">extends</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String brand;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getBrand</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBrand</span><span class="params">(String brand)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.brand = brand;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NotePad</span> <span class="keyword">extends</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line">    String color;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Pc</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Pc</span>();</span><br><span class="line">        pc.setBrand(<span class="string">&quot;amd&quot;</span>);</span><br><span class="line">        pc.setCpu(<span class="string">&quot;5700G&quot;</span>);</span><br><span class="line">        pc.setHard(<span class="string">&quot;1T&quot;</span>);</span><br><span class="line">        pc.setMey(<span class="string">&quot;32G&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;brand:&quot;</span> + pc.getBrand() +<span class="string">&quot;,&quot;</span> + pc.getDetails());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="为什么刚写继承就报错"><a href="#为什么刚写继承就报错" class="headerlink" title="为什么刚写继承就报错"></a>为什么刚写继承就报错</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230113183936707.png" alt="image-20230113183936707"></p><blockquote><p>因为pc继承computer，pc有默认构造器，默认构造器第一行super();</p><p>computer因为写有参构造器所以默认的就没有了,找不到默认构造器就会报错</p></blockquote><h6 id="源码–改版1"><a href="#源码–改版1" class="headerlink" title="源码–改版1"></a>源码–改版1</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.new_.extends_.exercise;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2023年1月13日</span></span><br><span class="line"><span class="comment"> * 练习继承*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Exercise03</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">编写Computer类，包含CPU、内存、硬盘等属性，getDetails方法用于返▣Computer的详细信息</span></span><br><span class="line"><span class="comment">编写PC子类，继承Computer类，添加特有属性【品牌brand】</span></span><br><span class="line"><span class="comment">编写NotePad子类，继承Computer类，添加特有属性【演示color】</span></span><br><span class="line"><span class="comment">编写Test类，在main方法中创建PC和NotePad对象，分别给对象中特有的属性</span></span><br><span class="line"><span class="comment">赋值，以及从Computer类继承的属性赋值，并使用方法并打印输出信息。*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line">    String cpu;</span><br><span class="line">    String mey;</span><br><span class="line">    String dark;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Computer</span><span class="params">(String cpu, String mey, String dark)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cpu = cpu;</span><br><span class="line">        <span class="built_in">this</span>.mey = mey;</span><br><span class="line">        <span class="built_in">this</span>.dark = dark;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCpu</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cpu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCpu</span><span class="params">(String cpu)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cpu = cpu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMey</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMey</span><span class="params">(String mey)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mey = mey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDark</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> dark;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDark</span><span class="params">(String dark)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.dark = dark;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDetails</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;cpu:&quot;</span> + cpu + <span class="string">&quot; 内存:&quot;</span> + mey + <span class="string">&quot; 硬盘：&quot;</span> + dark;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Pc</span> <span class="keyword">extends</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line">    String brand;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Pc</span><span class="params">(String cpu, String mey, String dark, String brand)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(cpu, mey, dark);</span><br><span class="line">        <span class="built_in">this</span>.brand = brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getBrand</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBrand</span><span class="params">(String brand)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.brand = brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    输出信息方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printinfo</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Pc信息：&quot;</span>);</span><br><span class="line">        System.out.println(getDetails() + <span class="string">&quot; 品牌：&quot;</span> + brand);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Pc</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Pc</span>(<span class="string">&quot;5700G&quot;</span>, <span class="string">&quot;32G&quot;</span>, <span class="string">&quot;1T&quot;</span>, <span class="string">&quot;amd&quot;</span>);</span><br><span class="line">        pc.printinfo();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="源码–改版2"><a href="#源码–改版2" class="headerlink" title="源码–改版2"></a>源码–改版2</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.encap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年11月21日</span></span><br><span class="line"><span class="comment"> * 练习继承03</span></span><br><span class="line"><span class="comment"> * 编写Computer类，包含CPU、内存、硬盘等属性，getDetails方法</span></span><br><span class="line"><span class="comment"> * 用于返回Computer的详细信息</span></span><br><span class="line"><span class="comment"> * 编写PC子类，继承Computer类，添加特有属性[品牌brand]</span></span><br><span class="line"><span class="comment"> * 编写NotePad子类，继承Computer类，添加特有属性[演示color]</span></span><br><span class="line"><span class="comment"> * 编写Test类，在main方法中创建PC和NotePad对象，分别给对象特有的属性</span></span><br><span class="line"><span class="comment"> * 赋值，以及从Computer类继承的属性赋值，并使用方法并打印输出信息。*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExtendsEexercise03</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编写Computer类，包含CPU、内存、硬盘等属性，getDetails方法</span></span><br><span class="line"><span class="comment">// 用于返回Computer的详细信息</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String cpu;</span><br><span class="line">    <span class="keyword">private</span> String memory;</span><br><span class="line">    <span class="keyword">private</span> String hardDark;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Computer</span><span class="params">(String cpu, String memory, String hardDark)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cpu = cpu;</span><br><span class="line">        <span class="built_in">this</span>.memory = memory;</span><br><span class="line">        <span class="built_in">this</span>.hardDark = hardDark;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCpu</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cpu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCpu</span><span class="params">(String cpu)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cpu = cpu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMemory</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> memory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMemory</span><span class="params">(String memory)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.memory = memory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getHardDark</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> hardDark;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHardDark</span><span class="params">(String hardDark)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.hardDark = hardDark;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDetails</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Computer信息：cpu:&quot;</span> + cpu + <span class="string">&quot; memory:&quot;</span> + memory +</span><br><span class="line">                <span class="string">&quot; hardDark:&quot;</span> + hardDark;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编写PC子类，继承Computer类，添加特有属性[品牌brand]</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PC</span> <span class="keyword">extends</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String brand;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public PC() &#123;</span></span><br><span class="line"><span class="comment">//        super(&quot;5700G&quot;,&quot;8G&quot;,&quot;1T&quot;);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    这里IDEA 根据继承的规则，super自动调用父类的有参构造器</span></span><br><span class="line"><span class="comment">//    这里也体现：继承的基本思想，父类的构造器完成父类属性初始化</span></span><br><span class="line"><span class="comment">//    子类构造器完成子类构造器初始化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PC</span><span class="params">(String cpu, String memory, String hardDark, String brand)</span> &#123;</span><br><span class="line"><span class="comment">//        调用父类的CPU 内存，硬盘</span></span><br><span class="line">        <span class="built_in">super</span>(cpu, memory, hardDark);</span><br><span class="line">        <span class="built_in">this</span>.brand = brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getBrand</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBrand</span><span class="params">(String brand)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.brand = brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;PC信息：&quot;</span>);</span><br><span class="line"><span class="comment">//        输出信息</span></span><br><span class="line"><span class="comment">//        调用父类的getDetails方法，得到相关属性信息。。</span></span><br><span class="line">        System.out.println(getDetails() + <span class="string">&quot; brand:&quot;</span> + brand);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编写NotePad子类，继承Computer类，添加特有属性[演示color]</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NotePad</span> <span class="keyword">extends</span> <span class="title class_">Computer</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String color;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">NotePad</span><span class="params">(String cpu, String memory, String hardDark, String color)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(cpu, memory, hardDark);</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getColor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setColor</span><span class="params">(String color)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printfInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;PC信息：&quot;</span>);</span><br><span class="line">        System.out.println(getDetails() + <span class="string">&quot; color:&quot;</span> +color);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编写Test类，在main方法中创建PC和NotePad对象，分别给对象特有的属性</span></span><br><span class="line"><span class="comment">//赋值，以及从Computer类继承的属性赋值，并使用方法并打印输出信息。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">PC</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PC</span>(<span class="string">&quot;5700G&quot;</span>,<span class="string">&quot;32G&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;1T&quot;</span>,<span class="string">&quot;amd&quot;</span>);</span><br><span class="line">        pc.printInfo();</span><br><span class="line">        <span class="type">NotePad</span> <span class="variable">notePad</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NotePad</span>(<span class="string">&quot;5700G&quot;</span>,<span class="string">&quot;32G&quot;</span>,</span><br><span class="line">                                        <span class="string">&quot;1T&quot;</span>,<span class="string">&quot;white&quot;</span>);</span><br><span class="line">        notePad.printfInfo();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/imgs/image-20221121213312642.png" alt="image-20221121213312642"></p><h4 id="2-7-super关键字"><a href="#2-7-super关键字" class="headerlink" title="2.7 .super关键字"></a>2.7 .super关键字</h4><h5 id="2-7-1-基本介绍"><a href="#2-7-1-基本介绍" class="headerlink" title="2.7.1 基本介绍"></a>2.7.1 基本介绍</h5><h6 id="x3D-x3D-super-属性名-x3D-x3D"><a href="#x3D-x3D-super-属性名-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;super.属性名&#x3D;&#x3D;"></a>&#x3D;&#x3D;super.属性名&#x3D;&#x3D;</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/imgs/image-20221121213717548.png" alt="image-20221121213717548"></p><h6 id="1-访问父类的属性，但不能访问父类的private属性"><a href="#1-访问父类的属性，但不能访问父类的private属性" class="headerlink" title="1. 访问父类的属性，但不能访问父类的private属性"></a>1. 访问父类的属性，但不能访问父类的private属性</h6><p>A类 父类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115102742542.png" alt="image-20230115102742542"></p><p>B类 继承A类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115102645528.png" alt="image-20230115102645528"></p><blockquote><p>私有的n4访问不了</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115102856965.png" alt="image-20230115102856965"></p><blockquote><ol><li>只能访问父类的n1 n2 n3</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/imgs/image-20221124135638570.png" alt="image-20221124135638570"></p><h6 id="super-方法名-参数列表"><a href="#super-方法名-参数列表" class="headerlink" title="super.方法名(参数列表)"></a><code>super.方法名(参数列表)</code></h6><h6 id="2-访问父类的方法，不能访问父类的private方法-super-方法名-参数列表"><a href="#2-访问父类的方法，不能访问父类的private方法-super-方法名-参数列表" class="headerlink" title="2.访问父类的方法，不能访问父类的private方法   super.方法名(参数列表):"></a>2.访问父类的方法，不能访问父类的private方法   super.方法名(参数列表):</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115103032890.png" alt="image-20230115103032890"></p><h6 id="3-访问父类的构造器（这点前面用过）：super-参数列表-；只能放在构造器的第一句，只能出现一句！"><a href="#3-访问父类的构造器（这点前面用过）：super-参数列表-；只能放在构造器的第一句，只能出现一句！" class="headerlink" title="3.访问父类的构造器（这点前面用过）：super(参数列表)；只能放在构造器的第一句，只能出现一句！"></a>3.访问父类的构造器（这点前面用过）：<code>super(参数列表)；</code>只能放在构造器的第一句，只能出现一句！</h6><p>不能放到普通方法里</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115103255857.png" alt="image-20230115103255857"></p><p>调用</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115103350526.png" alt="image-20230115103350526"></p><h5 id="2-7-2-super访问非同包子类-protected修饰符"><a href="#2-7-2-super访问非同包子类-protected修饰符" class="headerlink" title="2.7.2 super访问非同包子类(protected修饰符)"></a>2.7.2 super访问非同包子类(protected修饰符)</h5><blockquote><p>先建一个方法，用&#x3D;&#x3D;super.属性名&#x3D;&#x3D; or &#x3D;&#x3D;super.方法名&#x3D;&#x3D;</p><p>在主方法中，调用那个方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.pkg;</span><br><span class="line"><span class="comment">/*日期：2022年11月24日</span></span><br><span class="line"><span class="comment">* 访问不同包的protected*/</span></span><br><span class="line"><span class="keyword">import</span> com.hspedu.super_.A;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test1</span> <span class="keyword">extends</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        <span class="comment">//新建对象调用那个方法</span></span><br><span class="line">        <span class="type">Test1</span> <span class="variable">test1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Test1</span>();</span><br><span class="line">        test1.printf();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用父类的protected属性</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">printf</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="built_in">super</span>.n2);</span><br><span class="line"><span class="comment">//        System.out.println(&quot;fsf&quot;);</span></span><br><span class="line">        <span class="built_in">super</span>.test200();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-7-3-super-细节"><a href="#2-7-3-super-细节" class="headerlink" title="2.7.3 super 细节"></a>2.7.3 super 细节</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221129223856733.png" alt="image-20221129223856733"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221129224915900.png" alt="image-20221129224915900"></p><h6 id="1-调用父类的构造器的好处（分工明确，父类属性由父类初始化，子类的属性由子类初始化"><a href="#1-调用父类的构造器的好处（分工明确，父类属性由父类初始化，子类的属性由子类初始化" class="headerlink" title="1. 调用父类的构造器的好处（分工明确，父类属性由父类初始化，子类的属性由子类初始化)"></a><code>1. 调用父类的构造器的好处（分工明确，父类属性由父类初始化，子类的属性由子类初始化)</code></h6><h6 id="2-当子类中有和父类中的成员（属性和方法）重名时，为了访问父类的成员，必须通过super。-如果没有重名，使用super-、this、直接访问是一样的效果！-举例"><a href="#2-当子类中有和父类中的成员（属性和方法）重名时，为了访问父类的成员，必须通过super。-如果没有重名，使用super-、this、直接访问是一样的效果！-举例" class="headerlink" title="2.当子类中有和父类中的成员（属性和方法）重名时，为了访问父类的成员，必须通过super。.如果没有重名，使用super.、this、直接访问是一样的效果！[举例]"></a><code>2.当子类中有和父类中的成员（属性和方法）重名时，为了访问父类的成员，必须通过super。.如果没有重名，使用super.、this、直接访问是一样的效果！[举例]</code></h6><p>A类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115104007635.png" alt="image-20230115104007635"></p><p>B类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115104046361.png" alt="image-20230115104046361"></p><p>希望调用父类A的caL方法</p><blockquote><p>cal();</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115104519083.png" alt="image-20230115104519083"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115104802112.png" alt="image-20230115104802112"></p><blockquote><p> this.cal()等价于cal()</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130112357690.png" alt="image-20221130112357690"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130112855812.png" alt="image-20221130112855812"></p><blockquote><p> super.cal()</p></blockquote><blockquote><p>找cal方法的顺序是直接查找父类，其他规则一样</p><p>子类有cal不会调用</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115104918730.png" alt="image-20230115104918730"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130112711215.png" alt="image-20221130112711215"></p><h6 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115105441883.png" alt="image-20230115105441883"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115105547739.png" alt="image-20230115105547739"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130113320336.png" alt="image-20221130113320336"></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//        n1和this.n1 查找规则是</span><br><span class="line">//        (1) 先找本类，如果有，则调用</span><br><span class="line">//        (2) 如果没有，则找父类(如果有，并可以调用，则调用</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130113545247.png" alt="image-20221130113545247"></p><h6 id="找到了不能访问要报错-cannot-access"><a href="#找到了不能访问要报错-cannot-access" class="headerlink" title="找到了不能访问要报错 cannot access"></a>找到了不能访问要报错 cannot access</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130113819834.png" alt="image-20221130113819834"></p><h6 id="图"><a href="#图" class="headerlink" title="图"></a>图</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130114144250.png" alt="image-20221130114144250"></p><h6 id="代码-18"><a href="#代码-18" class="headerlink" title="代码"></a>代码</h6><blockquote><p>A类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.super_;</span><br><span class="line"><span class="comment">/*日期：2022年11月29日</span></span><br><span class="line"><span class="comment">* 练习super关键字*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> &#123; <span class="comment">// 父类</span></span><br><span class="line"><span class="comment">//    四个属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> <span class="variable">n2</span> <span class="operator">=</span> <span class="number">200</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">n3</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">n4</span> <span class="operator">=</span> <span class="number">400</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">A</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A无参构造器&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">A</span><span class="params">(<span class="type">int</span> n1, <span class="type">int</span> n2, <span class="type">int</span> n3, <span class="type">int</span> n4)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.n1 = n1;</span><br><span class="line">        <span class="built_in">this</span>.n2 = n2;</span><br><span class="line">        <span class="built_in">this</span>.n3 = n3;</span><br><span class="line">        <span class="built_in">this</span>.n4 = n4;</span><br><span class="line">        System.out.println(<span class="string">&quot;A有参构造器&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    父类方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cal</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A类的cal()....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test100</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span>  <span class="keyword">void</span> <span class="title function_">test200</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test200()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">test300</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">test400</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>B类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.super_;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年11月21日</span></span><br><span class="line"><span class="comment"> * 练习super关键字*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span> &#123;  <span class="comment">// 子类</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">888</span>;</span><br><span class="line"><span class="comment">//   访问父类的构造器(这点前面用过）</span></span><br><span class="line"><span class="comment">//   super(参数列表);  只能放在构造器的第一句，只能出现一次</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">B</span> <span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line"><span class="comment">//        super(1,2,3,4);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    访问父类的属性，但不能访问父类的private属性 [案例]super.属性名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hi</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="built_in">super</span>.n1 + <span class="string">&quot; &quot;</span> + <span class="built_in">super</span>.n2 + <span class="string">&quot; &quot;</span> +</span><br><span class="line">                            <span class="built_in">super</span>.n3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cal</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;子类的cal方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sum</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;B类的sum方法&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        调用父类的cal方法</span></span><br><span class="line"><span class="comment">//        这时因为子类B没有cal方法，因此可以用下面三种方式</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 找cal方法时，顺序是</span></span><br><span class="line"><span class="comment">//        1. 先找本类，如果有，则调用</span></span><br><span class="line"><span class="comment">//        2. 如果没有，则找父类(如果有，并可以调用，则调用)</span></span><br><span class="line"><span class="comment">//        3.  如果父类没有，则继续找父类的父类，整个规则，就是一样的，直到Objcect类</span></span><br><span class="line"><span class="comment">//        提示：如果查找方法的过程中，找到了，但是不能访问，则报错 cannot acct</span></span><br><span class="line"><span class="comment">//              如果查找方法的过程中，没有找到，则提示方法不存在</span></span><br><span class="line">        cal();</span><br><span class="line">        <span class="built_in">super</span>.cal();</span><br><span class="line">        <span class="built_in">this</span>.cal();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        演示访问属性的规则</span></span><br><span class="line"><span class="comment">//        n1和this.n1 查找规则是</span></span><br><span class="line"><span class="comment">//        (1) 先找本类，如果有，则调用</span></span><br><span class="line"><span class="comment">//        (2) 如果没有，则找父类(如果有，并可以调用，则调用</span></span><br><span class="line"></span><br><span class="line">        System.out.println(n1);</span><br><span class="line">        System.out.println(<span class="built_in">this</span>.n1);</span><br><span class="line">        System.out.println(<span class="built_in">super</span>.n1);</span><br><span class="line">        System.out.println(n2);</span><br><span class="line">        System.out.println(<span class="built_in">this</span>.n2);</span><br><span class="line">        System.out.println(<span class="built_in">super</span>.n2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    访问父类的方法，不能访问父类的private方法super.方法名(参数列表);</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">ok</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.test100();</span><br><span class="line">        <span class="built_in">super</span>.test200();</span><br><span class="line">        <span class="built_in">super</span>.test300();</span><br><span class="line"><span class="comment">//        super.test400(); //不能访问父类private方法</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>测试类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.super_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Super01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        b.sum();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="3-super的访问不限于直接父类-如果爷爷类和本类中有同名的成员-也可以使用super访问爷爷类的成员-如果多个基类-上级类-都有同名的成员-使用super访问遵循就近原则"><a href="#3-super的访问不限于直接父类-如果爷爷类和本类中有同名的成员-也可以使用super访问爷爷类的成员-如果多个基类-上级类-都有同名的成员-使用super访问遵循就近原则" class="headerlink" title="3.  super的访问不限于直接父类,如果爷爷类和本类中有同名的成员,也可以使用super访问爷爷类的成员,如果多个基类(上级类)都有同名的成员,使用super访问遵循就近原则"></a><code>3.  super的访问不限于直接父类,如果爷爷类和本类中有同名的成员,也可以使用super访问爷爷类的成员,如果多个基类(上级类)都有同名的成员,使用super访问遵循就近原则</code></h6><p>Base类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115110558026.png" alt="image-20230115110558026"></p><p>A类继承 Base类</p><p>B类写test方法测试</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115110801090.png" alt="image-20230115110801090"></p><blockquote><p>结果是100，是A里的n1</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115110911516.png" alt="image-20230115110911516"></p><blockquote><p>如果父类没有，就找爷爷级，一直到Object类</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130122428291.png" alt="image-20221130122428291"></p><h4 id="2-8-super和this的比较"><a href="#2-8-super和this的比较" class="headerlink" title="2.8 super和this的比较"></a>2.8 super和this的比较</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130122914426.png" alt="image-20221130122914426"></p><h3 id="3-方法重写-x2F-覆盖-override"><a href="#3-方法重写-x2F-覆盖-override" class="headerlink" title="3. 方法重写&#x2F;覆盖(override)"></a>3. 方法重写&#x2F;覆盖(override)</h3><h4 id="3-1-名称、返回类型、参数一样"><a href="#3-1-名称、返回类型、参数一样" class="headerlink" title="3.1 名称、返回类型、参数一样"></a>3.1 名称、返回类型、参数一样</h4><blockquote><p>不一定是一层关系</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130123632533.png" alt="image-20221130123632533"></p><p>Animal类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115153627110.png" alt="image-20230115153627110"></p><p>Dog类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115153657126.png" alt="image-20230115153657126"></p><blockquote><p>重写</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115153818012.png" alt="image-20230115153818012"></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//    1.因为Dog是Animal的子类</span><br><span class="line">//    2.Dog的 cry方法和 Animal的 cry定义形式上一样(名称，返回类型，参数)</span><br><span class="line">//    3.这时我们就说 Dog的cry方法，重写了Animal的cry方法</span><br></pre></td></tr></table></figure></blockquote><blockquote><ol><li>调用的&#x3D;&#x3D;dog.cry()&#x3D;&#x3D; 方法输出的是 子类的方法</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130125301834.png" alt="image-20221130125301834"></p><blockquote><ol start="2"><li>把子类的&#x3D;&#x3D;cry()&#x3D;&#x3D;方法注释后，会输出父类的方法</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130125434497.png" alt="image-20221130125434497"></p><blockquote><ol start="3"><li>代码</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.override_;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年11月30日</span></span><br><span class="line"><span class="comment"> * 重写入门*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Override01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        演示方法重写的情况</span></span><br><span class="line">        <span class="type">Dog</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">        dog.cry(); <span class="comment">//ctrl + B 找方法位置</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//父类Animal</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="comment">//    父类方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cry</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;动物叫。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类Dog</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    1.因为Dog是Animal的子类</span></span><br><span class="line"><span class="comment">//    2.Dog的 cry方法和 Animal的 cry定义形式上一样(名称，返回类型，参数)</span></span><br><span class="line"><span class="comment">//    3.这时我们就说 Dog的cry方法，重写了Animal的cry方法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//    子类方法</span></span><br><span class="line"><span class="comment">//    public void cry() &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;小狗汪汪。。&quot;);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-x3D-x3D-方法重写细节-x3D-x3D"><a href="#3-2-x3D-x3D-方法重写细节-x3D-x3D" class="headerlink" title="3.2 &#x3D;&#x3D;方法重写细节&#x3D;&#x3D;"></a>3.2 &#x3D;&#x3D;方法重写细节&#x3D;&#x3D;</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221201181118327.png" alt="image-20221201181118327"></p><h5 id="1-x3D-x3D-子类的方法的参数，方法名称，要和父类方法的参数，方法名称完全一样-x3D-x3D"><a href="#1-x3D-x3D-子类的方法的参数，方法名称，要和父类方法的参数，方法名称完全一样-x3D-x3D" class="headerlink" title="1.&#x3D;&#x3D;子类的方法的参数，方法名称，要和父类方法的参数，方法名称完全一样&#x3D;&#x3D;"></a>1.&#x3D;&#x3D;子类的方法的参数，方法名称，要和父类方法的参数，方法名称完全一样&#x3D;&#x3D;</h5><blockquote><p>子类加参数或者改名都不构成重写</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115154151768.png" alt="image-20230115154151768"></p><h5 id="2-x3D-x3D-子类方法的返回类型和父类方法返回类型一样，或者是父类返回类型的子类比如父类返回类型是Object-子类方法返回类型是String-x3D-x3D"><a href="#2-x3D-x3D-子类方法的返回类型和父类方法返回类型一样，或者是父类返回类型的子类比如父类返回类型是Object-子类方法返回类型是String-x3D-x3D" class="headerlink" title="2.&#x3D;&#x3D;子类方法的返回类型和父类方法返回类型一样，或者是父类返回类型的子类比如父类返回类型是Object,子类方法返回类型是String&#x3D;&#x3D;"></a>2.&#x3D;&#x3D;子类方法的返回类型和父类方法返回类型一样，或者是父类返回类型的子类比如父类返回类型是Object,子类方法返回类型是String&#x3D;&#x3D;</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115154447196.png" alt="image-20230115154447196"></p><p> <strong>父类String，子类Object就会显示不兼容</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221201181837201.png" alt="image-20221201181837201"></p><blockquote><p>返回值不一样就会报错</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115154638985.png" alt="image-20230115154638985"></p><p><strong>子类中的返回值可以是父类方法一样的返回值，也可以是父类方法返回值的子类返回值</strong></p><p>AAA类</p><p>BBB类继承AAA类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115154750022.png" alt="image-20230115154750022"></p><p>Animal类中添加AAA类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115154840244.png" alt="image-20230115154840244"></p><h6 id="子类可以返回父类或其子类"><a href="#子类可以返回父类或其子类" class="headerlink" title="子类可以返回父类或其子类"></a>子类可以返回父类或其子类</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115154913121.png" alt="image-20230115154913121"></p><h5 id="3-x3D-x3D-子类方法不能缩小父类方法的访问权限-x3D-x3D"><a href="#3-x3D-x3D-子类方法不能缩小父类方法的访问权限-x3D-x3D" class="headerlink" title="3.&#x3D;&#x3D;子类方法不能缩小父类方法的访问权限&#x3D;&#x3D;"></a>3.&#x3D;&#x3D;子类方法不能缩小父类方法的访问权限&#x3D;&#x3D;</h5><p>在Animal类中添加eat方法</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115155119586.png" alt="image-20230115155119586"></p><p>在Dog中写public构成重载</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115155218631.png" alt="image-20230115155218631"></p><blockquote><p>把方法改小(protected)则报错</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115155318038.png" alt="image-20230115155318038"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115155434337.png" alt="image-20230115155434337"></p><h6 id="子类可以扩大权限"><a href="#子类可以扩大权限" class="headerlink" title="子类可以扩大权限"></a>子类可以扩大权限</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221202162802353.png" alt="image-20221202162802353"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221202163133159.png" alt="image-20221202163133159"></p><h5 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.override_;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年11月30日</span></span><br><span class="line"><span class="comment"> * 重写入门*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Override01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        演示方法重写的情况</span></span><br><span class="line">        <span class="type">Dog</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">        dog.cry(); <span class="comment">//ctrl + B 找方法位置</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m2</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//父类Animal</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="comment">//    父类方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cry</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;动物叫。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">m1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">m2</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> AAA <span class="title function_">m3</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类Dog</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    1.因为Dog是Animal的子类</span></span><br><span class="line"><span class="comment">//    2.Dog的 cry方法和 Animal的 cry定义形式上一样(名称，返回类型，参数)</span></span><br><span class="line"><span class="comment">//    3.这时我们就说 Dog的cry方法，重写了Animal的cry方法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//    子类方法</span></span><br><span class="line"><span class="comment">//    public void cry() &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;小狗汪汪。。&quot;);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//    子类方法的返回类型和父类方法返回类型一样，或者是父类返回类型的子类</span></span><br><span class="line"><span class="comment">//比如父类返回类型是Object,子类方法返回类型是String</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">m1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    Object 不是 String 的子类，因此编译错误</span></span><br><span class="line"><span class="comment">//    public Object m2() &#123;</span></span><br><span class="line"><span class="comment">//        return null;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BBB <span class="title function_">m3</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*    protected void eat() &#123; // 父类是public 子类不能变小</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123; <span class="comment">//子类方法可以扩大父类方法的访问权限</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*父类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AAA</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*子类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BBB</span> <span class="keyword">extends</span> <span class="title class_">AAA</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> AAA <span class="title function_">m3</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-方法重载和重写的比较"><a href="#3-3-方法重载和重写的比较" class="headerlink" title="3.3 方法重载和重写的比较"></a>3.3 方法重载和重写的比较</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221202163518116.png" alt="image-20221202163518116"></p><h4 id="3-4-方法重写练习（复用）"><a href="#3-4-方法重写练习（复用）" class="headerlink" title="3.4 方法重写练习（复用）"></a>3.4 方法重写练习（复用）</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221202182415816.png" alt="image-20221202182415816"></p><blockquote><ol><li>编写一个Person类，包括属性&#x2F;private(name、age),构造器、方法say(返回自我介绍的字符串)。<br>2.编写一个Student类，继承Person类，增加id、score属性&#x2F;private,以及构造器，定义say方法（返回自我介绍的信息）。<br>3.在main中，分别创建Person和Student对象，调用say方法输出自我介绍。</li></ol></blockquote><h5 id="源码–未改-2"><a href="#源码–未改-2" class="headerlink" title="源码–未改"></a>源码–未改</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.new_.overide.exercise;</span><br><span class="line"><span class="comment">/*2023年1月14日</span></span><br><span class="line"><span class="comment">* 重写练习*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 1.编写一个Person类，包括属性/private(name、age),构造器、方法say(返</span></span><br><span class="line"><span class="comment">回自我介绍的字符串)。</span></span><br><span class="line"><span class="comment">2.编写一个Student类，继承Person类，增加id、scorel属性/private,以及构造</span></span><br><span class="line"><span class="comment">器，定义sy方法（返回自我介绍的信息）。</span></span><br><span class="line"><span class="comment">3.在main中，分别创建Person和Student对象，调用say方法输出自我介绍。*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OverrideExercise</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">cuiyq</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;cuiyq&quot;</span>, <span class="number">20</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;小白&quot;</span>, <span class="number">30</span>, <span class="number">1</span>, <span class="number">30</span>);</span><br><span class="line">        System.out.println(cuiyq.say());</span><br><span class="line">        System.out.println(n1.say());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;名字：&quot;</span> + name + <span class="string">&quot; 年龄：&quot;</span> + age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">int</span> id, <span class="type">double</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, age);</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.say() + <span class="string">&quot; id:&quot;</span> + id + <span class="string">&quot; score:&quot;</span> + score;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="源码–改版-1"><a href="#源码–改版-1" class="headerlink" title="源码–改版"></a>源码–改版</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.override_;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 日期：2022年12月2日</span></span><br><span class="line"><span class="comment">* 练习：重写练习</span></span><br><span class="line"><span class="comment">*       输出信息叠加</span></span><br><span class="line"><span class="comment">*   1.编写一个Person类，包括属性/private(name、age),构造器、方法say(返回自我介绍的字符串)。</span></span><br><span class="line"><span class="comment">    2.编写一个Student类，继承Person类，增加id、score属性/private,以及构造器，</span></span><br><span class="line"><span class="comment">        定义say方法（返回自我介绍的信息）。</span></span><br><span class="line"><span class="comment">    3.在main中，分别创建Person和Student对象，调用say方法输出自我介绍。</span></span><br><span class="line"><span class="comment">*       */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OverrideExercise</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        在main中，分别创建Person和Student对象，调用say方法输出自我介绍。</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;person&quot;</span>, <span class="number">20</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;student&quot;</span>, <span class="number">20</span>, <span class="string">&quot;1号&quot;</span>, <span class="string">&quot;34&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(person.say());</span><br><span class="line">        System.out.println(student.say());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.编写一个Person类，包括属性/private(name、age),构造器、方法say(返回自我介绍的字符串)。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;名字=：&quot;</span> + <span class="built_in">this</span>.name + <span class="string">&quot;年龄=:&quot;</span> + <span class="built_in">this</span>.age;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.编写一个Student类，继承Person类，增加id、score属性/private,以及构造器，</span></span><br><span class="line"><span class="comment">//        定义say方法（返回自我介绍的信息）。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age,</span></span><br><span class="line"><span class="params">                   String ID, String score)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, age); <span class="comment">// 这里会调用父类构造器</span></span><br><span class="line">        <span class="built_in">this</span>.id = ID;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getScore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(String score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        返回父类的say方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.say() + <span class="string">&quot;id= &quot;</span> + <span class="built_in">this</span>.id + <span class="string">&quot;score=&quot;</span> + <span class="built_in">this</span>.score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-x3D-x3D-多态-难度最大-x3D-x3D-polymorphic"><a href="#4-x3D-x3D-多态-难度最大-x3D-x3D-polymorphic" class="headerlink" title="4. &#x3D;&#x3D;多态(难度最大)&#x3D;&#x3D;(polymorphic)"></a>4. &#x3D;&#x3D;多态(难度最大)&#x3D;&#x3D;(polymorphic)</h3><h4 id="4-1-养宠物引出多态"><a href="#4-1-养宠物引出多态" class="headerlink" title="4.1 养宠物引出多态"></a>4.1 养宠物引出多态</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221202190449045.png" alt="image-20221202190449045"></p><h5 id="给狗喂大棒骨"><a href="#给狗喂大棒骨" class="headerlink" title="给狗喂大棒骨"></a>给狗喂大棒骨</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.poly_;</span><br><span class="line"><span class="comment">/*2022年12月3日</span></span><br><span class="line"><span class="comment">* 目的：引出多态</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//请编写一个程序，Master类中有一个feed(喂食)方法，</span></span><br><span class="line"><span class="comment">// 可以完成主人给动物喂食物的信息。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Poly01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Master</span> <span class="variable">master</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Master</span>(<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">        <span class="type">Dog</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="string">&quot;小白&quot;</span>);</span><br><span class="line">        <span class="type">Bone</span> <span class="variable">bone</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bone</span>(<span class="string">&quot;大棒骨&quot;</span>);</span><br><span class="line">        master.feed(dog, bone);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//食物类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Food</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Food</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//鱼肉类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Fish</span> <span class="keyword">extends</span> <span class="title class_">Food</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Fish</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//骨头类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Bone</span> <span class="keyword">extends</span> <span class="title class_">Food</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Bone</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//动物类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Animal</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//猫类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Cat</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//狗类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Dog</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主人类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Master</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Master</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    主人给小狗喂食方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">feed</span><span class="params">(Dog dog, Bone bone)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;主人：&quot;</span> + name +</span><br><span class="line">                            <span class="string">&quot; 给 &quot;</span> + dog.getName() + <span class="string">&quot; 喂 &quot;</span> +</span><br><span class="line">                            bone.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="给猫喂黄花鱼-方法重载"><a href="#给猫喂黄花鱼-方法重载" class="headerlink" title="给猫喂黄花鱼(方法重载)"></a>给猫喂黄花鱼(方法重载)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    主人给小猫喂黄花鱼</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">feed</span><span class="params">(Cat cat, Fish fish)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;主人：&quot;</span> + name +</span><br><span class="line">            <span class="string">&quot; 给 &quot;</span> + cat.getName() + <span class="string">&quot; 喂 &quot;</span> +</span><br><span class="line">            fish.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221203095416360.png" alt="image-20221203095416360"></p><h5 id="如果动物很多，食物很多-（feed方法很多，不利于管理和维护）"><a href="#如果动物很多，食物很多-（feed方法很多，不利于管理和维护）" class="headerlink" title="如果动物很多，食物很多 （feed方法很多，不利于管理和维护）"></a>如果动物很多，食物很多 （feed方法很多，不利于管理和维护）</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115160523253.png" alt="image-20230115160523253"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221203095848231.png" alt="image-20221203095848231"></p><h4 id="4-2-x3D-x3D-多态基本介绍-x3D-x3D"><a href="#4-2-x3D-x3D-多态基本介绍-x3D-x3D" class="headerlink" title="4.2 &#x3D;&#x3D;多态基本介绍&#x3D;&#x3D;"></a>4.2 &#x3D;&#x3D;多态基本介绍&#x3D;&#x3D;</h4><blockquote><p>方法或对象具有多种形态。是面向对象的第三大特征，</p><p>多态是建立在封装和继承基础之上的。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221203100006872.png" alt="image-20221203100006872"></p><h5 id="4-2-1-方法的多态"><a href="#4-2-1-方法的多态" class="headerlink" title="4.2.1 方法的多态"></a>4.2.1 方法的多态</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221203100315032.png" alt="image-20221203100315032"></p><p>B类 父类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115160658097.png" alt="image-20230115160658097"></p><p>A类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115160715704.png" alt="image-20230115160715704"></p><blockquote><p>重载</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115160750729.png" alt="image-20230115160750729"></p><h6 id="方法重载体现多态"><a href="#方法重载体现多态" class="headerlink" title="方法重载体现多态"></a>方法重载体现多态</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115160857559.png" alt="image-20230115160857559"></p><h6 id="重写体现多态"><a href="#重写体现多态" class="headerlink" title="重写体现多态"></a>重写体现多态</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115161044579.png" alt="image-20230115161044579"></p><blockquote><p>我们通过不同的参数个数去调用sum方法，就会调用不同的方法</p><p>因此对sum方法来说，就是多种状态的提现。</p></blockquote><blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        这里我们传入不同的参数，就会调用不同sum方法，就体现多态</span></span><br><span class="line">     System.out.println(a.sum(<span class="number">10</span>, <span class="number">20</span>));</span><br><span class="line">     System.out.println(a.sum(<span class="number">10</span>, <span class="number">20</span>,<span class="number">30</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//        方法重写体现多态</span></span><br><span class="line">     <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">     b.say();</span><br><span class="line">     a.say();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.poly_;</span><br><span class="line"><span class="comment">/*日期：2022年12月3日</span></span><br><span class="line"><span class="comment">* 方法的多态*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PloyMethod</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        方法重载构成多态</span></span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        System.out.println(a.sum(<span class="number">10</span>, <span class="number">20</span>));</span><br><span class="line">        System.out.println(a.sum(<span class="number">10</span>, <span class="number">20</span>,<span class="number">30</span>));</span><br><span class="line"></span><br><span class="line">        a.say();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;B say() 方法被调用。。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> n1, <span class="type">int</span> n2)</span> &#123; <span class="comment">// 和下面的sum构成重载</span></span><br><span class="line">        <span class="keyword">return</span> n1 + n2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> n1, <span class="type">int</span> n2, <span class="type">int</span> n3)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> n1 + n2 + n3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A say() 方法被调用&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="4-2-2-x3D-x3D-对象的多态-核心-x3D-x3D"><a href="#4-2-2-x3D-x3D-对象的多态-核心-x3D-x3D" class="headerlink" title="4.2.2 &#x3D;&#x3D;对象的多态(核心)&#x3D;&#x3D;"></a>4.2.2 &#x3D;&#x3D;对象的多态(核心)&#x3D;&#x3D;</h5><blockquote><p>父类的引用指向子类的对象</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221204082843530.png" alt="image-20221204082843530"></p><h6 id="1-一个对象的编译类型和运行类型可以不一致，也可以一致"><a href="#1-一个对象的编译类型和运行类型可以不一致，也可以一致" class="headerlink" title="1.一个对象的编译类型和运行类型可以不一致，也可以一致"></a>1.<strong>一个对象的编译类型和运行类型可以不一致，也可以一致</strong></h6><blockquote><p>子类对象赋给父类引用</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115161327553.png" alt="image-20230115161327553"></p><h6 id="2-编译类型在定义对象时，就确定了，不能改变"><a href="#2-编译类型在定义对象时，就确定了，不能改变" class="headerlink" title="2.编译类型在定义对象时，就确定了，不能改变"></a>2.<strong>编译类型在定义对象时，就确定了，不能改变</strong></h6><p>animal一旦定义，编译类型就确定了</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115161458123.png" alt="image-20230115161458123"></p><h6 id="3-运行类型可以改变"><a href="#3-运行类型可以改变" class="headerlink" title="3.运行类型可以改变"></a>3.<strong>运行类型可以改变</strong></h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115161640938.png" alt="image-20230115161640938"></p><h6 id="4-编译类型看定义时-x3D-号-的左边，运行类型看-x3D-号的-右边"><a href="#4-编译类型看定义时-x3D-号-的左边，运行类型看-x3D-号的-右边" class="headerlink" title="4.编译类型看定义时 &#x3D; 号 的左边，运行类型看 &#x3D; 号的 右边"></a>4.<strong>编译类型看定义时 &#x3D; 号 的左边，运行类型看 &#x3D; 号的 右边</strong></h6><p>Animal类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115161734254.png" alt="image-20230115161734254"></p><p>Cat类继承Animal类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115161810219.png" alt="image-20230115161810219"></p><p>Dog类继承Animal类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115161839133.png" alt="image-20230115161839133"></p><p>测试类</p><h6 id="体验多态"><a href="#体验多态" class="headerlink" title="体验多态"></a>体验多态</h6><blockquote></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115161919855.png" alt="image-20230115161919855"></p><blockquote><p> 输出小狗汪汪</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115162007601.png" alt="image-20230115162007601"></p><p>运行类型 改为Cat</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115162213367.png" alt="image-20230115162213367"></p><blockquote><p>输出小猫喵喵</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115162236718.png" alt="image-20230115162236718"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.poly_.objectpoly_;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*日期：2022年12月4日</span></span><br><span class="line"><span class="comment"> * 体验多态的特点*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PolyObject</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        体验多态特点</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        animal 编译类型就是 Animal ，运行类型 Dog</span></span><br><span class="line">        <span class="type">Animal</span> <span class="variable">animal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line"><span class="comment">//   因为运行时，执行到改行时，运行类型是Dog，所以cry就是Dog的cry</span></span><br><span class="line">        animal.cry(); <span class="comment">//小狗汪汪</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        运行类型是Cat</span></span><br><span class="line">        animal = <span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">        animal.cry(); <span class="comment">// 小猫喵喵叫</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cry</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Animal 动物在叫。。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cry</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Cat cry() 小猫喵喵叫。。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cry</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Dog cry() 小狗汪汪汪。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="披着羊皮的狼"><a href="#披着羊皮的狼" class="headerlink" title="披着羊皮的狼"></a>披着羊皮的狼</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221204085410068.png" alt="image-20221204085410068"></p><h5 id="4-2-3-多态快速入门"><a href="#4-2-3-多态快速入门" class="headerlink" title="4.2.3 多态快速入门"></a>4.2.3 多态快速入门</h5><h6 id="修改之前的代码"><a href="#修改之前的代码" class="headerlink" title="修改之前的代码"></a>修改之前的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.poly_;</span><br><span class="line"><span class="comment">/*2022年12月3日</span></span><br><span class="line"><span class="comment"> * 目的：引出多态</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//请编写一个程序，Master类中有一个feed(喂食)方法，</span></span><br><span class="line"><span class="comment">// 可以完成主人给动物喂食物的信息。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Poly01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Master</span> <span class="variable">tom</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Master</span>(<span class="string">&quot;tom&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Dog</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="string">&quot;小白&quot;</span>);</span><br><span class="line">        <span class="type">Bone</span> <span class="variable">bone</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bone</span>(<span class="string">&quot;大棒骨&quot;</span>);</span><br><span class="line">        tom.feed(dog, bone);</span><br><span class="line">        System.out.println(<span class="string">&quot;==========&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">Cat</span> <span class="variable">cat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="string">&quot;jack&quot;</span>);</span><br><span class="line">        <span class="type">Fish</span> <span class="variable">fish</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Fish</span>(<span class="string">&quot;黄花鱼&quot;</span>);</span><br><span class="line">        tom.feed(cat, fish);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        运用多态机制</span></span><br><span class="line"><span class="comment">//        添加 给小猪喂米饭</span></span><br><span class="line">        <span class="type">Pig</span> <span class="variable">pig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Pig</span>(<span class="string">&quot;小花猪&quot;</span>);</span><br><span class="line">        <span class="type">Rise</span> <span class="variable">rise</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rise</span>(<span class="string">&quot;米饭&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;======&quot;</span>);</span><br><span class="line">        tom.feed(pig, rise);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//食物类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Food</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Food</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//鱼肉类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Fish</span> <span class="keyword">extends</span> <span class="title class_">Food</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Fish</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//骨头类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Bone</span> <span class="keyword">extends</span> <span class="title class_">Food</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Bone</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//米饭类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Rise</span> <span class="keyword">extends</span> <span class="title class_">Food</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Rise</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//动物类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Animal</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//猫类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Cat</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//狗类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Dog</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//猪类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Pig</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Pig</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//主人类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Master</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Master</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    使用多态机制，可以统一的管理主人喂食的问题</span></span><br><span class="line"><span class="comment">//    animal 编译类型是Animal，可以指向(接收) Animal子类的对象</span></span><br><span class="line"><span class="comment">//    food 编译类型是Food ，可以指向(接收) Food子类的对象</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">feed</span><span class="params">(Animal animal, Food food)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;主人：&quot;</span> + name +</span><br><span class="line">                <span class="string">&quot; 给 &quot;</span> + animal.getName() + <span class="string">&quot; 喂 &quot;</span> +</span><br><span class="line">                food.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    主人给小狗喂食方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">feed</span><span class="params">(Dog dog, Bone bone)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;主人：&quot;</span> + name +</span><br><span class="line">                <span class="string">&quot; 给 &quot;</span> + dog.getName() + <span class="string">&quot; 喂 &quot;</span> +</span><br><span class="line">                bone.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    主人给小猫喂黄花鱼</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">feed</span><span class="params">(Cat cat, Fish fish)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;主人：&quot;</span> + name +</span><br><span class="line">                <span class="string">&quot; 给 &quot;</span> + cat.getName() + <span class="string">&quot; 喂 &quot;</span> +</span><br><span class="line">                fish.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    如果动物很多，食物很多</span></span><br><span class="line"><span class="comment">//    feed 方法很多，不利于管理和维护</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-3-x3D-x3D-多态的细节-x3D-x3D"><a href="#4-3-x3D-x3D-多态的细节-x3D-x3D" class="headerlink" title="4.3 &#x3D;&#x3D;多态的细节&#x3D;&#x3D;"></a>4.3 &#x3D;&#x3D;多态的细节&#x3D;&#x3D;</h4><p>多态的前提是：两个对象(类) 存在继承关系</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221204091437060.png" alt="image-20221204091437060"></p><h5 id="向上转型-父类的引用指向了子类的对象"><a href="#向上转型-父类的引用指向了子类的对象" class="headerlink" title="向上转型:父类的引用指向了子类的对象"></a><strong>向上转型:父类的引用指向了子类的对象</strong></h5><h6 id="1-本质：父类的引用指向了子类的对象"><a href="#1-本质：父类的引用指向了子类的对象" class="headerlink" title="1. 本质：父类的引用指向了子类的对象"></a>1. 本质：父类的引用指向了子类的对象</h6><p>Animal类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115162710259.png" alt="image-20230115162710259"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115162723794.png" alt="image-20230115162723794"></p><p>Cat类 继承Animal类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115162757595.png" alt="image-20230115162757595"></p><p>测试类</p><blockquote><p>不一定是直接父类</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115162953551.png" alt="image-20230115162953551"></p><p>Object obj &#x3D; new Cat();可以的</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115163039708.png" alt="image-20230115163039708"></p><h6 id="x3D-x3D-2-编译类型看左边，运行类型看右边-x3D-x3D"><a href="#x3D-x3D-2-编译类型看左边，运行类型看右边-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;2. 编译类型看左边，运行类型看右边&#x3D;&#x3D;"></a>&#x3D;&#x3D;2. 编译类型看左边，运行类型看右边&#x3D;&#x3D;</h6><h6 id="x3D-x3D-3-可以调用父类中的所有成员-需遵守访问权限-，不能调用子类中特有成员-x3D-x3D"><a href="#x3D-x3D-3-可以调用父类中的所有成员-需遵守访问权限-，不能调用子类中特有成员-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;3. 可以调用父类中的所有成员(需遵守访问权限)，不能调用子类中特有成员&#x3D;&#x3D;"></a>&#x3D;&#x3D;3. 可以调用父类中的所有成员(需遵守访问权限)，不能调用子类中特有成员&#x3D;&#x3D;</h6><p>可以调用父类所有方法</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115163325295.png" alt="image-20230115163325295"></p><blockquote><p> 不能调用私有的</p></blockquote><blockquote><p>不能调用子类特有的成员</p></blockquote><p>能不能掉用是由编译器来决定的</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221204100626926.png" alt="image-20221204100626926"></p><h6 id="4-x3D-x3D-最终运行效果看子类的具体实现-x3D-x3D"><a href="#4-x3D-x3D-最终运行效果看子类的具体实现-x3D-x3D" class="headerlink" title="4. &#x3D;&#x3D;最终运行效果看子类的具体实现&#x3D;&#x3D;"></a>4. &#x3D;&#x3D;最终运行效果看子类的具体实现&#x3D;&#x3D;</h6><blockquote><p>先从运行类型找</p></blockquote><p><strong>最终运行效果看子类的具体实现，即调用方法时，按照从子类开始查找方法</strong></p><p><strong>然后调用，规则我前面我们讲的方法调用规则一致</strong></p><blockquote><p>编译器只认编译类型 -javac</p><p>运行的时候交给java来做了  -java </p></blockquote><blockquote><ol><li><p>运行&#x3D;&#x3D;animal.eat();&#x3D;&#x3D;的时候 </p><p>先看animal是什么类型，一看是猫，从猫类开始找运行方法</p><p>这时候看猫类有eat方法，这时候直接输出方法</p><p>仍然遵循super</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221204102018160.png" alt="image-20221204102018160"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115163949747.png" alt="image-20230115163949747"></p><h6 id="Structure-结构-所以属性和方法一目了然"><a href="#Structure-结构-所以属性和方法一目了然" class="headerlink" title="Structure(结构)   所以属性和方法一目了然"></a>Structure(结构)   所以属性和方法一目了然</h6><h5 id="向下转型-父类调用子类特有成员-方法"><a href="#向下转型-父类调用子类特有成员-方法" class="headerlink" title="向下转型:父类调用子类特有成员(方法)"></a><strong>向下转型:父类调用子类特有成员(方法)</strong></h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221204104018791.png" alt="image-20221204104018791"></p><h6 id="x3D-x3D-1-语法：子类类型-引用名-x3D-（子类类型）父类引用-x3D-x3D"><a href="#x3D-x3D-1-语法：子类类型-引用名-x3D-（子类类型）父类引用-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;1. 语法：子类类型 引用名&#x3D;（子类类型）父类引用;&#x3D;&#x3D;"></a>&#x3D;&#x3D;1. 语法：子类类型 引用名&#x3D;（子类类型）父类引用;&#x3D;&#x3D;</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//      (1)语法：子类类型引用名=（子类类型）父类引用：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        Cat 编译类型是 Cat ，运行类型是Cat</span></span><br><span class="line">        <span class="type">Cat</span> <span class="variable">cat</span> <span class="operator">=</span> (Cat) animal;</span><br><span class="line">        cat.catchMouse(); <span class="comment">//猫爪老鼠</span></span><br></pre></td></tr></table></figure><p> <strong>只能强转父类的引用，不能强转父类的对象</strong></p><blockquote><p>要求&#x3D;&#x3D;animal&#x3D;&#x3D; 原来指向的就是&#x3D;&#x3D;cat&#x3D;&#x3D;对象</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115164542401.png" alt="image-20230115164542401"></p><blockquote><p>Animal animal &#x3D; new Cat();</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221204110323276.png" alt="image-20221204110323276"></p><blockquote><p>生成cat引用也指向 Cat对象</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221204110355474.png" alt="image-20221204110355474"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221204110547715.png" alt="image-20221204110547715"></p><p>&#x3D;&#x3D;把Animal强转成Cat&#x3D;&#x3D;</p><blockquote><p>把Animal强转成Cat</p><p>生成一个新的引用指向cat对象</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221204111007375.png" alt="image-20221204111007375"></p><h6 id="x3D-x3D-2-只能强转父类的引用，不能强转父类的对象-x3D-x3D"><a href="#x3D-x3D-2-只能强转父类的引用，不能强转父类的对象-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;2.只能强转父类的引用，不能强转父类的对象&#x3D;&#x3D;"></a>&#x3D;&#x3D;2.只能强转父类的引用，不能强转父类的对象&#x3D;&#x3D;</h6><h6 id="x3D-x3D-3-要求父类的引用必须指向的是当前目标类型的对象-x3D-x3D"><a href="#x3D-x3D-3-要求父类的引用必须指向的是当前目标类型的对象-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;3. 要求父类的引用必须指向的是当前目标类型的对象&#x3D;&#x3D;"></a>&#x3D;&#x3D;3. 要求父类的引用必须指向的是当前目标类型的对象&#x3D;&#x3D;</h6><blockquote><p>animal原先指向的就是Cat对象</p><p>现在新生成个cat引用也指向Cat对象</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115165319862.png" alt="image-20230115165319862"></p><blockquote><p>第一行，animal原本就是指向猫的</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115165414136.png" alt="image-20230115165414136"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115165614612.png" alt="image-20230115165614612"></p><blockquote><p>只能把指向猫的<code>animal</code>转化成<code>猫</code></p><p>不能把指向狗的<code>animal</code>转成<code>猫</code></p></blockquote><p>Dog类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115165824360.png" alt="image-20230115165824360"></p><blockquote><p>Dog dog &#x3D;  (Dog) animal;</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115165928797.png" alt="image-20230115165928797"></p><blockquote><p>不能让狗变成猫</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115165957909.png" alt="image-20230115165957909"></p><p>子类和子类没关系</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115170110297.png" alt="image-20230115170110297"></p><blockquote><p>运行</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115170130882.png" alt="image-20230115170130882"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115170147516.png" alt="image-20230115170147516"></p><h6 id="x3D-x3D-4-当向下转型后，可以调用子类类型中所有的成员-x3D-x3D"><a href="#x3D-x3D-4-当向下转型后，可以调用子类类型中所有的成员-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;4.当向下转型后，可以调用子类类型中所有的成员&#x3D;&#x3D;"></a>&#x3D;&#x3D;4.当向下转型后，可以调用子类类型中所有的成员&#x3D;&#x3D;</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115164933874.png" alt="image-20230115164933874"></p><p>编译类型为Cat，运行类型为Cat</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230115165109137.png" alt="image-20230115165109137"></p><p>&#x3D;&#x3D;想把指向猫的对象转成狗&#x3D;&#x3D;</p><blockquote><p>不能直接转，猫和狗类没有直接的关系</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221204111600268.png" alt="image-20221204111600268"></p><blockquote><p>必须要建立引用</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221204115452592.png" alt="image-20221204115452592"></p><h6 id="2-属性的值看编译类型"><a href="#2-属性的值看编译类型" class="headerlink" title="2. 属性的值看编译类型"></a>2. 属性的值看编译类型</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221208110833223.png" alt="image-20221208110833223"></p><h5 id="x3D-x3D-属性没有重写之说！属性的值看编译类型-x3D-x3D"><a href="#x3D-x3D-属性没有重写之说！属性的值看编译类型-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;属性没有重写之说！属性的值看编译类型&#x3D;&#x3D;"></a>&#x3D;&#x3D;属性没有重写之说！属性的值看编译类型&#x3D;&#x3D;</h5><p>Base类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115170404162.png" alt="image-20230115170404162"></p><p>Sub类 继承Base类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115170439375.png" alt="image-20230115170439375"></p><blockquote><p> 看编译类型</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115170705650.png" alt="image-20230115170705650"></p><p> <img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115170749516.png" alt="image-20230115170749516"></p><h5 id="instanceOf-比较操作符-x3D-x3D-判断对象的运行类型-x3D-x3D"><a href="#instanceOf-比较操作符-x3D-x3D-判断对象的运行类型-x3D-x3D" class="headerlink" title="instanceOf (比较操作符) (&#x3D;&#x3D;判断对象的运行类型&#x3D;&#x3D;)"></a>instanceOf (比较操作符) (&#x3D;&#x3D;判断对象的运行类型&#x3D;&#x3D;)</h5><blockquote><p>instanceOf比较操作符，用于判断对象的运行类型</p><p>是否为XX类型或XX类型的子类型</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221208124642053.png" alt="image-20221208124642053"></p><p>AA类</p><p>BB类继承AA类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115171107975.png" alt="image-20230115171107975"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115171205010.png" alt="image-20230115171205010"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115171231594.png" alt="image-20230115171231594"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115171257937.png" alt="image-20230115171257937"></p><h4 id="4-4-多态练习"><a href="#4-4-多态练习" class="headerlink" title="4.4 多态练习"></a>4.4 多态练习</h4><h6 id="1-4"><a href="#1-4" class="headerlink" title="1."></a>1.</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115171339764.png" alt="image-20230115171339764"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221209164529201.png" alt="image-20221209164529201"></p><h6 id="2-访问属性看编译类型-方法从运行类型开始看-p314"><a href="#2-访问属性看编译类型-方法从运行类型开始看-p314" class="headerlink" title="2. 访问属性看编译类型 方法从运行类型开始看  p314"></a>2. 访问属性看编译类型 方法从运行类型开始看  p314</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115171607372.png" alt="image-20230115171607372"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221210083522203.png" alt="image-20221210083522203"></p><blockquote><p>b的编译类型是Base ,所以&#x3D;&#x3D;b.count&#x3D;&#x3D; 是10</p><p>b的运行类型，s指向Sub，所以从运行类型开始查找方法</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img01/image-20221210083745997.png" alt="image-20221210083745997"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.poly_.exercise;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PolyeExercise02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Sub</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Sub</span>();</span><br><span class="line">        System.out.println(s.count); <span class="comment">//20</span></span><br><span class="line">        s.display(); <span class="comment">//20</span></span><br><span class="line">        <span class="type">Base</span> <span class="variable">b</span> <span class="operator">=</span> s;</span><br><span class="line">        System.out.println(b == s); <span class="comment">//TRUE</span></span><br><span class="line">        System.out.println(b.count); <span class="comment">//10</span></span><br><span class="line">        b.display(); <span class="comment">//20</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123; <span class="comment">//父类</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">display</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="built_in">this</span>.count);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Sub</span> <span class="keyword">extends</span> <span class="title class_">Base</span> &#123; <span class="comment">//子类</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">display</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="built_in">this</span>.count);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-5-x3D-x3D-动态绑定机制-非常非常重要-x3D-x3D-–DynamicBinding-p315"><a href="#4-5-x3D-x3D-动态绑定机制-非常非常重要-x3D-x3D-–DynamicBinding-p315" class="headerlink" title="4.5 &#x3D;&#x3D;动态绑定机制(非常非常重要)&#x3D;&#x3D; –DynamicBinding p315"></a>4.5 &#x3D;&#x3D;动态绑定机制(非常非常重要)&#x3D;&#x3D; –DynamicBinding p315</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115171950601.png" alt="image-20230115171950601"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115172216332.png" alt="image-20230115172216332"></p><p>A类 父类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115172328204.png" alt="image-20230115172328204"></p><p>B类 继承A类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115172358987.png" alt="image-20230115172358987"></p><p>主类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115172429152.png" alt="image-20230115172429152"></p><h6 id="把子类sum注销"><a href="#把子类sum注销" class="headerlink" title="把子类sum注销"></a>把子类sum注销</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115172524157.png" alt="image-20230115172524157"></p><blockquote><p>子类和父类都有getI</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115172635804.png" alt="image-20230115172635804"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115172708719.png" alt="image-20230115172708719"></p><h5 id="x3D-x3D-1-当调用对象方法的时候，该方法会和该对象的内存地址-x2F-运行类型绑定-x3D-x3D"><a href="#x3D-x3D-1-当调用对象方法的时候，该方法会和该对象的内存地址-x2F-运行类型绑定-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;1. 当调用对象方法的时候，该方法会和该对象的内存地址&#x2F;运行类型绑定&#x3D;&#x3D;"></a>&#x3D;&#x3D;1. 当调用对象方法的时候，该方法会和该对象的内存地址&#x2F;运行类型绑定&#x3D;&#x3D;</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115173518456.png" alt="image-20230115173518456"></p><p>根据动态绑定机制</p><p>应该是跳入子类get方法</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115173558610.png" alt="image-20230115173558610"></p><blockquote><p>返回20</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115173708735.png" alt="image-20230115173708735"></p><h5 id="x3D-x3D-2-当调用对象属性时，没有动态绑定机制，哪里声明，那里使用-x3D-x3D"><a href="#x3D-x3D-2-当调用对象属性时，没有动态绑定机制，哪里声明，那里使用-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;2. 当调用对象属性时，没有动态绑定机制，哪里声明，那里使用&#x3D;&#x3D;"></a>&#x3D;&#x3D;2. 当调用对象属性时，没有动态绑定机制，哪里声明，那里使用&#x3D;&#x3D;</h5><blockquote><p>把子类sum1注销</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115173803355.png" alt="image-20230115173803355"></p><blockquote><p>编译类型A 运行类型B</p><p>从B开始找，B没有，进A类里找</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115174000482.png" alt="image-20230115174000482"></p><h6 id="属性没有动态绑定机制，哪个类声明哪个类使用"><a href="#属性没有动态绑定机制，哪个类声明哪个类使用" class="headerlink" title="属性没有动态绑定机制，哪个类声明哪个类使用"></a>属性没有动态绑定机制，哪个类声明哪个类使用</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115174104465.png" alt="image-20230115174104465"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115174121562.png" alt="image-20230115174121562"></p><blockquote><p>如果子类没有i,则继续发挥继承机制，往父类中找</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115174331662.png" alt="image-20230115174331662"></p><h6 id="无法访问就会报错"><a href="#无法访问就会报错" class="headerlink" title="无法访问就会报错"></a>无法访问就会报错</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115182339110.png" alt="image-20230115182339110"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115174141865.png" alt="image-20230115174141865"></p><h4 id="4-6-多态的应用"><a href="#4-6-多态的应用" class="headerlink" title="4.6 多态的应用"></a>4.6 多态的应用</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115182554661.png" alt="image-20230115182554661"></p><h5 id="1-多态数组"><a href="#1-多态数组" class="headerlink" title="1. 多态数组"></a>1. 多态数组</h5><p>测试类</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115185641589.png" alt="image-20230115185641589"></p><h6 id="动态绑定"><a href="#动态绑定" class="headerlink" title="动态绑定"></a>动态绑定</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115185726648.png" alt="image-20230115185726648"></p><h6 id="教师类没有名字，getName获取名字"><a href="#教师类没有名字，getName获取名字" class="headerlink" title="教师类没有名字，getName获取名字"></a>教师类没有名字，getName获取名字</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115185955161.png" alt="image-20230115185955161"></p><h6 id="学生类"><a href="#学生类" class="headerlink" title="学生类"></a>学生类</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115190045430.png" alt="image-20230115190045430"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115190415760.png" alt="image-20230115190415760"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115190508263.png" alt="image-20230115190508263"></p><h6 id="源码–未改-3"><a href="#源码–未改-3" class="headerlink" title="源码–未改"></a>源码–未改</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.new_.poly_.polyarry;</span><br><span class="line"><span class="comment">/*2023年1月14日</span></span><br><span class="line"><span class="comment">* 练习多态数组*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PloyArray</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        定义一个数组五个值</span></span><br><span class="line">        Person[] person = <span class="keyword">new</span> <span class="title class_">Person</span>[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//        赋值</span></span><br><span class="line">        person[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Person1&quot;</span>, <span class="number">1</span>);</span><br><span class="line">        person[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Student1&quot;</span>, <span class="number">2</span>, <span class="number">30</span>);</span><br><span class="line">        person[<span class="number">2</span>] = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Student2&quot;</span>, <span class="number">3</span>, <span class="number">31</span>);</span><br><span class="line">        person[<span class="number">3</span>] = <span class="keyword">new</span> <span class="title class_">Teacher</span>(<span class="string">&quot;Teacher1&quot;</span>, <span class="number">4</span>, <span class="number">41</span>);</span><br><span class="line">        person[<span class="number">4</span>] = <span class="keyword">new</span> <span class="title class_">Teacher</span>(<span class="string">&quot;Teacher2&quot;</span>, <span class="number">5</span>, <span class="number">42</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; person.length; i++) &#123;</span><br><span class="line">            System.out.println(person[i].say());</span><br><span class="line"></span><br><span class="line"><span class="comment">//            调用子类特有的方法</span></span><br><span class="line">            <span class="keyword">if</span> (person[i] <span class="keyword">instanceof</span> Teacher) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//                教师特有的方法</span></span><br><span class="line">                ((Teacher) person[i]).teach();</span><br><span class="line">                System.out.println(<span class="string">&quot;===&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (person[i] <span class="keyword">instanceof</span> Student) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//                学生特有的方法</span></span><br><span class="line">                ((Student) person[i]).study();</span><br><span class="line">                System.out.println(<span class="string">&quot;====&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123; <span class="comment">//父类</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;name=&quot;</span> + name + <span class="string">&quot;\tage=&quot;</span> + age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123; <span class="comment">//学生类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">double</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, age);</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getScore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(<span class="type">double</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.say() + <span class="string">&quot;\tscore=&quot;</span> + score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;study()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;<span class="comment">//教师类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> salary;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, age);</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSalary</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSalary</span><span class="params">(<span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.say() +  <span class="string">&quot;\tsalary=&quot;</span> + salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">teach</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;teach()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="源码–改版-2"><a href="#源码–改版-2" class="headerlink" title="源码–改版"></a>源码–改版</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.new_.poly_.polyarry;</span><br><span class="line"><span class="comment">/*2023年1月14日</span></span><br><span class="line"><span class="comment">* 练习多态数组*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PloyArray</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        定义一个数组五个值</span></span><br><span class="line">        Person[] person = <span class="keyword">new</span> <span class="title class_">Person</span>[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//        赋值</span></span><br><span class="line">        person[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Person1&quot;</span>, <span class="number">1</span>);</span><br><span class="line">        person[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Student1&quot;</span>, <span class="number">2</span>, <span class="number">30</span>);</span><br><span class="line">        person[<span class="number">2</span>] = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Student2&quot;</span>, <span class="number">3</span>, <span class="number">31</span>);</span><br><span class="line">        person[<span class="number">3</span>] = <span class="keyword">new</span> <span class="title class_">Teacher</span>(<span class="string">&quot;Teacher1&quot;</span>, <span class="number">4</span>, <span class="number">41</span>);</span><br><span class="line">        person[<span class="number">4</span>] = <span class="keyword">new</span> <span class="title class_">Teacher</span>(<span class="string">&quot;Teacher2&quot;</span>, <span class="number">5</span>, <span class="number">42</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; person.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(person[i].say()); <span class="comment">//动态绑定机制</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//            调用子类特有的方法</span></span><br><span class="line">            <span class="keyword">if</span> (person[i] <span class="keyword">instanceof</span> Teacher) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//                教师特有的方法</span></span><br><span class="line">                ((Teacher) person[i]).teach();</span><br><span class="line">                System.out.println(<span class="string">&quot;===&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (person[i] <span class="keyword">instanceof</span> Student) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//                学生特有的方法</span></span><br><span class="line">                ((Student) person[i]).study();</span><br><span class="line">                System.out.println(<span class="string">&quot;====&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123; <span class="comment">//父类</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span>  name + <span class="string">&quot;\tage=&quot;</span> + age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123; <span class="comment">//学生类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">double</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, age);</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getScore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(<span class="type">double</span> score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.say() + <span class="string">&quot;\tscore=&quot;</span> + score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;学生&quot;</span> + getName() + <span class="string">&quot;正在学java&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;<span class="comment">//教师类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> salary;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, age);</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSalary</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSalary</span><span class="params">(<span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.say() +  <span class="string">&quot;\tsalary=&quot;</span> + salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">teach</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        本类没有name属性</span></span><br><span class="line">        System.out.println(<span class="string">&quot;老师   &quot;</span> + getName() + <span class="string">&quot; 正在教java&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-多态参数-ployparameter"><a href="#2-多态参数-ployparameter" class="headerlink" title="2.  多态参数 ployparameter"></a>2.  多态参数 ployparameter</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115191328903.png" alt="image-20230115191328903"></p><blockquote><p>创建经理和普通员工子类，不要非得员工父类</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115201307177.png" alt="image-20230115201307177"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115201459255.png" alt="image-20230115201459255"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115201647677.png" alt="image-20230115201647677"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img03/image-20230115201848720.png" alt="image-20230115201848720"></p><h6 id="源码–未改-4"><a href="#源码–未改-4" class="headerlink" title="源码–未改"></a>源码–未改</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.new_.poly_.ployparameter;</span><br><span class="line"><span class="comment">/*2023年1月15日</span></span><br><span class="line"><span class="comment">* 练习多态应用2*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PloyParameter</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    获取任何员工对象的年工资</span></span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">showEmpAnnual</span><span class="params">(Employee e)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> PuEmplyee) &#123;</span><br><span class="line">            <span class="keyword">return</span> e.getAnnual();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> JingLi) &#123;</span><br><span class="line">            <span class="keyword">return</span> e.getAnnual();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;您的输入有误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    判断员工方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testWork</span><span class="params">(Employee a)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (a <span class="keyword">instanceof</span> PuEmplyee) &#123;</span><br><span class="line">            ((PuEmplyee) a).work();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a <span class="keyword">instanceof</span> JingLi) &#123;</span><br><span class="line">            ((JingLi) a).manage();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        创建三个人</span></span><br><span class="line">        Employee[] employees = <span class="keyword">new</span> <span class="title class_">Employee</span>[<span class="number">3</span>];</span><br><span class="line">        employees[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">PuEmplyee</span>(<span class="string">&quot;普通员工1&quot;</span>, <span class="number">2000</span>);</span><br><span class="line">        employees[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">PuEmplyee</span>(<span class="string">&quot;普通2&quot;</span>, <span class="number">3000</span>);</span><br><span class="line">        employees[<span class="number">2</span>] = <span class="keyword">new</span> <span class="title class_">JingLi</span>(<span class="string">&quot;经理&quot;</span>, <span class="number">5000</span>, <span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">PloyParameter</span> <span class="variable">ployParameter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PloyParameter</span>();</span><br><span class="line">        ployParameter.testWork(employees[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(ployParameter.showEmpAnnual(employees[<span class="number">0</span>]));;</span><br><span class="line"></span><br><span class="line">        ployParameter.testWork(employees[<span class="number">2</span>]);</span><br><span class="line">        System.out.println(ployParameter.showEmpAnnual(employees[<span class="number">2</span>]));;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> salary;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(String name, <span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSalary</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSalary</span><span class="params">(<span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  年工资方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getAnnual</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.salary * <span class="number">12</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PuEmplyee</span> <span class="keyword">extends</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PuEmplyee</span><span class="params">(String name, <span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, salary);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(getName() + <span class="string">&quot; 在努力工作&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    重写getAnnual方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getAnnual</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getAnnual() + getSalary();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JingLi</span> <span class="keyword">extends</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> bonus;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JingLi</span><span class="params">(String name, <span class="type">double</span> salary, <span class="type">double</span> bonus)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, salary);</span><br><span class="line">        <span class="built_in">this</span>.bonus = bonus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    管理方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">manage</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(getName() + <span class="string">&quot; 正在管理&quot;</span> +   <span class="string">&quot;员工&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  重写getAnnual</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getAnnual</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getAnnual() + getSalary() + bonus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="源码–改版-3"><a href="#源码–改版-3" class="headerlink" title="源码–改版"></a>源码–改版</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.new_.poly_.ployparameter;</span><br><span class="line"><span class="comment">/*2023年1月15日</span></span><br><span class="line"><span class="comment">* 练习多态参数2*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PloyParameter</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    获取工资方法 实现获取任何员工对象的年工资，并在main方法中调用该方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showEmpAnna</span><span class="params">(Employee e)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        看运行类型，是哪个就调用当前类的方法</span></span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> Worker) &#123;</span><br><span class="line"><span class="comment">//            因为是重写，所以直接调用</span></span><br><span class="line">            System.out.println(e.getAnnual());</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> Manage) &#123;</span><br><span class="line">            System.out.println(e.getAnnual());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你的输入有误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    testWork 如果是普通员工，则调用work方法，如果是经理，则调用manage方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testWork</span><span class="params">(Employee e)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> Worker) &#123;</span><br><span class="line">            ((Worker) e).work();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> Manage) &#123;</span><br><span class="line">            ((Manage) e).manage();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不做处理&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Worker</span> <span class="variable">jack</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Worker</span>(<span class="string">&quot;jack&quot;</span>, <span class="number">3000</span>);</span><br><span class="line">        <span class="type">Manage</span> <span class="variable">milan</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Manage</span>(<span class="string">&quot;milan&quot;</span>, <span class="number">5000</span>, <span class="number">20000</span>);</span><br><span class="line">        <span class="type">PloyParameter</span> <span class="variable">ployParameter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PloyParameter</span>();</span><br><span class="line"><span class="comment">//        调用获取年工资方法</span></span><br><span class="line">        ployParameter.showEmpAnna(jack);</span><br><span class="line">        ployParameter.showEmpAnna(milan);</span><br><span class="line"></span><br><span class="line"><span class="comment">//      调用testWork方法 如果是普通员工，则调用work方法，如果是经理，则调用manage方法</span></span><br><span class="line">        ployParameter.testWork(jack);</span><br><span class="line">        ployParameter.testWork(milan);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> salary;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(String name, <span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSalary</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSalary</span><span class="params">(<span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    返回年工资方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getAnnual</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.salary * <span class="number">12</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Manage</span> <span class="keyword">extends</span> <span class="title class_">Employee</span>&#123; <span class="comment">//经理类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> bonus;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Manage</span><span class="params">(String name, <span class="type">double</span> salary, <span class="type">double</span> bonus)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, salary);</span><br><span class="line">        <span class="built_in">this</span>.bonus = bonus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getBonus</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bonus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBonus</span><span class="params">(<span class="type">double</span> bonus)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.bonus = bonus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    管理方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">manage</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(getName() + <span class="string">&quot;is 管理员工！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    重写getAnnual</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getAnnual</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getAnnual() + bonus;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Worker</span> <span class="keyword">extends</span> <span class="title class_">Employee</span>&#123; <span class="comment">//普通工人类</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Worker</span><span class="params">(String name, <span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, salary);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(getName() + <span class="string">&quot;is Working!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    重写getAnnual</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getAnnual</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getAnnual() ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/01/18/java/"/>
      <url>/2023/01/18/java/</url>
      
        <content type="html"><![CDATA[<h1 id="java"><a href="#java" class="headerlink" title="java"></a>java</h1><h2 id="数组-array"><a href="#数组-array" class="headerlink" title="数组(array)"></a>数组(array)</h2><h3 id="数组快速入门"><a href="#数组快速入门" class="headerlink" title="数组快速入门"></a>数组快速入门</h3><blockquote><p>数组可以存放<code>多个同一类型</code>的数据。数组也是一种数据类型，是<code>引用类型</code>。</p><p>即：&#x3D;&#x3D;数组就是一组数据&#x3D;&#x3D;</p></blockquote><h3 id="数组的使用"><a href="#数组的使用" class="headerlink" title="数组的使用"></a>数组的使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> arry;</span><br><span class="line"><span class="comment">/*2022年11月9日</span></span><br><span class="line"><span class="comment">* 目的：数组的引出</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Arry01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 统计6只鸡的总体重</span></span><br><span class="line"><span class="comment">        * 求平均体重</span></span><br><span class="line"><span class="comment">        * 3.</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">        * 思路：定义6个变量double，求和*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*        double hen1 = 3;</span></span><br><span class="line"><span class="comment">        double hen2 = 5;</span></span><br><span class="line"><span class="comment">        double hen3 = 6;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        double totalWeight = hen1 + hen2 + hen3;</span></span><br><span class="line"><span class="comment">        double avg = totalWeight / 6;</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;总体重=&quot; + totalWeight +&quot;\t&quot; +</span></span><br><span class="line"><span class="comment">                            &quot;平均体重=&quot; + avg);*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//比如，我们可以用数组来解决上一个问题</span></span><br><span class="line">        <span class="comment">//定义一个数组</span></span><br><span class="line">        <span class="comment">//老韩解毒</span></span><br><span class="line"><span class="comment">//        double[] 表示是double类型的数组</span></span><br><span class="line"><span class="comment">//        数组的名字就是 hens</span></span><br><span class="line"><span class="comment">//        &#123;3,3,5,6,7,8&#125;表示数组的值/元素依次表示</span></span><br><span class="line"><span class="comment">//        数组的第几个元素</span></span><br><span class="line"></span><br><span class="line">        <span class="type">double</span>[] hens = &#123;<span class="number">3</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        遍历数组得到数组的所有元素的和</span></span><br><span class="line"><span class="comment">//        1. 我们可以通过hens[下标]来访问数组的元素</span></span><br><span class="line"><span class="comment">//            下标是从0开始编号的</span></span><br><span class="line"><span class="comment">//        2. 通过for就可以循环的访问 数组的元素/值</span></span><br><span class="line"><span class="comment">//        3. 使用一个变量 totalWeight 将各个元素累积</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===使用数组解决====&quot;</span>);</span><br><span class="line"><span class="comment">//        可以通过数组名.length 得到数组的大小/长度</span></span><br><span class="line">        System.out.println(<span class="string">&quot;数组的长度=&quot;</span> + hens.length);</span><br><span class="line">        <span class="type">double</span> <span class="variable">totalWeight</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; hens.length; i++) &#123;</span><br><span class="line"><span class="comment">//            System.out.println(&quot;第&quot; + (i+1) + &quot;个元素的值= &quot; + hens[i]);</span></span><br><span class="line">            totalWeight += hens[i]; <span class="comment">// 元素累积</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;总体重&quot;</span> + totalWeight +</span><br><span class="line">                            <span class="string">&quot;平均体重=&quot;</span> + (totalWeight / <span class="number">6</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="方式1-动态初始化"><a href="#方式1-动态初始化" class="headerlink" title="方式1 动态初始化"></a>方式1 动态初始化</h4><p><img src="C:\Users\Cuiyq\AppData\Roaming\Typora\typora-user-images\image-20221109161525272.png" alt="image-20221109161525272"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> arry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Arry02</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        演示 数据类型 数组名[] = new 数据类型[大小]</span></span><br><span class="line"><span class="comment">//        循环输入5个成绩，保存到double数组，并输出</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        创建一个大小为5</span></span><br><span class="line">        <span class="type">double</span>[] scores = <span class="keyword">new</span> <span class="title class_">double</span>[<span class="number">5</span>];</span><br><span class="line"><span class="comment">//        2.循环输入</span></span><br><span class="line"><span class="comment">//        scores.length 表示数组的大小/长度</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; scores.length; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入第&quot;</span> + (i+<span class="number">1</span>) +</span><br><span class="line">                    <span class="string">&quot;个数组的值&quot;</span>);</span><br><span class="line">            scores[i] = sc.nextDouble();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        输出，遍历数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;===当前数组的值情况如下===&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; scores.length; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;第&quot;</span> + i + <span class="string">&quot;个元素的值&quot;</span> +</span><br><span class="line">                                scores[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="方式2-动态初始化"><a href="#方式2-动态初始化" class="headerlink" title="方式2 动态初始化"></a>方式2 动态初始化</h4><blockquote><p><code>int[] a;</code> &#x2F;&#x2F; null</p><p>先声明数组，但是声明的时候还没有分配空间</p><p><code>a = new int[3];</code></p><p>才分配空间</p></blockquote><p><img src="C:\Users\Cuiyq\AppData\Roaming\Typora\typora-user-images\image-20221109164403825.png" alt="image-20221109164403825"></p><h2 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h2><h3 id="1-对象内存布局"><a href="#1-对象内存布局" class="headerlink" title="1. 对象内存布局"></a>1.<code> 对象内存布局</code></h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230110723302.png" alt="image-20221230110723302"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230110829677.png" alt="image-20221230110829677"></p><h3 id="2-属性-x2F-成员变量"><a href="#2-属性-x2F-成员变量" class="headerlink" title="2. 属性&#x2F;成员变量"></a>2. 属性&#x2F;成员变量</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230110929279.png" alt="image-20221230110929279"></p><h6 id="可以使数组"><a href="#可以使数组" class="headerlink" title="可以使数组"></a>可以使数组</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230111303020.png" alt="image-20221230111303020"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230111323725.png" alt="image-20221230111323725"></p><h3 id="3-细节"><a href="#3-细节" class="headerlink" title="3. 细节"></a>3. 细节</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230111523685.png" alt="image-20221230111523685"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230111603766.png" alt="image-20221230111603766"></p><h3 id="4-如何创建对象"><a href="#4-如何创建对象" class="headerlink" title="4. 如何创建对象"></a>4. 如何创建对象</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230145107540.png" alt="image-20221230145107540"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230145238445.png" alt="image-20221230145238445"></p><h3 id="5-访问对象"><a href="#5-访问对象" class="headerlink" title="5. 访问对象"></a>5. 访问对象</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230145323803.png" alt="image-20221230145323803"></p><h3 id="6-x3D-x3D-类与对象内存分配机制-x3D-x3D"><a href="#6-x3D-x3D-类与对象内存分配机制-x3D-x3D" class="headerlink" title="6. &#x3D;&#x3D;类与对象内存分配机制&#x3D;&#x3D;"></a>6. &#x3D;&#x3D;类与对象内存分配机制&#x3D;&#x3D;</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230145437294.png" alt="image-20221230145437294"></p><blockquote><ol><li>执行第一步 类信息<code>Person p1 = new Person();</code></li></ol><p>在堆中生成空间，值是默认的，因为没执行第二行代码</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230150021578.png" alt="image-20221230150021578"></p><blockquote><ol start="2"><li>对象创建成功把地址返回到p1</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230150216481.png" alt="image-20221230150216481"></p><blockquote><ol start="3"><li>往下执行<code>p1.age = 10</code></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230150353258.png" alt="image-20221230150353258"></p><blockquote><ol start="4"><li>执行<code>p1.name</code></li></ol><p>  方法区生成空间，堆里存的是地址</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230150524492.png" alt="image-20221230150524492"></p><blockquote><ol start="5"><li><code>Person p2 = p1;</code></li></ol><p>p2指向0x0011空间</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230150820174.png" alt="image-20221230150820174"></p><blockquote><p>6.执行最后一句话</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230151049900.png" alt="image-20221230151049900"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230151100044.png" alt="image-20221230151100044"></p><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><h5 id="方法区：常量池，类加载信息"><a href="#方法区：常量池，类加载信息" class="headerlink" title="方法区：常量池，类加载信息"></a>方法区：常量池，类加载信息</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230151310168.png" alt="image-20221230151310168"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230151743785.png" alt="image-20221230151743785"></p><h3 id="7-对象机制练习-–PersonExiercise"><a href="#7-对象机制练习-–PersonExiercise" class="headerlink" title="7.对象机制练习 –PersonExiercise"></a>7.对象机制练习 –PersonExiercise</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230152722455.png" alt="image-20221230152722455"></p><blockquote><p><code>b.name</code> 也会出现异常</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230153129020.png" alt="image-20221230153129020"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230153314258.png" alt="image-20221230153314258"></p><h2 id="方法-成员方法"><a href="#方法-成员方法" class="headerlink" title="方法 (成员方法)"></a>方法 (成员方法)</h2><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230153507332.png" alt="image-20221230153507332"></p><h3 id="1-快速入门"><a href="#1-快速入门" class="headerlink" title="1 快速入门"></a>1 快速入门</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230154446658.png" alt="image-20221230154446658"></p><h4 id="1-1老韩解毒"><a href="#1-1老韩解毒" class="headerlink" title="1.1老韩解毒"></a>1.1老韩解毒</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230154042635.png" alt="image-20221230154042635"></p><h5 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230155402023.png" alt="image-20221230155402023"></p><h5 id="2-添加ca02成员方法，该方法可以接收一个数n-计算从1-n的结果"><a href="#2-添加ca02成员方法，该方法可以接收一个数n-计算从1-n的结果" class="headerlink" title="2. 添加ca02成员方法，该方法可以接收一个数n,计算从1+.+n的结果"></a>2. 添加ca02成员方法，该方法可以接收一个数n,计算从1+.+n的结果</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230155810333.png" alt="image-20221230155810333"></p><h5 id="3-添加getSum成员方法，可以计算两个数的和"><a href="#3-添加getSum成员方法，可以计算两个数的和" class="headerlink" title="3. 添加getSum成员方法，可以计算两个数的和"></a>3. 添加getSum成员方法，可以计算两个数的和</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230160620761.png" alt="image-20221230160620761"></p><h6 id="主方法"><a href="#主方法" class="headerlink" title="主方法"></a>主方法</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230160909434.png" alt="image-20221230160909434"></p><h3 id="2-x3D-x3D-调用机制原理-x3D-x3D"><a href="#2-x3D-x3D-调用机制原理-x3D-x3D" class="headerlink" title="2. &#x3D;&#x3D;调用机制原理&#x3D;&#x3D;"></a>2. &#x3D;&#x3D;调用机制原理&#x3D;&#x3D;</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230161147239.png" alt="image-20221230161147239"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230161540667.png" alt="image-20221230161540667"></p><blockquote><p>1.执行<code>Person p1 = new Person();</code></p><p>在堆里有个对象空间</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230161725901.png" alt="image-20221230161725901"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230161833021.png" alt="image-20221230161833021"></p><blockquote><ol start="2"><li><p><code>int returnRes = p1.getSum(10, 20);</code></p><p>（先执行等号右面，在把值赋给左边）</p></li></ol><p>执行<code>p1.getSum(10,20)</code>的时候，栈空间在开一个独立的空间，</p><p>直接跳到方法里</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230162806640.png" alt="image-20221230162806640"></p><blockquote><p>把10赋给num1 , 把20赋给num2</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230162940642.png" alt="image-20221230162940642"></p><blockquote><ol start="3"><li><code>int res = num1 + num2;</code></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230163148231.png" alt="image-20221230163148231"></p><blockquote><ol start="4"><li><code>return res;</code></li></ol><p>返回到方法中</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230163242984.png" alt="image-20221230163242984"></p><blockquote><ol start="5"><li>返回去的时候，栈已经没有了。空间被释放掉了</li><li>最后执行输出</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230163619621.png" alt="image-20221230163619621"></p><h4 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230163853388.png" alt="image-20221230163853388"></p><h3 id="3-为什么需要成员方法"><a href="#3-为什么需要成员方法" class="headerlink" title="3.为什么需要成员方法"></a>3.为什么需要成员方法</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230174904249.png" alt="image-20221230174904249"></p><p>提高代码的复用性<br>可以将实现的细节封装起来，然后供其他用户来调用即可。</p><h4 id="遍历数组"><a href="#遍历数组" class="headerlink" title="遍历数组"></a>遍历数组</h4><p>传统方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年10月22日</span></span><br><span class="line"><span class="comment">* 为什么要成员方法*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Method02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//    请遍历一个数组，输出数组的各个元素值</span></span><br><span class="line">        <span class="type">int</span>[][] map = &#123;&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    遍历map数组</span></span><br><span class="line"><span class="comment">//    传统解决方法，直接遍历</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; map.length;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; map[i].length; j++) &#123;</span><br><span class="line">                System.out.print(map[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.method_;</span><br><span class="line"><span class="comment">/*2022年12月30日</span></span><br><span class="line"><span class="comment">* 练习成员方法的好处*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Method02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[][] arr = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;, &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;, &#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        创建对象</span></span><br><span class="line">        <span class="type">MyTools</span> <span class="variable">myTools</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyTools</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        调用数组方法</span></span><br><span class="line">        myTools.printArr(arr);</span><br><span class="line">        myTools.printArr(arr);</span><br><span class="line">        myTools.printArr(arr);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyTools</span> &#123;</span><br><span class="line"><span class="comment">//    遍历数组方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printArr</span><span class="params">(<span class="type">int</span>[][] arr)</span> &#123;</span><br><span class="line">        <span class="comment">//        遍历数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;==&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr[j].length; i++) &#123;</span><br><span class="line">                System.out.print(arr[j][i] + <span class="string">&quot;  &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-定义"><a href="#4-定义" class="headerlink" title="4. 定义"></a>4. 定义</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Mytools</span> <span class="variable">mytools</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyTools</span>();</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">MyTools</span>(); <span class="comment">//创建一个对象</span></span><br><span class="line">Mytools myTools <span class="comment">//类名 方法名</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221022155913643.png" alt="image-20221022155913643"></p><h3 id="5-x3D-x3D-注意事项和使用细节-x3D-x3D-–MethodDetail"><a href="#5-x3D-x3D-注意事项和使用细节-x3D-x3D-–MethodDetail" class="headerlink" title="5. &#x3D;&#x3D;注意事项和使用细节&#x3D;&#x3D; –MethodDetail"></a>5. &#x3D;&#x3D;注意事项和使用细节&#x3D;&#x3D; –MethodDetail</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221022155946608.png" alt="image-20221022155946608"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221023083625781.png" alt="image-20221023083625781"></p><h5 id="5-1-形参列表细节"><a href="#5-1-形参列表细节" class="headerlink" title="5.1 形参列表细节"></a>5.1 形参列表细节</h5><h6 id="1-如何返回多个结果"><a href="#1-如何返回多个结果" class="headerlink" title="1. 如何返回多个结果"></a>1. 如何返回多个结果</h6><blockquote><p>返回数组</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230182006494.png" alt="image-20221230182006494"></p><p>自己写的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.method_;</span><br><span class="line"><span class="comment">/*练习方法的细节*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDetail</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        1.返回多个值</span></span><br><span class="line"><span class="comment">//      创建对象</span></span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line"><span class="comment">//        创建一个数组接收</span></span><br><span class="line">        <span class="type">int</span>[] res = a.getSumAndSub(<span class="number">20</span>, <span class="number">30</span>);</span><br><span class="line"><span class="comment">//        输出</span></span><br><span class="line">        System.out.println(<span class="string">&quot;和为：&quot;</span> + res[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(<span class="string">&quot;差为：&quot;</span> + res[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">        <span class="comment">//1.返回多个值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] getSumAndSub(<span class="type">int</span> n1, <span class="type">int</span> n2) &#123;</span><br><span class="line">        <span class="type">int</span>[] resArr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">        resArr[<span class="number">0</span>] = n1 + n2;</span><br><span class="line">        resArr[<span class="number">1</span>] = n1 - n2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resArr;<span class="comment">//返回数组</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="2-可以返回为任意类型，包含基本类型或引用类型（数组，对象"><a href="#2-可以返回为任意类型，包含基本类型或引用类型（数组，对象" class="headerlink" title="2. 可以返回为任意类型，包含基本类型或引用类型（数组，对象)"></a>2. 可以返回为任意类型，包含<code>基本类型或引用类型（数组，对象)</code></h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年10月22日</span></span><br><span class="line"><span class="comment">* 思考如何返回多个结果 返回数组*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDetail</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        创建对象</span></span><br><span class="line">        <span class="type">AA</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AA</span>();</span><br><span class="line"><span class="comment">//        定义一个数组接收getSumAndSub的值</span></span><br><span class="line">        <span class="type">int</span>[] res = a.getSumAndSub(<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">        System.out.println(<span class="string">&quot;和= &quot;</span> + res[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(<span class="string">&quot;差= &quot;</span> + res[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AA</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] getSumAndSub(<span class="type">int</span> n1, <span class="type">int</span> n2) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];<span class="comment">//创建一个数组</span></span><br><span class="line">        arr[<span class="number">0</span>] = n1 + n2;</span><br><span class="line">        arr[<span class="number">1</span>] = n1 - n2;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="3-return"><a href="#3-return" class="headerlink" title="3. return"></a>3. return</h6><blockquote><p>3.如果方法要求有返回数据类型，则方法体中最后的执行语句必须为return值；<br>而且要求返回值类型必须和return的值类型一致或兼容</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230182805752.png" alt="image-20221230182805752"></p><h6 id="4-如果方法是void-则方法体中可以没有return语句，或者只写return"><a href="#4-如果方法是void-则方法体中可以没有return语句，或者只写return" class="headerlink" title="4. 如果方法是void,则方法体中可以没有return语句，或者只写return;"></a>4. 如果方法是void,则方法体中可以没有return语句，或者只写return;</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230183148664.png" alt="image-20221230183148664"></p><h5 id="5-2-参数列表细节"><a href="#5-2-参数列表细节" class="headerlink" title="5.2 参数列表细节"></a>5.2 参数列表细节</h5><h6 id="1-一个方法可以有0个参数，也可以有多个参数，中间用逗号开，比如getSum-int-n1-int-n2"><a href="#1-一个方法可以有0个参数，也可以有多个参数，中间用逗号开，比如getSum-int-n1-int-n2" class="headerlink" title="1. 一个方法可以有0个参数，也可以有多个参数，中间用逗号开，比如getSum(int n1,int n2)"></a>1. 一个方法可以有0个参数，也可以有多个参数，中间用逗号开，比如getSum(int n1,int n2)</h6><h6 id="2-调用带参数的方法时，一定对应着参数列表传入相同类型或兼容类型的参数！【getSum】"><a href="#2-调用带参数的方法时，一定对应着参数列表传入相同类型或兼容类型的参数！【getSum】" class="headerlink" title="2. 调用带参数的方法时，一定对应着参数列表传入相同类型或兼容类型的参数！【getSum】"></a>2. 调用带参数的方法时，一定对应着参数列表传入相同类型或兼容类型的参数！【getSum】</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230183715604.png" alt="image-20221230183715604"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230183825172.png" alt="image-20221230183825172"></p><h6 id="3-方法定义时的参数称为形式参数，简称形参；方法调用时的参数称为实际参数，简称实参，实"><a href="#3-方法定义时的参数称为形式参数，简称形参；方法调用时的参数称为实际参数，简称实参，实" class="headerlink" title="3. 方法定义时的参数称为形式参数，简称形参；方法调用时的参数称为实际参数，简称实参，实"></a>3. 方法定义时的参数称为形式参数，简称形参；方法调用时的参数称为实际参数，简称实参，实</h6><p>参和形参的类型要一致或兼容、个数、顺序必须一致！[演示]</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230183955938.png" alt="image-20221230183955938"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230184041621.png" alt="image-20221230184041621"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230184136975.png" alt="image-20221230184136975"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221023083729155.png" alt="image-20221023083729155"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        细节：实参和形参的类型要一致或兼容、个数、顺序必须一致</span></span><br><span class="line">        a.getSumAndSub(<span class="number">100</span>);<span class="comment">//会报错</span></span><br></pre></td></tr></table></figure><h6 id="4-方法不能嵌套定义"><a href="#4-方法不能嵌套定义" class="headerlink" title="4. 方法不能嵌套定义"></a>4. 方法不能嵌套定义</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221023084607202.png" alt="image-20221023084607202"></p><h5 id="5-3-方法调用细节-–MethodDetail02"><a href="#5-3-方法调用细节-–MethodDetail02" class="headerlink" title="5.3 方法调用细节 –MethodDetail02"></a>5.3 方法调用细节 –MethodDetail02</h5><h6 id="5-3-1-同一个类中的方法调用：直接调用即可。比如prit-参数-："><a href="#5-3-1-同一个类中的方法调用：直接调用即可。比如prit-参数-：" class="headerlink" title="5.3.1 同一个类中的方法调用：直接调用即可。比如prit(参数)："></a>5.3.1 同一个类中的方法调用：直接调用即可。比如prit(参数)：</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230185614668.png" alt="image-20221230185614668"></p><p><strong>主方法</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230185645468.png" alt="image-20221230185645468"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.method_;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*日期2022年12月30日</span></span><br><span class="line"><span class="comment"> * 方法调用细节*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDetail02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A1</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A1</span>();</span><br><span class="line">        a1.sayOk();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;printf()方法被调用 n=&quot;</span> + n);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayOk</span><span class="params">()</span> &#123; <span class="comment">//sayOk调用 print(直接调用即可)</span></span><br><span class="line">        print(<span class="number">10</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;继续执行sayOk()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="5-3-2-跨类调用方法需要创建对象"><a href="#5-3-2-跨类调用方法需要创建对象" class="headerlink" title="5.3.2 跨类调用方法需要创建对象"></a>5.3.2 跨类调用方法需要创建对象</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230190203169.png" alt="image-20221230190203169"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230190602777.png" alt="image-20221230190602777"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230190726341.png" alt="image-20221230190726341"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230190726341.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.method_;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*日期2022年12月30日</span></span><br><span class="line"><span class="comment"> * 方法调用细节*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDetail02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A1</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A1</span>();</span><br><span class="line">        a1.sayOk();</span><br><span class="line">        a1.m1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;printf()方法被调用 n=&quot;</span> + n);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayOk</span><span class="params">()</span> &#123; <span class="comment">//sayOk调用 print(直接调用即可)</span></span><br><span class="line">        print(<span class="number">10</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;继续执行sayOk()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    跨类调用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m1</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        创建B1对象，然后再调用方法即可</span></span><br><span class="line">        System.out.println(<span class="string">&quot;m1方法被调用..&quot;</span>);</span><br><span class="line">        <span class="type">B1</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B1</span>();</span><br><span class="line">        b1.hi();</span><br><span class="line">        System.out.println(<span class="string">&quot;m1方法继续执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hi</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;B类中的 hi()被执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="5-3-3-只要执行一个方法，就会开辟一个栈"><a href="#5-3-3-只要执行一个方法，就会开辟一个栈" class="headerlink" title="5.3.3 只要执行一个方法，就会开辟一个栈"></a>5.3.3 只要执行一个方法，就会开辟一个栈</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221024161539529.png" alt="image-20221024161539529"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDetail02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line"><span class="comment">//        a.print(20);</span></span><br><span class="line"><span class="comment">//        a.sayok();</span></span><br><span class="line">        a.m1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line"><span class="comment">/*    public void print(int n) &#123;</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;printf()方法被调用n=&quot; + n);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    public void sayok() &#123;</span></span><br><span class="line"><span class="comment">        print(30);</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;执行sayok&quot;);</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m1</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;m1（）方法被调用&quot;</span>);</span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        b.hi();</span><br><span class="line">        System.out.println(<span class="string">&quot;m1方法继续执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    跨类中的方法A类调用B类方法：需要通过对象名调用</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hi</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;B类中的hi（）方法被执行&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6-x3D-x3D-写方法的思路-x3D-x3D-amp-amp-练习"><a href="#6-x3D-x3D-写方法的思路-x3D-x3D-amp-amp-练习" class="headerlink" title="6. &#x3D;&#x3D;写方法的思路&#x3D;&#x3D; &amp;&amp; 练习"></a>6. &#x3D;&#x3D;写方法的思路&#x3D;&#x3D; &amp;&amp; 练习</h3><blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    思路</span></span><br><span class="line"><span class="comment">//    1.方法的返回类型  boolean</span></span><br><span class="line"><span class="comment">//    2. 方法的名字      isOdd</span></span><br><span class="line"><span class="comment">//    3.方法的形参       (int num)</span></span><br><span class="line"><span class="comment">//    4.方法体         判断</span></span><br></pre></td></tr></table></figure></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230192822282.png" alt="image-20221230192822282"></p><h4 id="1-思路"><a href="#1-思路" class="headerlink" title="1.思路"></a>1.思路</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230192220565.png" alt="image-20221230192220565"></p><h4 id="1-代码"><a href="#1-代码" class="headerlink" title="1.代码"></a>1.代码</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230192700739.png" alt="image-20221230192700739"></p><h5 id="主方法-1"><a href="#主方法-1" class="headerlink" title="主方法"></a>主方法</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230192754534.png" alt="image-20221230192754534"></p><h4 id="1-自己写的代码"><a href="#1-自己写的代码" class="headerlink" title="1.自己写的代码"></a>1.自己写的代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (num % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">     System.out.println(<span class="string">&quot;偶数&quot;</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     System.out.println(<span class="string">&quot;奇数&quot;</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>等价于</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> num % <span class="number">2</span> != <span class="number">0</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p>更简单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> num % <span class="number">2</span> != <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h6 id="优雅的写法"><a href="#优雅的写法" class="headerlink" title="优雅的写法"></a>优雅的写法</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年10月24日</span></span><br><span class="line"><span class="comment">* 目的：方法练习题*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodExercise01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">AA</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AA</span>();</span><br><span class="line"><span class="comment">/*//        用b接收 isOdd的值，输出</span></span><br><span class="line"><span class="comment">       boolean b = a.isOdd(1);</span></span><br><span class="line"><span class="comment">        System.out.println(b);*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        更优雅的代码</span></span><br><span class="line">        <span class="keyword">if</span> (a.isOdd(<span class="number">2</span>)) &#123; <span class="comment">// 这样的写法以后会看的很多</span></span><br><span class="line">            System.out.println(<span class="string">&quot;奇数&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;偶数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AA</span> &#123;</span><br><span class="line"><span class="comment">//    思路</span></span><br><span class="line"><span class="comment">//    1.方法的返回类型  boolean</span></span><br><span class="line"><span class="comment">//    2. 方法的名字      isOdd</span></span><br><span class="line"><span class="comment">//    3.方法的形参       (int num)</span></span><br><span class="line"><span class="comment">//    4.方法体         判断</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isOdd</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line"><span class="comment">/*        if (num % 2 == 0) &#123;</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;偶数&quot;);</span></span><br><span class="line"><span class="comment">            return false;</span></span><br><span class="line"><span class="comment">        &#125; else &#123;</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;奇数&quot;);</span></span><br><span class="line"><span class="comment">            return true;</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">       <span class="keyword">return</span> num % <span class="number">2</span> != <span class="number">0</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.method_;</span><br><span class="line"><span class="comment">/*2022年12月30日</span></span><br><span class="line"><span class="comment">* 练习题*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodExercise</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        1.判断是奇数还是偶数</span></span><br><span class="line">        <span class="type">AA</span> <span class="variable">aa</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AA</span>();</span><br><span class="line">        <span class="keyword">if</span> (aa.isOdd(<span class="number">1</span>)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;是奇数&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;偶数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1编写类AA新方法：判断一个数是奇数odd还是偶数，返回boolean</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AA</span> &#123;</span><br><span class="line">    <span class="comment">/*思路</span></span><br><span class="line"><span class="comment">    * 返回类型 boolean</span></span><br><span class="line"><span class="comment">    * 方法名   isOdd</span></span><br><span class="line"><span class="comment">    * 方法形参  int num</span></span><br><span class="line"><span class="comment">    * 方法体    判断</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isOdd</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (num % <span class="number">2</span> != <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-思路"><a href="#2-思路" class="headerlink" title="2. 思路"></a>2. 思路</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230193906511.png" alt="image-20221230193906511"></p><h4 id="2-代码"><a href="#2-代码" class="headerlink" title="2. 代码"></a>2. 代码</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230195816937.png" alt="image-20221230195816937"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230195829615.png" alt="image-20221230195829615"></p><h4 id="2-自己写的代码"><a href="#2-自己写的代码" class="headerlink" title="2. 自己写的代码"></a>2. 自己写的代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.method_;</span><br><span class="line"><span class="comment">/*2022年12月30日</span></span><br><span class="line"><span class="comment">* 练习题*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodExercise</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        1.判断是奇数还是偶数</span></span><br><span class="line">        <span class="type">AA</span> <span class="variable">aa</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AA</span>();</span><br><span class="line">        <span class="keyword">if</span> (aa.isOdd(<span class="number">1</span>)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;是奇数&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;偶数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        2.输出</span></span><br><span class="line">        aa.print(<span class="number">3</span>,<span class="number">4</span>, <span class="string">&#x27;@&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1编写类AA新方法：判断一个数是奇数odd还是偶数，返回boolean</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AA</span> &#123;</span><br><span class="line">    <span class="comment">/*思路</span></span><br><span class="line"><span class="comment">    * 返回类型 boolean</span></span><br><span class="line"><span class="comment">    * 方法名   isOdd</span></span><br><span class="line"><span class="comment">    * 方法形参  int num</span></span><br><span class="line"><span class="comment">    * 方法体    判断</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isOdd</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (num % <span class="number">2</span> != <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    根据行、列、字符打印 对应行数和列数的字符</span></span><br><span class="line"><span class="comment">//    比如：行：4 列：4 ，字符# ，则打印相应的效果</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> row, <span class="type">int</span> col, <span class="type">char</span> ch)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; row; i++) &#123; <span class="comment">//输出每一行</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; col; j++) &#123; <span class="comment">//输出每一列</span></span><br><span class="line">                System.out.print(ch + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年10月24日</span></span><br><span class="line"><span class="comment">* 目的：方法练习题*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodExercise01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">AA</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AA</span>();</span><br><span class="line"><span class="comment">/*//        用b接收 isOdd的值，输出</span></span><br><span class="line"><span class="comment">       boolean b = a.isOdd(1);</span></span><br><span class="line"><span class="comment">        System.out.println(b);*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        更优雅的代码</span></span><br><span class="line">        <span class="keyword">if</span> (a.isOdd(<span class="number">2</span>)) &#123; <span class="comment">// 这样的写法以后会看的很多</span></span><br><span class="line">            System.out.println(<span class="string">&quot;奇数&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;偶数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        从键盘输入几行几列</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">a2</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="comment">//使用print方法</span></span><br><span class="line">        a.print(a1,a2,<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AA</span> &#123;</span><br><span class="line"><span class="comment">//    思路</span></span><br><span class="line"><span class="comment">//    1.方法的返回类型  boolean</span></span><br><span class="line"><span class="comment">//    2. 方法的名字      isOdd</span></span><br><span class="line"><span class="comment">//    3.方法的形参       (int num)</span></span><br><span class="line"><span class="comment">//    4.方法体         判断</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isOdd</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line"><span class="comment">/*        if (num % 2 == 0) &#123;</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;偶数&quot;);</span></span><br><span class="line"><span class="comment">            return false;</span></span><br><span class="line"><span class="comment">        &#125; else &#123;</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;奇数&quot;);</span></span><br><span class="line"><span class="comment">            return true;</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">       <span class="keyword">return</span> num % <span class="number">2</span> != <span class="number">0</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    根据行、列、字符打印 对应行数和列数的字符</span></span><br><span class="line"><span class="comment">//    比如：行：4 列：4 ，字符# ，则打印相应的效果</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * ####</span></span><br><span class="line"><span class="comment">    * ####</span></span><br><span class="line"><span class="comment">    * ####</span></span><br><span class="line"><span class="comment">    * ####*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 1.方法的返回类型  void</span></span><br><span class="line"><span class="comment">    * 2.方法的名字  print</span></span><br><span class="line"><span class="comment">    * 3. 方法的形参 (int row, int column,char c)</span></span><br><span class="line"><span class="comment">    * 4.方法体，循环*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> row, <span class="type">int</span> col, <span class="type">char</span> c)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; row; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; col; j++) &#123; <span class="comment">//输出每一行</span></span><br><span class="line">                System.out.print(c);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();<span class="comment">//换行</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-x3D-x3D-方法传参机制-x3D-x3D-–MethodParameter01-java"><a href="#7-x3D-x3D-方法传参机制-x3D-x3D-–MethodParameter01-java" class="headerlink" title="7. &#x3D;&#x3D;方法传参机制&#x3D;&#x3D; –MethodParameter01.java"></a>7. &#x3D;&#x3D;方法传参机制&#x3D;&#x3D; –MethodParameter01.java</h3><h4 id="7-1-基本数据类型传参机制"><a href="#7-1-基本数据类型传参机制" class="headerlink" title="7.1 基本数据类型传参机制"></a>7.1 基本数据类型传参机制</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230200623361.png" alt="image-20221230200623361"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230210357935.png" alt="image-20221230210357935"></p><h6 id="main方法"><a href="#main方法" class="headerlink" title="main方法"></a>main方法</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230210643433.png" alt="image-20221230210643433"></p><h6 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230210826612.png" alt="image-20221230210826612"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230212733417.png" alt="image-20221230212733417"></p><hr><blockquote><p>当在主方法中调用swap方法时，</p><p>调用的是<code>主函数</code>中的a和b</p><p>传过去之后a的值就是10 b的值20</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221024195306033.png" alt="image-20221024195306033"></p><blockquote><p>输出的是&#x3D;&#x3D;swap栈里的&#x3D;&#x3D;a和b</p><p>两个栈是两个独立的数据空间，并不冲突</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221024195638956.png" alt="image-20221024195638956"></p><blockquote><p>输出的是栈里的a和b</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221024200230150.png" alt="image-20221024200230150"></p><blockquote><p>执行完方法里的内容就返回到主方法中</p><p>主方法中并没有发生交换，所以输出的是主站里的a和b即还是10,20</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221024200545221.png" alt="image-20221024200545221"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221024200729516.png" alt="image-20221024200729516"></p><h4 id="7-2-引用传参机制-–传的是地址"><a href="#7-2-引用传参机制-–传的是地址" class="headerlink" title="7.2 引用传参机制 –传的是地址"></a>7.2 引用传参机制 –传的是地址</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230213724008.png" alt="image-20221230213724008"></p><h5 id="1-1"><a href="#1-1" class="headerlink" title="1."></a>1.</h5><h6 id="类"><a href="#类" class="headerlink" title="类"></a>类</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230214413333.png" alt="image-20221230214413333"></p><h6 id="主方法-2"><a href="#主方法-2" class="headerlink" title="主方法"></a>主方法</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230214446769.png" alt="image-20221230214446769"></p><blockquote><p>第一步堆内存创建一个对象</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221025201318073.png" alt="image-20221025201318073"></p><blockquote><ol start="2"><li>数组是引用类型，他也会指向堆里的空间</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221025201910723.png" alt="image-20221025201910723"></p><h6 id="只要调用一个方法就会产生一个新栈"><a href="#只要调用一个方法就会产生一个新栈" class="headerlink" title="只要调用一个方法就会产生一个新栈"></a>只要调用一个方法就会产生一个新栈</h6><blockquote><ol start="3"><li>执行b.test100（arr)</li></ol><p>只要调用一个方法就会产生一个新栈</p><p>arr 传给形参</p><p>传的是arr的地址</p><p>test100的栈里也会有一个变量叫arr</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221028162708207.png" alt="image-20221028162708207"></p><blockquote><p>栈里arr [0x1122] 也会指向堆里的空间</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221028162754477.png" alt="image-20221028162754477"></p><blockquote><ol start="4"><li><p>执行方法</p><p>arr[0] &#x3D; 200;</p><p>找到堆里的0x1122，把第一个值改成200</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221028162949208.png" alt="image-20221028162949208"></p><blockquote><p>5.继续执行方法，在test100里执行，便利数组，</p><p>回到主栈</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221028163106196.png" alt="image-20221028163106196"></p><blockquote><ol start="6"><li><p>执行主栈的for循环</p><p>主栈里的arr也是指向堆里的0x1122空间，所以得到的也是100 2 3</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221028163430610.png" alt="image-20221028163430610"></p><h6 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h6><p>引用类型传递的是地址（传递也是值，但是值是地址），</p><p>可以通过形参影响实参！</p><h4 id="7-3-对象的传参机制-练习"><a href="#7-3-对象的传参机制-练习" class="headerlink" title="7.3 对象的传参机制(练习)"></a>7.3 对象的传参机制(练习)</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230215533807.png" alt="image-20221230215533807"></p><h6 id="类-1"><a href="#类-1" class="headerlink" title="类"></a>类</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230215628656.png" alt="image-20221230215628656"></p><h6 id="main"><a href="#main" class="headerlink" title="main"></a>main</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230220114598.png" alt="image-20221230220114598"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230215743677.png" alt="image-20221230215743677"></p><h6 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230215854198.png" alt="image-20221230215854198"></p><blockquote><p>对象的名字String 引用类型 堆里放地址，方法区里放数值</p><p>对象的年龄直接放在堆里</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221028192141418.png" alt="image-20221028192141418"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221028192232719.png" alt="image-20221028192232719"></p><blockquote><p>执行test200方法的p.age</p><p>– 在栈的test200的空间里，通过p找到堆里的p对象，把age该为10000</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221028192642472.png" alt="image-20221028192642472"></p><blockquote><p>输出主方法的p.age</p><p>输出被修改过后的age</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221028192744819.png" alt="image-20221028192744819"></p><h6 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230221722523.png" alt="image-20221230221722523"><strong>main</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230222006769.png" alt="image-20221230222006769"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221230223105279.png" alt="image-20221230223105279"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231100557131.png" alt="image-20221231100557131"></p><h6 id="思考2"><a href="#思考2" class="headerlink" title="思考2"></a>思考2</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231100732352.png" alt="image-20221231100732352"></p><p>main</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231103430598.png" alt="image-20221231103430598"></p><blockquote><p>最开始的确指向原来的对象</p><p>因为new了一个空间，所以指向新的空间</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231104422284.png" alt="image-20221231104422284"></p><p><strong>结果</strong></p><p>10</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodParameter03</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//        测试</span></span><br><span class="line"><span class="comment">        B1 b = new B1();</span></span><br><span class="line"><span class="comment">        int[] arr = &#123;1,2,3&#125;;</span></span><br><span class="line"><span class="comment">        b.test100(arr);</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;main的arr数组&quot;);</span></span><br><span class="line"><span class="comment">//        遍历数组</span></span><br><span class="line"><span class="comment">        for (int i = 0; i &lt; arr.length; i++) &#123;</span></span><br><span class="line"><span class="comment">            System.out.println(arr[i] + &quot;\t&quot;);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        System.out.println();</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//      实例化Person</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        p.name = <span class="string">&quot;java&quot;</span>;</span><br><span class="line">        p.age = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        实例化B</span></span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line"><span class="comment">//        调用test200方法</span></span><br><span class="line">        b.test200(p);</span><br><span class="line"><span class="comment">//       测试题，如果test200执行的是 p = null； 那么输出的是 10</span></span><br><span class="line"><span class="comment">//        测试题，如果 test200 执行的是p = new Person(); 。。。， 下面输出的是10</span></span><br><span class="line">        System.out.println(<span class="string">&quot;main 的p.age=&quot;</span> + p.age);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//定义一个person类，设置属性</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">        String name;</span><br><span class="line">        <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line"><span class="comment">//        修改对象年龄</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test200</span><span class="params">(Person p)</span> &#123;</span><br><span class="line"><span class="comment">//            p.age = 10000;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//            思考</span></span><br><span class="line"><span class="comment">//             p = null;</span></span><br><span class="line">            </span><br><span class="line"><span class="comment">//             思考</span></span><br><span class="line">             p = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">             p.name = <span class="string">&quot;tom&quot;</span>;</span><br><span class="line">             p.age = <span class="number">99</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编写一个方法test100 ，可以接收一个数组，</span></span><br><span class="line"><span class="comment">//在方法中修改该数组，看看原来的数组是否变化</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test100</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        arr[<span class="number">0</span>] = <span class="number">200</span>;<span class="comment">//修改元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        遍历数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;test100的 arr数组&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.println(arr[i] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7-4-克隆对象练习-–MethodExercise02"><a href="#7-4-克隆对象练习-–MethodExercise02" class="headerlink" title="7.4 克隆对象练习 –MethodExercise02"></a>7.4 克隆对象练习 –MethodExercise02</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231105040241.png" alt="image-20221231105040241"></p><h5 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h5><h6 id="自己写的代码未改版"><a href="#自己写的代码未改版" class="headerlink" title="自己写的代码未改版"></a>自己写的代码未改版</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.method_;</span><br><span class="line"><span class="comment">/*2022年12月31日</span></span><br><span class="line"><span class="comment">* 练习方法传参机制</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodExercise02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        定义数组</span></span><br><span class="line">        <span class="type">int</span>[][] arr = &#123;&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;, &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;, &#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>&#125;&#125;;</span><br><span class="line"><span class="comment">//        实例化</span></span><br><span class="line">        <span class="type">MyTools01</span> <span class="variable">myTools01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyTools01</span>();</span><br><span class="line"><span class="comment">//        调用打印方法</span></span><br><span class="line">        myTools01.print(arr);</span><br><span class="line"></span><br><span class="line">        <span class="type">MyTools01</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyTools01</span>();</span><br><span class="line">        p1.name = <span class="string">&quot;Cuiyq&quot;</span>;</span><br><span class="line">        p1.age = <span class="number">20</span>;</span><br><span class="line"><span class="comment">//调用复制的方法</span></span><br><span class="line">        myTools01.copyPerson(p1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyTools01</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    编写类MyToo/s类，编写一个方法可以打印二维数组的数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span>[][] arr)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line">                System.out.print(arr[i][j] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编写一个方法copyPerson,可以复制一个Person对象，返回复制的对象。克隆对象</span></span><br><span class="line"><span class="comment">//注意要求得到新对象和原来的对象是两个独立的对象，只是他们的属性相同</span></span><br><span class="line">    <span class="keyword">public</span> MyTools01 <span class="title function_">copyPerson</span><span class="params">(MyTools01 p1)</span> &#123;</span><br><span class="line">        <span class="type">MyTools01</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyTools01</span>();</span><br><span class="line">        p2.name = p1.name;</span><br><span class="line">        p2.age = p1.age;</span><br><span class="line">        System.out.println(<span class="string">&quot;信息：&quot;</span> + <span class="string">&quot;p2.名字&quot;</span> + p2.name +</span><br><span class="line">                <span class="string">&quot;,p2.年龄&quot;</span> + p1.age);</span><br><span class="line">        System.out.println(p1 == p2);</span><br><span class="line">        <span class="keyword">return</span> p1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-思路-1"><a href="#2-思路-1" class="headerlink" title="2.思路"></a>2.思路</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231114148990.png" alt="image-20221231114148990"></p><p>mian</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231114301083.png" alt="image-20221231114301083"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231124604441.png" alt="image-20221231124604441"></p><h5 id="2-自己写的代码-1"><a href="#2-自己写的代码-1" class="headerlink" title="2.自己写的代码"></a>2.自己写的代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.method_.exercise;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2022年12月31日</span></span><br><span class="line"><span class="comment">* 练习克隆对象的方法*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodExercise02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        p1.name = <span class="string">&quot;cuiyq&quot;</span>;</span><br><span class="line">        p1.age = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">Tools</span> <span class="variable">tools</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Tools</span>();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p2</span> <span class="operator">=</span> tools.copyPerson(p1);</span><br><span class="line">        System.out.println(<span class="string">&quot;p1信息：name=:&quot;</span> + p1.name +</span><br><span class="line">                <span class="string">&quot;,age=&quot;</span> + p1.age);</span><br><span class="line">        System.out.println(<span class="string">&quot;p2信息：name=:&quot;</span> + p2.name +</span><br><span class="line">                <span class="string">&quot;,age=&quot;</span> + p2.age);</span><br><span class="line">        System.out.println(p1 == p2);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        编写一个方法copyPerson,可以复制一个Person对象，</span></span><br><span class="line"><span class="comment">// 返回复制的对象。克隆对象，</span></span><br><span class="line"><span class="comment">//注意要求得到新对象和原来的对象是两个独立的对象，只是他们的属性相同</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tools</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Person <span class="title function_">copyPerson</span><span class="params">(Person p)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        person.name = p.name;</span><br><span class="line">        person.age = p.age;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> person;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年10月29日</span></span><br><span class="line"><span class="comment">* 编写一个方法copyPerson,可以复制一个Person对象，返回复制的对象。克隆对象</span></span><br><span class="line"><span class="comment">注意要求得到新对象和原来的对象是两个独立的对象，只是他们的属性相同*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodExercise02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//       创建一个Person对象</span></span><br><span class="line">        <span class="type">Person1</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person1</span>();</span><br><span class="line">        p.age = <span class="number">18</span>;</span><br><span class="line">        p.name = <span class="string">&quot;emm&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        调用方法</span></span><br><span class="line">        <span class="type">MyTools1</span> <span class="variable">tools</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyTools1</span>();</span><br><span class="line"><span class="comment">//        创建一个新的对象接收返回的对象</span></span><br><span class="line">        <span class="type">Person1</span> <span class="variable">p2</span> <span class="operator">=</span> tools.copyPeson1(p);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        到此p 和 p2 是Person对象，但是是两个独立的对象，属性相同</span></span><br><span class="line">        System.out.println(<span class="string">&quot;p的属性 age=&quot;</span> + p.age + <span class="string">&quot;名字是：&quot;</span> + p.name);</span><br><span class="line">        System.out.println(<span class="string">&quot;p2的属性 age=&quot;</span> + p2.age + <span class="string">&quot;名字是：&quot;</span> + p2.name);</span><br><span class="line"><span class="comment">//        比较是否为同一个对象</span></span><br><span class="line">        System.out.println(<span class="string">&quot; p和p2 是否为同一个对象&quot;</span>);</span><br><span class="line">        System.out.println(p == p2);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person1</span> &#123;</span><br><span class="line">    String name ;</span><br><span class="line">    <span class="type">int</span> age ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyTools1</span> &#123;</span><br><span class="line"><span class="comment">//   编写一个方法copyPerson,可以复制一个Person对象，返回复制的对象。克隆对象</span></span><br><span class="line"><span class="comment">//注意要求得到新对象和原来的对象是两个独立的对象，只是他们的属性相同</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    编写方法的思路</span></span><br><span class="line">    <span class="comment">//    1.方法的返回类型  Person</span></span><br><span class="line"><span class="comment">//    2. 方法的名字      copyPerson</span></span><br><span class="line"><span class="comment">//    3.方法的形参       Person p</span></span><br><span class="line"><span class="comment">//    4.方法体         创建一个对象，并复制属性，返回即可</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Person1 <span class="title function_">copyPeson1</span><span class="params">(Person1 p)</span> &#123;</span><br><span class="line"><span class="comment">//        创建一个新对象，</span></span><br><span class="line">        <span class="type">Person1</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person1</span>();</span><br><span class="line"><span class="comment">//        把原来p对象的属性赋值给p2</span></span><br><span class="line">        p2.age = p.age;</span><br><span class="line">        p2.name = p.name;</span><br><span class="line"><span class="comment">//        返回p2</span></span><br><span class="line">        <span class="keyword">return</span> p2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-x3D-x3D-方法递归调用（recursion-x3D-x3D"><a href="#8-x3D-x3D-方法递归调用（recursion-x3D-x3D" class="headerlink" title="8.&#x3D;&#x3D;方法递归调用（recursion)&#x3D;&#x3D;"></a>8.&#x3D;&#x3D;方法递归调用（recursion)&#x3D;&#x3D;</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231130147535.png" alt="image-20221231130147535"></p><blockquote><p>简单的说：递归就是方法自己调用自己，</p><p>每次调用时传入不同的变量递归有助于编程者解决<br>复杂问题，同时可以让代码变得简洁</p></blockquote><h4 id="8-1-递归能解决什么问题"><a href="#8-1-递归能解决什么问题" class="headerlink" title="8.1 递归能解决什么问题"></a>8.1 递归能解决什么问题</h4><blockquote><p>1.各种数学问题如：8皇后问题，汉诺塔，阶乘问题，迷宫问题，球和篮子的问题(google编程<br>大赛)[简单演示]<br>2.各种算法中也会使用到递归，比如快排，归并排序，二分查找，分治算法等<br>3.将用栈解决的问题-&gt;递归代码比较简洁</p></blockquote><h4 id="8-2-递归调用机制"><a href="#8-2-递归调用机制" class="headerlink" title="8.2 递归调用机制"></a>8.2 递归调用机制</h4><h5 id="1-打印问题"><a href="#1-打印问题" class="headerlink" title="1.打印问题"></a>1.打印问题</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231131842702.png" alt="image-20221231131842702"></p><p>2</p><p>3</p><p>4</p><h6 id="每个栈都会完整的执行方法"><a href="#每个栈都会完整的执行方法" class="headerlink" title="每个栈都会完整的执行方法"></a>每个栈都会完整的执行方法</h6><blockquote><ol><li>执行第一步 T t1 &#x3D; new T();</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221029225714106.png" alt="image-20221029225714106"></p><blockquote><ol start="2"><li>调用方法开辟一个新栈</li><li>把4传给n</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221029225808319.png" alt="image-20221029225808319"></p><blockquote><ol start="4"><li>n&gt;2 执行test(n -1);</li></ol><p>n-1 实际上就是4-1</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221029230019106.png" alt="image-20221029230019106"></p><blockquote><ol start="5"><li><p>执行4-1 后又开辟一个新栈</p><p>n &#x3D; 3</p><p>又执行一个test（n - 1); &#x2F;&#x2F; 3-1</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221029230229897.png" alt="image-20221029230229897"></p><blockquote><ol start="6"><li><p>当n&#x3D;2时，if语句不成立，执行输出语句sout</p><p>所以输出一个2</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221029230629918.png" alt="image-20221029230629918"></p><blockquote><ol start="7"><li>执行完输出语句，返回到<code>test(3-1)</code></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221029230728457.png" alt="image-20221029230728457"></p><blockquote><ol start="8"><li><p>返回到test(n-1)之后，执行下条语句，输出</p><p>输出的是黄色里的n &#x3D; 3</p><p>每个栈都有n，但是他们是独立空间</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221029230916915.png" alt="image-20221029230916915"></p><blockquote><ol start="9"><li><p>执行完输出语句后返回test（4-1）</p><p><code>返回之后之前的栈已经没有了</code></p><p><code>每个栈都会完整的执行方法</code></p><p>输出n&#x3D;4</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221029231410853.png" alt="image-20221029231410853"></p><blockquote><ol start="10"><li><p>返回到主栈test(4)</p><p>主栈后面没代码，程序就退出了</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221029231514335.png" alt="image-20221029231514335"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221029231554107.png" alt="image-20221029231554107"></p><p><strong>改一下if语句</strong></p><p>输出 <code>n=2</code> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年10月29日</span></span><br><span class="line"><span class="comment">* 递归第一节--打印问题*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Recursion01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">T</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">T</span>();</span><br><span class="line">        t1.test(<span class="number">4</span>);<span class="comment">//输出什么？</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">T</span> &#123;</span><br><span class="line"><span class="comment">//    分析</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &gt; <span class="number">2</span>) &#123;</span><br><span class="line">            test(n -<span class="number">1</span> );</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;n=&quot;</span> + n);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-阶乘问题-factorial"><a href="#2-阶乘问题-factorial" class="headerlink" title="2.阶乘问题 factorial"></a>2.阶乘问题 factorial</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231133224430.png" alt="image-20221231133224430"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">T</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">T</span>();</span><br><span class="line">        t1.test(<span class="number">4</span>);<span class="comment">//输出什么？</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;阶乘问题&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> t1.factorial(<span class="number">5</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;res=&quot;</span> + res);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    阶乘问题 factorial</span></span><br><span class="line"><span class="comment">//方法含义：求阶乘</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">factorial</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> factorial(n - <span class="number">1</span>) * n;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><blockquote><p>在哪里调用就返回到哪里</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221030104218471.png" alt="image-20221030104218471"></p><blockquote><p>执行完方法，就把120赋给res</p></blockquote><h4 id="8-3-x3D-x3D-递归使用时的重要规则-x3D-x3D"><a href="#8-3-x3D-x3D-递归使用时的重要规则-x3D-x3D" class="headerlink" title="8.3 &#x3D;&#x3D;递归使用时的重要规则&#x3D;&#x3D;"></a>8.3 &#x3D;&#x3D;递归使用时的重要规则&#x3D;&#x3D;</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221030122312663.png" alt="image-20221030122312663"></p><h4 id="8-4-练习"><a href="#8-4-练习" class="headerlink" title="8.4 练习"></a>8.4 练习</h4><h5 id="1-请用递归方式求出斐波那契数"><a href="#1-请用递归方式求出斐波那契数" class="headerlink" title="1.  请用递归方式求出斐波那契数"></a>1.  请用递归方式求出斐波那契数</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221030122457790.png" alt="image-20221030122457790"></p><h6 id="1-思路-1"><a href="#1-思路-1" class="headerlink" title="1.思路"></a>1.思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231135406918.png" alt="image-20221231135406918"></p><h6 id="1-自己写的代码未改版"><a href="#1-自己写的代码未改版" class="headerlink" title="1.自己写的代码未改版"></a>1.自己写的代码未改版</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.recursion.exercise;</span><br><span class="line"><span class="comment">/*2022年12月31日</span></span><br><span class="line"><span class="comment">* 练习递归*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RecursionExercise01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">T</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">T</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> t.f(<span class="number">30</span>);</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">T</span> &#123;</span><br><span class="line">    <span class="comment">/*2022年10月30日</span></span><br><span class="line"><span class="comment">     * 请使用递归的方式求出斐波那契数1,1,2,3,5,8,13.··</span></span><br><span class="line"><span class="comment">     * 给你一个整数n,求出它的值是多少*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (n &gt; <span class="number">0</span> &amp;&amp; n &lt; <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> f(n - <span class="number">2</span>) + f(n- <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="1-改进后的"><a href="#1-改进后的" class="headerlink" title="1.改进后的"></a>1.改进后的</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.recursion.exercise;</span><br><span class="line"><span class="comment">/*2022年12月31日</span></span><br><span class="line"><span class="comment">* 练习递归*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RecursionExercise01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">T</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">T</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> t.f(-<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> (res != -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">T</span> &#123;</span><br><span class="line">    <span class="comment">/*2022年10月30日</span></span><br><span class="line"><span class="comment">     * 请使用递归的方式求出斐波那契数1,1,2,3,5,8,13.··</span></span><br><span class="line"><span class="comment">     * 给你一个整数n,求出它的值是多少*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line"><span class="comment">//        如果n &gt;= 1继续否则输出提示</span></span><br><span class="line">        <span class="keyword">if</span> (n &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n == <span class="number">1</span> || n == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> f(n - <span class="number">2</span>) + f(n- <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入大于1的值&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年10月30日</span></span><br><span class="line"><span class="comment">* 请使用递归的方式求出斐波那契数1,1,2,3,5,8,13.··</span></span><br><span class="line"><span class="comment">* 给你一个整数n,求出它的值是多少*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RecursionExercise01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">T1</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">T1</span>();</span><br><span class="line">        <span class="type">int</span>  <span class="variable">n</span> <span class="operator">=</span> <span class="number">50</span>;</span><br><span class="line"><span class="comment">//        把返回的值放到一个变量中</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> t1.fibonacci(<span class="number">70</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;当n=&quot;</span> + n + <span class="string">&quot;对应的斐波那契数=&quot;</span> + res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">T1</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*请使用递归的方式求出斐波那契数1,1,2,3,5,8,13.··</span></span><br><span class="line"><span class="comment">     * 给你一个整数n,求出它的值是多少</span></span><br><span class="line"><span class="comment">     * 思路分析</span></span><br><span class="line"><span class="comment">     * 1. 当 n = 1 斐波那契数是1</span></span><br><span class="line"><span class="comment">     * 2. 当 n = 2 是1</span></span><br><span class="line"><span class="comment">     * 3. 当 n &gt;= 3 是前面两个数的和</span></span><br><span class="line"><span class="comment">     * 4. 这里就是递归的思路*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">fibonacci</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (n &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n == <span class="number">1</span> || n == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> fibonacci(n - <span class="number">1</span>) + fibonacci(n - <span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入n&gt;=1的整数&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-猴子吃桃子"><a href="#2-猴子吃桃子" class="headerlink" title="2. 猴子吃桃子"></a>2. 猴子吃桃子</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221030124305800.png" alt="image-20221030124305800"></p><h6 id="2-思路-2"><a href="#2-思路-2" class="headerlink" title="2.思路"></a>2.思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231144010803.png" alt="image-20221231144010803"></p><h6 id="2-代码-1"><a href="#2-代码-1" class="headerlink" title="2. 代码"></a>2. 代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        桃子问题</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入day&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">day</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">peachNum</span> <span class="operator">=</span> t1.peach(day);</span><br><span class="line">        <span class="keyword">if</span> (peachNum != -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;第&quot;</span> + day + <span class="string">&quot;天&quot;</span> + <span class="string">&quot;桃子是&quot;</span> + peachNum);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        *猴子吃桃子问题：有一堆桃子，猴子第一天吃了其中的一半，并再多吃了一个！</span></span><br><span class="line"><span class="comment">        以后每天猴子都吃其中的一半，然后再多吃一个。当到第1天时，</span></span><br><span class="line"><span class="comment">         想再吃时（即还没吃），发现只有1个桃子了。问题：最初共多少个桃子？</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         思路分析 逆推</span></span><br><span class="line"><span class="comment">         1. day = 10 有一个桃子</span></span><br><span class="line"><span class="comment">         2. day = 9 有（day10 + 1) * 2 = 4</span></span><br><span class="line"><span class="comment">         3. day = 8 有（day9 + 1) * 2 = 10</span></span><br><span class="line"><span class="comment">         4. 规律就是 桃子 = （后一天的桃子 + 1） * 2  // 就是能力</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">peach</span><span class="params">(<span class="type">int</span> day)</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (day == <span class="number">10</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (day &gt;= <span class="number">1</span> &amp;&amp; day &lt;= <span class="number">9</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> (peach(day + <span class="number">1</span>) + <span class="number">1</span>) * <span class="number">2</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;day在1-10天&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="2-自己写的代码-2"><a href="#2-自己写的代码-2" class="headerlink" title="2.自己写的代码"></a>2.自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.recursion.exercise;</span><br><span class="line"><span class="comment">/*2022年12月31日</span></span><br><span class="line"><span class="comment">* 练习递归*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RecursionExercise01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">T</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">T</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> t.f(-<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> (res != -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(res);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">res1</span> <span class="operator">=</span> t.eat(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (res1 != -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(res1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">T</span> &#123;</span><br><span class="line">    <span class="comment">/*2022年10月30日</span></span><br><span class="line"><span class="comment">     * 请使用递归的方式求出斐波那契数1,1,2,3,5,8,13.··</span></span><br><span class="line"><span class="comment">     * 给你一个整数n,求出它的值是多少*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line"><span class="comment">//        如果n &gt;= 1继续否则输出提示</span></span><br><span class="line">        <span class="keyword">if</span> (n &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n == <span class="number">1</span> || n == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> f(n - <span class="number">2</span>) + f(n- <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入大于1的值&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * *猴子吃桃子问题：有一堆桃子，猴子第一天吃了其中的一半，并再多吃了一个！</span></span><br><span class="line"><span class="comment">        以后每天猴子都吃其中的一半，然后再多吃一个。当到第10天时，</span></span><br><span class="line"><span class="comment">         想再吃时（即还没吃），发现只有1个桃子了。问题：最初共多少个桃子？</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * day10     1</span></span><br><span class="line"><span class="comment">    * day9      4 (1+1)*2</span></span><br><span class="line"><span class="comment">    * day8      10  (1+4)*2</span></span><br><span class="line"><span class="comment">    * day7      22  (1+10)*2</span></span><br><span class="line"><span class="comment">    * 前一天的桃子 = (后一天+1)*2</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">eat</span><span class="params">(<span class="type">int</span> day)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (day == <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (day &gt;= <span class="number">1</span> &amp;&amp; day &lt; <span class="number">10</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="number">1</span>+eat(day + <span class="number">1</span>))*<span class="number">2</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入1-10&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-5-x3D-x3D-迷宫问题-x3D-x3D"><a href="#8-5-x3D-x3D-迷宫问题-x3D-x3D" class="headerlink" title="8.5&#x3D;&#x3D;迷宫问题&#x3D;&#x3D;"></a>8.5&#x3D;&#x3D;迷宫问题&#x3D;&#x3D;</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231145033709.png" alt="image-20221231145033709"></p><h5 id="1-思路-2"><a href="#1-思路-2" class="headerlink" title="1.思路"></a>1.思路</h5><p><strong>main</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231145644904.png" alt="image-20221231145644904"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231145952738.png" alt="image-20221231145952738"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231160303146.png" alt="image-20221231160303146"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231160356109.png" alt="image-20221231160356109"></p><h6 id="递归回溯思想"><a href="#递归回溯思想" class="headerlink" title="递归回溯思想"></a>递归回溯思想</h6><p><strong>T</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231151353012.png" alt="image-20221231151353012"></p><h6 id="1-代码-1"><a href="#1-代码-1" class="headerlink" title="1.代码"></a>1.代码</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231160059791.png" alt="image-20221231160059791"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231160116456.png" alt="image-20221231160116456"></p><p><strong>main</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231173351823.png" alt="image-20221231173351823"></p><h6 id="自己写的代码"><a href="#自己写的代码" class="headerlink" title="自己写的代码"></a>自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.recursion.exercise;</span><br><span class="line"><span class="comment">/*2022年12月31日</span></span><br><span class="line"><span class="comment">* 迷宫问题*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MiGong</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        1. 定义迷宫</span></span><br><span class="line">        <span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">8</span>][<span class="number">7</span>];</span><br><span class="line"><span class="comment">//        设置障碍</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123; <span class="comment">//第一行和最后一行改成1</span></span><br><span class="line">            arr[<span class="number">0</span>][i] = <span class="number">1</span>;</span><br><span class="line">            arr[<span class="number">7</span>][i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123; <span class="comment">//第一列和最后一列</span></span><br><span class="line">            arr[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            arr[i][<span class="number">6</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        arr[<span class="number">3</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//        arr[1][2] = 1;</span></span><br><span class="line"><span class="comment">//        arr[2][2] = 1;</span></span><br><span class="line"><span class="comment">//        arr[2][1] = 1;</span></span><br><span class="line">        arr[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//        输出地图</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=====&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line">                System.out.print(arr[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">T1</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">T1</span>();</span><br><span class="line">        t1.findWay(arr, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//        输出地图</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=====&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line">                System.out.print(arr[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">T1</span> &#123;</span><br><span class="line"><span class="comment">/*找路方法*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">findWay</span><span class="params">(<span class="type">int</span>[][] arr, <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line"><span class="comment">//        如果arr[6][5] == 2 则说明找到路了</span></span><br><span class="line">        <span class="keyword">if</span> (arr[<span class="number">6</span>][<span class="number">5</span>] == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i][j] == <span class="number">0</span>)&#123;</span><br><span class="line">                arr[i][j] = <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span> (findWay(arr, i+<span class="number">1</span>,j)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay(arr, i, j+<span class="number">1</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay(arr, i-<span class="number">1</span>, j)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay(arr, i, j-<span class="number">1</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    arr[i][j] = <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*思路：</span></span><br><span class="line"><span class="comment">* 主方法中定义一个二维数组，改围墙</span></span><br><span class="line"><span class="comment">* T1类中写找路的方法，如果通过的那个点为2就是代表找完了返回TRUE</span></span><br><span class="line"><span class="comment">* 如果不是的话，如果是0就代表可以走，先改成2，在忘左走，如果能通过返回true</span></span><br><span class="line"><span class="comment">* 上右下左。都不行返回FALSE，把值改为3，都完事了还不行返回FALSE因为只要成功了</span></span><br><span class="line"><span class="comment">* 就会提前返回TRUE</span></span><br><span class="line"><span class="comment">* 主方法创建对象，输出数组，因为值都改完了返回TRUE也不用输出*/</span></span><br></pre></td></tr></table></figure><blockquote><p>分析</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年10月30日</span></span><br><span class="line"><span class="comment">* 迷宫练习*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MiGong</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        思路</span></span><br><span class="line">        <span class="comment">/*1.先创建迷宫，用二维数组表示 int[][] map = new int[8][7];</span></span><br><span class="line"><span class="comment">        * 2. 现规定map数组的元素值：0 表示可以走 1 表示障碍物</span></span><br><span class="line"><span class="comment">        * i 表示行 j表示列*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[][] map = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">8</span>][<span class="number">7</span>];</span><br><span class="line"><span class="comment">//        3.将最上面的一行和最下面的一行，全部设置为1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">            map[<span class="number">0</span>][i] = <span class="number">1</span>;</span><br><span class="line">            map[<span class="number">7</span>][i] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        4.将最右面的一列和最左面的一行，全部设置为1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            map[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            map[i][<span class="number">6</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        把多余的两个设置为1</span></span><br><span class="line">        map[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        map[<span class="number">3</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//         输出当前的地图</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=====当前地图情况=====&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; map.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; map[i].length; j++) &#123;</span><br><span class="line">                System.out.print(map[i][j] + <span class="string">&quot; &quot;</span>);<span class="comment">//输出一行</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        调用方法</span></span><br><span class="line">            <span class="type">T2</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">T2</span>();</span><br><span class="line">            t1.findWay(map, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//            遍历数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=====走完之后=====&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; map.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; map[i].length; j++) &#123;</span><br><span class="line">                System.out.print(map[i][j] + <span class="string">&quot; &quot;</span>);<span class="comment">//输出一行</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">T2</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    使用递归回溯的思想来解决老鼠出迷宫</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    老韩解毒</span></span><br><span class="line"><span class="comment">//    1.findWay方法就是专门找出迷宫的路径</span></span><br><span class="line"><span class="comment">//    2.如果找到，就返回true ,否则返回false</span></span><br><span class="line"><span class="comment">//    3.map就是二维数组，即表示迷宫</span></span><br><span class="line"><span class="comment">//    4.i,j 就是老鼠的位置，初始化的位置为(1,1)</span></span><br><span class="line"><span class="comment">//    5.因为我们是递归的找路，所以我先规定map数组的各个值的含义</span></span><br><span class="line"><span class="comment">//          0表示可以走 1表示障碍物 2表示可以走的路 3表示死路，但是走不通</span></span><br><span class="line"><span class="comment">//    6.当map[6][5] = 2 就说明找到通路，就可以结束，否则就继续找</span></span><br><span class="line"><span class="comment">//    7.先确定老鼠找路策略 下 -&gt; 右 -&gt; 上 -&gt; 左</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">findWay</span><span class="params">(<span class="type">int</span>[][] map , <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (map[<span class="number">6</span>][<span class="number">5</span>] == <span class="number">2</span>) &#123; <span class="comment">// 说明已经找到</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (map[i][j] == <span class="number">0</span>) &#123; <span class="comment">//当前这个位置是0 表示可以走</span></span><br><span class="line">                <span class="comment">//假定可以走通</span></span><br><span class="line">                map[i][j] = <span class="number">2</span>;</span><br><span class="line">                <span class="comment">//使用找路策略，来确定该位置是否真的可以走通</span></span><br><span class="line">                <span class="comment">//下 右 上 左</span></span><br><span class="line">                <span class="keyword">if</span> (findWay(map,i+<span class="number">1</span>, j)) &#123; <span class="comment">// 先走下</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay(map, i,j+<span class="number">1</span>)) &#123; <span class="comment">// 走右</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay(map,i-<span class="number">1</span>, j)) &#123; <span class="comment">// 上</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay(map, i,j-<span class="number">1</span>)) &#123; <span class="comment">// 左</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//如果都走不通，改为3，返回FALSE</span></span><br><span class="line">                    map[i][j] = <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">//map[i][j] = 1, 2, 3</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>寻路方法2</p><p>上 右 下 左</p></blockquote> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        调用方法</span></span><br><span class="line">            <span class="type">T2</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">T2</span>();</span><br><span class="line"><span class="comment">//            t1.findWay(map, 1, 1);</span></span><br><span class="line"><span class="comment">//        调用第二个寻路方法</span></span><br><span class="line">        t1.findWay2(map,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改找路策略，看看路径是否有变化</span></span><br><span class="line">    <span class="comment">//上 右 下 左</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">findWay2</span><span class="params">(<span class="type">int</span>[][] map , <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (map[<span class="number">6</span>][<span class="number">5</span>] == <span class="number">2</span>) &#123; <span class="comment">// 说明已经找到</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (map[i][j] == <span class="number">0</span>) &#123; <span class="comment">//当前这个位置是0 表示可以走</span></span><br><span class="line">                <span class="comment">//假定可以走通</span></span><br><span class="line">                map[i][j] = <span class="number">2</span>;</span><br><span class="line">                <span class="comment">//使用找路策略，来确定该位置是否真的可以走通</span></span><br><span class="line">                <span class="comment">//下 右 上 左</span></span><br><span class="line">                <span class="keyword">if</span> (findWay2(map,i-<span class="number">1</span>, j)) &#123; <span class="comment">// 先走上</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay2(map, i,j+<span class="number">1</span>)) &#123; <span class="comment">// 走右</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay2(map,i+<span class="number">1</span>, j)) &#123; <span class="comment">// 下</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay2(map, i,j-<span class="number">1</span>)) &#123; <span class="comment">// 左</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    map[i][j] = <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">//map[i][j] = 1, 2, 3</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h6 id="回溯现象"><a href="#回溯现象" class="headerlink" title="回溯现象"></a>回溯现象</h6><blockquote><p>老鼠从开始位置先往下走，前后左右都走不了，</p><p>于是回到上一个栈，然后往右走 </p><p>这个现象我们称为回溯现象</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221101212525939.png" alt="image-20221101212525939"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221101212658383.png" alt="image-20221101212658383"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年10月30日</span></span><br><span class="line"><span class="comment">* 迷宫练习*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MiGong</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        思路</span></span><br><span class="line">        <span class="comment">/*1.先创建迷宫，用二维数组表示 int[][] map = new int[8][7];</span></span><br><span class="line"><span class="comment">        * 2. 现规定map数组的元素值：0 表示可以走 1 表示障碍物</span></span><br><span class="line"><span class="comment">        * i 表示行 j表示列*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[][] map = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">8</span>][<span class="number">7</span>];</span><br><span class="line"><span class="comment">//        3.将最上面的一行和最下面的一行，全部设置为1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">            map[<span class="number">0</span>][i] = <span class="number">1</span>;</span><br><span class="line">            map[<span class="number">7</span>][i] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        4.将最右面的一列和最左面的一行，全部设置为1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            map[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            map[i][<span class="number">6</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        把多余的两个设置为1</span></span><br><span class="line">        map[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        map[<span class="number">3</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        map[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//        map[2][1] = 1;</span></span><br><span class="line"><span class="comment">//        map[2][2] = 1;</span></span><br><span class="line"><span class="comment">//        map[1][2] = 1;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//         输出当前的地图</span></span><br><span class="line"><span class="comment">//        遍历数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=====当前地图情况=====&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; map.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; map[i].length; j++) &#123;</span><br><span class="line">                System.out.print(map[i][j] + <span class="string">&quot; &quot;</span>);<span class="comment">//输出一行</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        调用方法</span></span><br><span class="line">            <span class="type">T2</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">T2</span>();</span><br><span class="line">            t1.findWay(map, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="comment">//        调用第二个寻路方法</span></span><br><span class="line"><span class="comment">//        t1.findWay2(map,1,1);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//            遍历数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;\n =====走完之后=====&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; map.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; map[i].length; j++) &#123;</span><br><span class="line">                System.out.print(map[i][j] + <span class="string">&quot; &quot;</span>);<span class="comment">//输出一行</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">T2</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    使用递归回溯的思想来解决老鼠出迷宫</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    老韩解毒</span></span><br><span class="line"><span class="comment">//    1.findWay方法就是专门找出迷宫的路径</span></span><br><span class="line"><span class="comment">//    2.如果找到，就返回true ,否则返回false</span></span><br><span class="line"><span class="comment">//    3.map就是二维数组，即表示迷宫</span></span><br><span class="line"><span class="comment">//    4.i,j 就是老鼠的位置，初始化的位置为(1,1)</span></span><br><span class="line"><span class="comment">//    5.因为我们是递归的找路，所以我先规定map数组的各个值的含义</span></span><br><span class="line"><span class="comment">//          0表示可以走 1表示障碍物 2表示可以走的路 3表示死路，但是走不通</span></span><br><span class="line"><span class="comment">//    6.当map[6][5] = 2 就说明找到通路，就可以结束，否则就继续找</span></span><br><span class="line"><span class="comment">//    7.先确定老鼠找路策略 下 -&gt; 右 -&gt; 上 -&gt; 左</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">findWay</span><span class="params">(<span class="type">int</span>[][] map , <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (map[<span class="number">6</span>][<span class="number">5</span>] == <span class="number">2</span>) &#123; <span class="comment">// 说明已经找到</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (map[i][j] == <span class="number">0</span>) &#123; <span class="comment">//当前这个位置是0 表示可以走</span></span><br><span class="line">                <span class="comment">//假定可以走通</span></span><br><span class="line">                map[i][j] = <span class="number">2</span>;</span><br><span class="line">                <span class="comment">//使用找路策略，来确定该位置是否真的可以走通</span></span><br><span class="line">                <span class="comment">//下 右 上 左</span></span><br><span class="line">                <span class="keyword">if</span> (findWay(map,i+<span class="number">1</span>, j)) &#123; <span class="comment">// 先走下</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay(map, i,j+<span class="number">1</span>)) &#123; <span class="comment">// 走右</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay(map,i-<span class="number">1</span>, j)) &#123; <span class="comment">// 上</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay(map, i,j-<span class="number">1</span>)) &#123; <span class="comment">// 左</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    map[i][j] = <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">//map[i][j] = 1, 2, 3</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改找路策略，看看路径是否有变化</span></span><br><span class="line">    <span class="comment">//上 右 下 左</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">findWay2</span><span class="params">(<span class="type">int</span>[][] map , <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (map[<span class="number">6</span>][<span class="number">5</span>] == <span class="number">2</span>) &#123; <span class="comment">// 说明已经找到</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (map[i][j] == <span class="number">0</span>) &#123; <span class="comment">//当前这个位置是0 表示可以走</span></span><br><span class="line">                <span class="comment">//假定可以走通</span></span><br><span class="line">                map[i][j] = <span class="number">2</span>;</span><br><span class="line">                <span class="comment">//使用找路策略，来确定该位置是否真的可以走通</span></span><br><span class="line">                <span class="comment">//下 右 上 左</span></span><br><span class="line">                <span class="keyword">if</span> (findWay2(map,i-<span class="number">1</span>, j)) &#123; <span class="comment">// 先走上</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay2(map, i,j+<span class="number">1</span>)) &#123; <span class="comment">// 走右</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay2(map,i+<span class="number">1</span>, j)) &#123; <span class="comment">// 下</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findWay2(map, i,j-<span class="number">1</span>)) &#123; <span class="comment">// 左</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    map[i][j] = <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">//map[i][j] = 1, 2, 3</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221101212920236.png" alt="image-20221101212920236"></p><h6 id="如何求出最短路径"><a href="#如何求出最短路径" class="headerlink" title="如何求出最短路径"></a>如何求出最短路径</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221101213147779.png" alt="image-20221101213147779"></p><h4 id="8-6-汉诺塔"><a href="#8-6-汉诺塔" class="headerlink" title="8.6.汉诺塔"></a>8.6.汉诺塔</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231180305893.png" alt="image-20221231180305893"></p><h5 id="1-思路-3"><a href="#1-思路-3" class="headerlink" title="1.思路"></a>1.思路</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 2022年11月3日</span></span><br><span class="line"><span class="comment">* 汉诺塔*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HanoiTower</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="type">T3</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">T3</span>();</span><br><span class="line">        t3.move(<span class="number">2</span>,<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">T3</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    方法</span></span><br><span class="line"><span class="comment">//     num 表示要移动的个数 ,a, b, c, 分别表示A塔，B塔 ，c塔</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">move</span><span class="params">(<span class="type">int</span> num, <span class="type">char</span> a, <span class="type">char</span> b, <span class="type">char</span> c)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(a + <span class="string">&quot;-&gt;&quot;</span> + c);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//            如果有多个盘，可以看成两个，最下面的和上面的所有盘(num-1)</span></span><br><span class="line">            <span class="comment">//(1) 先移动上面所有的盘到b，借助c</span></span><br><span class="line">            move(num-<span class="number">1</span>, a,c,b);</span><br><span class="line"><span class="comment">//            (2)把最下面的盘，移动到c</span></span><br><span class="line">            System.out.println(a + <span class="string">&quot;-&gt;&quot;</span> + c);</span><br><span class="line"><span class="comment">//            (3)再把b塔的所有盘，移动到c，借助a</span></span><br><span class="line">            move(num-<span class="number">1</span>, b, a, c);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="9-重载–overload"><a href="#9-重载–overload" class="headerlink" title="9. 重载–overload"></a>9. 重载–overload</h3><blockquote><p>java中允许同一个类中，多个同名方法的存在，但要求形参列表不一致！</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221103091121491.png" alt="image-20221103091121491"></p><h4 id="9-1-快速入门"><a href="#9-1-快速入门" class="headerlink" title="9.1 快速入门"></a>9.1 快速入门</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231183326272.png" alt="image-20221231183326272"></p><h6 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h6><blockquote><ol><li><p>减轻了起名的麻烦</p></li><li><p>减轻了记名的麻烦</p></li></ol></blockquote><h4 id="9-2-细节"><a href="#9-2-细节" class="headerlink" title="9.2 细节"></a>9.2 细节</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231184117823.png" alt="image-20221231184117823"></p><h5 id="参数名没有要求"><a href="#参数名没有要求" class="headerlink" title="参数名没有要求"></a>参数名没有要求</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231184223704.png" alt="image-20221231184223704"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231184338794.png" alt="image-20221231184338794"></p><blockquote><ol><li>方法名相同</li><li>形参列表：必须不同（形参类型或个数或顺序，至少有一样不同，参数名无要求）</li></ol></blockquote><blockquote><p>返回值类型不一样也没有构成重载</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221103101103985.png" alt="image-20221103101103985"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 2022年11月3日</span></span><br><span class="line"><span class="comment">* 练习方法重载*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OverLoadExercise</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Methods</span> <span class="variable">m1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Methods</span>();</span><br><span class="line">        m1.m(<span class="number">3</span>);</span><br><span class="line">        m1.m(<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line">        m1.m(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 编写程序，类Methods中定义三个重载方法并调用。方法名为m</span></span><br><span class="line"><span class="comment">* 三个方法分别接收一个int参数，两个int参数。一个字符串参数。分别执行平方运算并输出结果</span></span><br><span class="line"><span class="comment">* 相乘并输出结果，输出字符串信息。在主类的main（）方法中分别用参数区别调用三个方法*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Methods</span> &#123;</span><br><span class="line">    <span class="comment">//分析</span></span><br><span class="line">    <span class="comment">// 1 方法名 m</span></span><br><span class="line">    <span class="comment">// 2 形参（int)</span></span><br><span class="line">    <span class="comment">// void</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m</span><span class="params">(<span class="type">int</span> m)</span> &#123;</span><br><span class="line"><span class="comment">/*        int res = m * m;</span></span><br><span class="line"><span class="comment">        System.out.println(res);*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;平方=&quot;</span> + (m * m));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> m * n;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m</span><span class="params">(String m)</span> &#123;</span><br><span class="line">        System.out.println(m);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="9-3-练习"><a href="#9-3-练习" class="headerlink" title="9.3 练习"></a>9.3 练习</h4><h5 id="1-2"><a href="#1-2" class="headerlink" title="1."></a>1.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231184601648.png" alt="image-20221231184601648"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231184654701.png" alt="image-20221231184654701"></p><h5 id="2-1"><a href="#2-1" class="headerlink" title="2."></a>2.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231184729476.png" alt="image-20221231184729476"></p><h6 id="2-自己写的代码-3"><a href="#2-自己写的代码-3" class="headerlink" title="2.自己写的代码"></a>2.自己写的代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.overload_;</span><br><span class="line"><span class="comment">/*2022年12月31日</span></span><br><span class="line"><span class="comment">* 练习重载</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OverLoadExercise</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 编写程序，类Methods中定义三个重载方法并调用。方法名为m。三个方法分</span></span><br><span class="line"><span class="comment">别接收一个int参数、两个int参数、一个字符串参数。分别执行平方运算并输出</span></span><br><span class="line"><span class="comment">结果，相乘并输出结果，输出字符串信息。在主类的main方法中分别用参数</span></span><br><span class="line"><span class="comment">区别调用三个方法。OverLoadExercise.java*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Methods</span> <span class="variable">methods</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Methods</span>();</span><br><span class="line">        methods.m(<span class="number">3</span>);</span><br><span class="line">        methods.m(<span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">        methods.m(<span class="string">&quot;西北&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Methods</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m</span><span class="params">(<span class="type">int</span> num1)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> num1 * num1;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> num1 * num2;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m</span><span class="params">(String str)</span> &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="2-更改后"><a href="#2-更改后" class="headerlink" title="2. 更改后"></a>2. 更改后</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.overload_;</span><br><span class="line"><span class="comment">/*2022年12月31日</span></span><br><span class="line"><span class="comment">* 练习重载</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OverLoadExercise</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 编写程序，类Methods中定义三个重载方法并调用。方法名为m。三个方法分</span></span><br><span class="line"><span class="comment">别接收一个int参数、两个int参数、一个字符串参数。分别执行平方运算并输出</span></span><br><span class="line"><span class="comment">结果，相乘并输出结果，输出字符串信息。在主类的main方法中分别用参数</span></span><br><span class="line"><span class="comment">区别调用三个方法。OverLoadExercise.java*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Methods</span> <span class="variable">methods</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Methods</span>();</span><br><span class="line">        methods.m(<span class="number">3</span>);</span><br><span class="line">        methods.m(<span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">        methods.m(<span class="string">&quot;西北&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Methods</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m</span><span class="params">(<span class="type">int</span> num1)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;平方=&quot;</span> + (num1 * num1));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;两数相乘为：&quot;</span> + num1 * num2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20221231185753949.png" alt="image-20221231185753949"></p><h6 id="3-思路"><a href="#3-思路" class="headerlink" title="3. 思路"></a>3. 思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101091209758.png" alt="image-20230101091209758"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101091258169.png" alt="image-20230101091258169"></p><blockquote><p>优先调用未转换的方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 2022年11月3日</span></span><br><span class="line"><span class="comment">* 练习方法重载*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OverLoadExercise</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Methods</span> <span class="variable">m1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Methods</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用m方法</span></span><br><span class="line"><span class="comment">/*        m1.m(3);</span></span><br><span class="line"><span class="comment">        m1.m(3,5);</span></span><br><span class="line"><span class="comment">        m1.m(&quot;hello&quot;);*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//max方法</span></span><br><span class="line"></span><br><span class="line">        System.out.println(m1.max(<span class="number">34</span>,<span class="number">45</span>));</span><br><span class="line">        System.out.println(m1.max(<span class="number">34.5</span>,<span class="number">986.3</span>));</span><br><span class="line">        System.out.println(m1.max(<span class="number">3.45</span>,<span class="number">56</span>,<span class="number">57.5</span>));</span><br><span class="line">        System.out.println(m1.max(<span class="number">3.45</span>,<span class="number">30</span>,<span class="number">50</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Methods</span> &#123;</span><br><span class="line">    <span class="comment">/*定义三个重载方法max()，第一个方法，返回两个int值中的最大值</span></span><br><span class="line"><span class="comment">    2.第二个方法，返回两个double值中的最大值，第三个方法。</span></span><br><span class="line"><span class="comment">    3. 返回三个double值中的最大值，并分别调用三个方法*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//分析</span></span><br><span class="line">    <span class="comment">//1. 方法名 max</span></span><br><span class="line">    <span class="comment">//2. 形参（int ,int)</span></span><br><span class="line">    <span class="comment">// 3.int</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> n1,<span class="type">int</span> n2)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> n1 &gt; n2 ? n1 : n2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">max</span><span class="params">(<span class="type">double</span> n1,<span class="type">double</span> n2)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> n1 &gt; n2 ? n1 : n2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">max</span><span class="params">(<span class="type">double</span> n1,<span class="type">double</span> n2, <span class="type">int</span> n3)</span> &#123;</span><br><span class="line">        <span class="comment">//定义一个max1接收 n1 和 n2 的最大值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;int n3&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">max1</span> <span class="operator">=</span> n1 &gt; n2 ? n1 : n2;</span><br><span class="line">        <span class="comment">//如果max1大于n3 返回n3</span></span><br><span class="line">        <span class="keyword">return</span> max1 &gt; n3 ? max1 : n3;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">max</span><span class="params">(<span class="type">double</span> n1,<span class="type">double</span> n2, <span class="type">double</span> n3)</span> &#123;</span><br><span class="line">        <span class="comment">//定义一个max1接收 n1 和 n2 的最大值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;double n3&quot;</span>);</span><br><span class="line">       <span class="type">double</span> <span class="variable">max1</span> <span class="operator">=</span> n1 &gt; n2 ? n1 : n2;</span><br><span class="line">       <span class="comment">//如果max1大于n3 返回n3</span></span><br><span class="line">       <span class="keyword">return</span> max1 &gt; n3 ? max1 : n3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 编写程序，类Methods中定义三个重载方法并调用。方法名为m</span></span><br><span class="line"><span class="comment">     * 三个方法分别接收一个int参数，两个int参数。一个字符串参数。分别执行平方运算并输出结果</span></span><br><span class="line"><span class="comment">     * 相乘并输出结果，输出字符串信息。在主类的main（）方法中分别用参数区别调用三个方法*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//分析</span></span><br><span class="line">    <span class="comment">// 1 方法名 m</span></span><br><span class="line">    <span class="comment">// 2 形参（int)</span></span><br><span class="line">    <span class="comment">// void</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m</span><span class="params">(<span class="type">int</span> m)</span> &#123;</span><br><span class="line"><span class="comment">/*        int res = m * m;</span></span><br><span class="line"><span class="comment">        System.out.println(res);*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;平方=&quot;</span> + (m * m));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> m * n;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">m</span><span class="params">(String m)</span> &#123;</span><br><span class="line">        System.out.println(m);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221103110451679.png" alt="image-20221103110451679"></p><h3 id="10-可变参数-VarParameter"><a href="#10-可变参数-VarParameter" class="headerlink" title="10. 可变参数(VarParameter)"></a><code>10. 可变参数(VarParameter)</code></h3><blockquote><p>java允许将同一个类中<code>多个同名同功能</code>但<code>参数个数不同</code>的方法，封装成一个方法。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221103110820828.png" alt="image-20221103110820828"></p><h4 id="1-当做数组来使用"><a href="#1-当做数组来使用" class="headerlink" title="1. 当做数组来使用"></a>1. 当做数组来使用</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101092323025.png" alt="image-20230101092323025"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101092400253.png" alt="image-20230101092400253"></p><p>0</p><h4 id="2-可变参数求和"><a href="#2-可变参数求和" class="headerlink" title="2. 可变参数求和"></a>2. 可变参数求和</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101092540903.png" alt="image-20230101092540903"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101092610126.png" alt="image-20230101092610126"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年11月3日</span></span><br><span class="line"><span class="comment">* 可变参数的练习*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VarParameter01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">HspMethod</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HspMethod</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;参数长度&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(n1.sum(<span class="number">30</span>,<span class="number">34</span>,<span class="number">45</span>,<span class="number">56</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HspMethod</span> &#123;</span><br><span class="line">    <span class="comment">//可以计算 2个数的和， 3个数的和， 4.5， 。。</span></span><br><span class="line">    <span class="comment">//可以使用方法重载</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*    public int sum(int n1, int n2) &#123; //两个数的和</span></span><br><span class="line"><span class="comment">        return n1 + n2;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public int sum(int n1, int n2,int n3) &#123; //三个数的和</span></span><br><span class="line"><span class="comment">        return n1 + n2 + n3;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 。。。</span></span><br><span class="line">    <span class="comment">//上面的三个方法名称相同，功能相同，参数个数不同 -&gt; 使用可边参数优化</span></span><br><span class="line">    <span class="comment">//老韩解毒</span></span><br><span class="line">    <span class="comment">/*1. int... 表示接收的是可变参数，类型是int，即可以接收多个int(0-多)</span></span><br><span class="line"><span class="comment">    * 2. 使用可变参数时，可以当做数组来使用 即 nums 可以当做数组</span></span><br><span class="line"><span class="comment">    * 3. 遍历nums 求和即可*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span>... nums)</span> &#123;</span><br><span class="line"><span class="comment">//        System.out.println(&quot;接收的参数个数&quot; + nums.length);</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//        求和</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            res += nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(nums.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-x3D-x3D-可变参数注意事项和使用细节-x3D-x3D"><a href="#3-x3D-x3D-可变参数注意事项和使用细节-x3D-x3D" class="headerlink" title="3. &#x3D;&#x3D;可变参数注意事项和使用细节&#x3D;&#x3D;"></a>3. &#x3D;&#x3D;可变参数注意事项和使用细节&#x3D;&#x3D;</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101093510911.png" alt="image-20230101093510911"></p><h6 id="可变参数的实参可以为0个或任意多个"><a href="#可变参数的实参可以为0个或任意多个" class="headerlink" title="可变参数的实参可以为0个或任意多个"></a>可变参数的实参可以为0个或任意多个</h6><h6 id="x3D-x3D-可变参数的实参可以为数组-x3D-x3D"><a href="#x3D-x3D-可变参数的实参可以为数组-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;可变参数的实参可以为数组&#x3D;&#x3D;"></a>&#x3D;&#x3D;可变参数的实参可以为数组&#x3D;&#x3D;</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221103132302751.png" alt="image-20221103132302751"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.varParameter;</span><br><span class="line"><span class="comment">/*2023年1月1日</span></span><br><span class="line"><span class="comment">* 可变参数细节*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VarParameterDetail</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[][] arr = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>,&#125;,&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;, &#123;<span class="number">2</span>,<span class="number">3</span>&#125;&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line">                System.out.print(arr[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">T</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">T</span>();</span><br><span class="line">        t.f1(arr);</span><br><span class="line">        ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">T</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">f1</span><span class="params">(<span class="type">int</span>[]... nums)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;长度=&quot;</span> + nums.length);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="可变参数的本质就是数组"><a href="#可变参数的本质就是数组" class="headerlink" title="可变参数的本质就是数组"></a>可变参数的本质就是数组</h6><h6 id="可变参数可以和普通类型的参数一起放在形参列表，但必须保证可变参数在最后"><a href="#可变参数可以和普通类型的参数一起放在形参列表，但必须保证可变参数在最后" class="headerlink" title="可变参数可以和普通类型的参数一起放在形参列表，但必须保证可变参数在最后"></a>可变参数可以和普通类型的参数一起放在形参列表，但必须保证可变参数在最后</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101095403133.png" alt="image-20230101095403133"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221103132643473.png" alt="image-20221103132643473"></p><h6 id="一个形参列表中只能出现一个可变参数"><a href="#一个形参列表中只能出现一个可变参数" class="headerlink" title="一个形参列表中只能出现一个可变参数"></a>一个形参列表中只能出现一个可变参数</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221103204552062.png" alt="image-20221103204552062"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101100220286.png" alt="image-20230101100220286"></p><h4 id="4-练习"><a href="#4-练习" class="headerlink" title="4. 练习"></a>4. 练习</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101100435911.png" alt="image-20230101100435911"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101102805159.png" alt="image-20230101102805159"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101103043600.png" alt="image-20230101103043600"></p><p>sout</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/*有三个方法，分别实现返回姓名和两内课成绩（总分）</span><br><span class="line">返回姓名和三内课成绩（总分），返回姓名和五巾课成绩(总分)</span><br><span class="line">封装成一个可变参数的方法*/</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VarParameterExercise</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">HspMethod01</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HspMethod01</span>();</span><br><span class="line">        System.out.println(n1.showScore(<span class="string">&quot;cuiyq&quot;</span>, <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HspMethod01</span> &#123;</span><br><span class="line"><span class="comment">/*有三个方法，分别实现返回姓名和两内课成绩（总分）</span></span><br><span class="line"><span class="comment">返回姓名和三内课成绩（总分），返回姓名和五巾课成绩(总分)</span></span><br><span class="line"><span class="comment">封装成一个可变参数的方法*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">showScore</span><span class="params">(String name, <span class="type">double</span>... scores)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">totalScore</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//        把数组的和加到一起</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; scores.length; i++) &#123;</span><br><span class="line">            totalScore += scores[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> name+ <span class="string">&quot;\t&quot;</span> + scores.length + <span class="string">&quot;门课的成绩总分为=&quot;</span> + totalScore;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="11-x3D-x3D-作用域-scope-x3D-x3D"><a href="#11-x3D-x3D-作用域-scope-x3D-x3D" class="headerlink" title="11. &#x3D;&#x3D;作用域(scope)&#x3D;&#x3D;"></a>11. &#x3D;&#x3D;作用域(scope)&#x3D;&#x3D;</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221103205028696.png" alt="image-20221103205028696"></p><h4 id="1-局部变量"><a href="#1-局部变量" class="headerlink" title="1.局部变量"></a>1.局部变量</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101103628345.png" alt="image-20230101103628345"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101103742924.png" alt="image-20230101103742924"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101104015241.png" alt="image-20230101104015241"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101104457020.png" alt="image-20230101104457020"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101104713153.png" alt="image-20230101104713153"></p><h4 id="2-全局变量"><a href="#2-全局变量" class="headerlink" title="2. 全局变量"></a>2. 全局变量</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101103824115.png" alt="image-20230101103824115"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101103910818.png" alt="image-20230101103910818"></p><h5 id="成员变量注意事项"><a href="#成员变量注意事项" class="headerlink" title="成员变量注意事项"></a>成员变量注意事项</h5><p>成员变量可以不用赋值，局部变量必须赋值后才能使用</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221103221318816.png" alt="image-20221103221318816"></p><h5 id="除了属性之外的变量都可以认为是局部变量"><a href="#除了属性之外的变量都可以认为是局部变量" class="headerlink" title="除了属性之外的变量都可以认为是局部变量"></a><code>除了属性之外的变量都可以认为是局部变量</code></h5><blockquote><p>作用域为定义它的代码块中！</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VarScope</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Cat01</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat01</span>();</span><br><span class="line">        c1.cry();</span><br><span class="line">        c1.eat();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat01</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    全局变量：也就是属性，作用域为整个类题 Cat类 ：cry eat 等方法使用属性</span></span><br><span class="line"><span class="comment">//    属性在定义时，可以直接赋值</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> age ;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> weight; <span class="comment">// 有默认值是0.0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cry</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        局部变量一般是指在成员方法中定义的变量</span></span><br><span class="line"><span class="comment">//        2.n 和 name 就是局部变量</span></span><br><span class="line"><span class="comment">//        3.n 和 name 的作用域在cry方法中</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;jack&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;在cry中使用age= &quot;</span> + age);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;在eat中使用属性= &quot;</span> + age);</span><br><span class="line">     <span class="comment">//   System.out.println(name);//错误</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-x3D-x3D-作用域的注意事项和使用细节-x3D-x3D"><a href="#3-x3D-x3D-作用域的注意事项和使用细节-x3D-x3D" class="headerlink" title="3. &#x3D;&#x3D;作用域的注意事项和使用细节&#x3D;&#x3D;"></a>3. &#x3D;&#x3D;作用域的注意事项和使用细节&#x3D;&#x3D;</h4><p><code>属性生命周期较长</code>，伴随着对象的创建而创建，伴随着对象的销毁而销毁。，<code>局部变量生命周期较短</code>，伴随着它的代码块的执行而创建，伴随着代码块的结束而销毁。即在一次方法调用过程中。</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105144952858.png" alt="image-20221105144952858"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105142836634.png" alt="image-20221105142836634"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101104937990.png" alt="image-20230101104937990"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101105116787.png" alt="image-20230101105116787"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105142855185.png" alt="image-20221105142855185"></p><p>king</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105143129603.png" alt="image-20221105143129603"></p><h5 id="3-1-局部变量方法调用完就销毁"><a href="#3-1-局部变量方法调用完就销毁" class="headerlink" title="3.1 局部变量方法调用完就销毁"></a>3.1 局部变量方法调用完就销毁</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101105314866.png" alt="image-20230101105314866"></p><blockquote><p>say方法结束，name也销毁</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101105436192.png" alt="image-20230101105436192"></p><h5 id="3-2-全局变量-x2F-属性：可以被本类使用，或其他类使用（通过对象调用）"><a href="#3-2-全局变量-x2F-属性：可以被本类使用，或其他类使用（通过对象调用）" class="headerlink" title="3.2 全局变量&#x2F;属性：可以被本类使用，或其他类使用（通过对象调用）"></a>3.2 全局变量&#x2F;属性：可以被本类使用，或其他类使用（通过对象调用）</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105143732489.png" alt="image-20221105143732489"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101110952227.png" alt="image-20230101110952227"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101111028027.png" alt="image-20230101111028027"></p><h6 id="x3D-x3D-全局新变量玩法-x3D-x3D"><a href="#x3D-x3D-全局新变量玩法-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;全局新变量玩法&#x3D;&#x3D;"></a>&#x3D;&#x3D;全局新变量玩法&#x3D;&#x3D;</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101111712771.png" alt="image-20230101111712771"></p><h5 id="3-3-全局变量可以加修饰符"><a href="#3-3-全局变量可以加修饰符" class="headerlink" title="3.3 全局变量可以加修饰符"></a>3.3 全局变量可以加修饰符</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105144801100.png" alt="image-20221105144801100"></p><h5 id="3-4-局部变量不可以加修饰符"><a href="#3-4-局部变量不可以加修饰符" class="headerlink" title="3.4 局部变量不可以加修饰符"></a>3.4 局部变量不可以加修饰符</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105144734217.png"></p><h3 id="12-构造方法-x2F-构造器（constructor）"><a href="#12-构造方法-x2F-构造器（constructor）" class="headerlink" title="12. 构造方法&#x2F;构造器（constructor）"></a>12. 构造方法&#x2F;构造器（constructor）</h3><blockquote><p>在创建的过程中，直接赋值</p><p>新对象的初始化</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105145929981.png" alt="image-20221105145929981"></p><h4 id="12-1-基本介绍"><a href="#12-1-基本介绍" class="headerlink" title="12.1 基本介绍"></a>12.1 基本介绍</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101112600812.png" alt="image-20230101112600812"></p><h6 id="构造器主要完成初始化，对象再之前已经创造过了"><a href="#构造器主要完成初始化，对象再之前已经创造过了" class="headerlink" title="构造器主要完成初始化，对象再之前已经创造过了"></a>构造器主要完成初始化，对象再之前已经创造过了</h6><h4 id="12-2-快速入门"><a href="#12-2-快速入门" class="headerlink" title="12.2 快速入门"></a>12.2 快速入门</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101112740137.png" alt="image-20230101112740137"></p><h5 id="1-老韩解毒"><a href="#1-老韩解毒" class="headerlink" title="1. 老韩解毒"></a>1. 老韩解毒</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101113043524.png" alt="image-20230101113043524"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101113855397.png" alt="image-20230101113855397"></p><h4 id="12-2-x3D-x3D-构造器注意事项和使用细节-x3D-x3D"><a href="#12-2-x3D-x3D-构造器注意事项和使用细节-x3D-x3D" class="headerlink" title="12.2 &#x3D;&#x3D;构造器注意事项和使用细节&#x3D;&#x3D;"></a>12.2 &#x3D;&#x3D;构造器注意事项和使用细节&#x3D;&#x3D;</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105162539009.png" alt="image-20221105162539009"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105194224721.png" alt="image-20221105194224721"></p><h5 id="1-一个类可以定义多个不同的构造器，即构造器重载"><a href="#1-一个类可以定义多个不同的构造器，即构造器重载" class="headerlink" title="1. 一个类可以定义多个不同的构造器，即构造器重载"></a>1. 一个类可以定义多个不同的构造器，即构造器重载</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101114212141.png" alt="image-20230101114212141"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101175140852.png" alt="image-20230101175140852"></p><h5 id="2-一旦定义了自己的构造器，就不能再使用默认的构造器"><a href="#2-一旦定义了自己的构造器，就不能再使用默认的构造器" class="headerlink" title="2. 一旦定义了自己的构造器，就不能再使用默认的构造器"></a>2. 一旦定义了自己的构造器，就不能再使用默认的构造器</h5><blockquote><p>自己定义之后，必须要自己再写一下无参构造器</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105194224721.png" alt="image-20221105194224721"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101175931150.png" alt="image-20230101175931150"></p><h5 id="反编译-javap"><a href="#反编译-javap" class="headerlink" title="反编译 javap"></a>反编译 javap</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Javap Dog.class</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105193218507.png" alt="image-20221105193218507"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105193502020.png" alt="image-20221105193502020"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105193541412.png" alt="image-20221105193541412"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105193849349.png" alt="image-20221105193849349"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105193905108.png" alt="image-20221105193905108"></p><blockquote><p>.class 也可以不写</p></blockquote><h4 id="12-3-练习"><a href="#12-3-练习" class="headerlink" title="12.3 练习"></a>12.3 <code>练习</code></h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105194948616.png" alt="image-20221105194948616"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101180445699.png" alt="image-20230101180445699"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101180505459.png" alt="image-20230101180505459"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101180611499.png" alt="image-20230101180611499"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101181516803.png" alt="image-20230101181516803"></p><h5 id="只要new一个对象，都会在堆内存生成一个新的空间"><a href="#只要new一个对象，都会在堆内存生成一个新的空间" class="headerlink" title="只要new一个对象，都会在堆内存生成一个新的空间"></a>只要new一个对象，都会在堆内存生成一个新的空间</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105201428022.png" alt="image-20221105201428022"></p><h4 id="12-4-x3D-x3D-对象创建的流程分析-x3D-x3D-–（先进行赋默认值）"><a href="#12-4-x3D-x3D-对象创建的流程分析-x3D-x3D-–（先进行赋默认值）" class="headerlink" title="12.4 &#x3D;&#x3D;对象创建的流程分析&#x3D;&#x3D; –（先进行赋默认值）"></a>12.4 &#x3D;&#x3D;对象创建的流程分析&#x3D;&#x3D; –（先进行赋默认值）</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105201656446.png" alt="image-20221105201656446"></p><p>main</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;小倩&quot;</span>,<span class="number">20</span>);</span><br></pre></td></tr></table></figure><blockquote><ol><li>当创建对象时，先去加载Person类信息(Person.class)</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105201919421.png" alt="image-20221105201919421"></p><blockquote><ol start="2"><li>new 的时候先在堆里开辟空间</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105203149312.png" alt="image-20221105203149312"></p><blockquote><p>开辟空间的时候age属性有一个默认初始值</p><p>3.执行int age &#x3D; 90 并没有直接赋值给90，</p><p>而是先<code>进行默认初始化</code>，然后0就换成90</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105203323338.png" alt="image-20221105203323338"></p><blockquote><ol start="4"><li><p>初始化完成后，这时候构造器才执行</p><p>n就是小倩，再把小倩传给name属性</p><p>这时候把null换成小倩</p><p>小倩在常量池</p><p>把20赋给a ，再把a赋给age </p><p>90会被更改为20</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221105204549833.png" alt="image-20221105204549833"></p><blockquote><ol start="5"><li>把0x1122返回给主栈p，p就是对象的引用，p才指向那个空间</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106080710169.png" alt="image-20221106080710169"></p><h5 id="真正的对象在堆里"><a href="#真正的对象在堆里" class="headerlink" title="真正的对象在堆里"></a>真正的对象在堆里</h5><blockquote><p>p只能算作 <code>对象引用</code> –对象名</p></blockquote><p>常说的p对象，本意p引用指向对象</p><blockquote><p>将在0x1122可能会被别的对象引用</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106081536379.png" alt="image-20221106081536379"></p><p>名字不一样但指的是同一个对象</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106081803817.png" alt="image-20221106081803817"></p><h5 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106082254517.png" alt="image-20221106082254517"></p><h4 id="12-5-this关键字"><a href="#12-5-this关键字" class="headerlink" title="12.5 this关键字"></a>12.5 this关键字</h4><h5 id="1-引出this"><a href="#1-引出this" class="headerlink" title="1.引出this"></a>1.引出this</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101183729276.png" alt="image-20230101183729276"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101183945513.png" alt="image-20230101183945513"></p><p><code>this代表当前对象</code></p><blockquote><p>如果我们构造器的形参，能够直接写成属性名，就更好了</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106084032450.png" alt="image-20221106084032450"></p><p>&#x3D;&#x3D;直接改的话值就会变成 null 和 0&#x3D;&#x3D;</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   //出现一个问题，根据变量的作用域原则</span><br><span class="line">&gt;//    构造器的name，就是局部变量，而不是属性</span><br><span class="line">&gt;//    两个name都指的是形参</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106083604057.png" alt="image-20221106083604057"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106083627934.png" alt="image-20221106083627934"></p><h5 id="2-this入门"><a href="#2-this入门" class="headerlink" title="2.this入门"></a>2.this入门</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106084203080.png" alt="image-20221106084203080"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106085340426.png" alt="image-20221106085340426"></p><blockquote><p> 不同的人说我的，代表的人是不一样的</p></blockquote><h5 id="3-this-name"><a href="#3-this-name" class="headerlink" title="3. this.name"></a>3. this.name</h5><blockquote><p> this.name 指的是当前对象的属性     –new出来的对象</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101184435030.png" alt="image-20230101184435030"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106121945304.png" alt="image-20221106121945304"></p><h5 id="4-x3D-x3D-this关键字的理解-x3D-x3D"><a href="#4-x3D-x3D-this关键字的理解-x3D-x3D" class="headerlink" title="4. &#x3D;&#x3D;this关键字的理解&#x3D;&#x3D;"></a>4. &#x3D;&#x3D;this关键字的理解&#x3D;&#x3D;</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101184703587.png" alt="image-20230101184703587"></p><blockquote><ol><li>new 一个对象在堆里产生一个空间</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101184809572.png" alt="image-20230101184809572"></p><blockquote><ol start="2"><li><p>在对象创建好后，在堆内存中还有个隐藏属性是this</p><p>​也是引用，这个地址就是对象本身</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106133400687.png" alt="image-20221106133400687"></p><blockquote><ol start="3"><li>在主栈中也有dog1引用，指向堆内存</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106133452062.png" alt="image-20221106133452062"></p><blockquote><ol start="4"><li>创建一个新的对象</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106133841993.png" alt="image-20221106133841993"></p><blockquote><ol start="5"><li>在堆内存开辟一个新的空间0x1155</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106133959098.png" alt="image-20221106133959098"></p><blockquote><ol start="6"><li>0x1155 也有个this属性，指向他自己</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106134105937.png" alt="image-20221106134105937"></p><blockquote><ol start="7"><li>返回给dog2 地址引用</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106134303070.png" alt="image-20221106134303070"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106134237304.png" alt="image-20221106134237304"></p><h5 id="5-hashCode"><a href="#5-hashCode" class="headerlink" title="5. hashCode()"></a>5. hashCode()</h5><p>可以简单的看作地址，但不是实际的地址</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106134720310.png" alt="image-20221106134720310"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101190059805.png" alt="image-20230101190059805"></p><h6 id="this的hashcode值-和dog1的hashcode值一样"><a href="#this的hashcode值-和dog1的hashcode值一样" class="headerlink" title="this的hashcode值 和dog1的hashcode值一样"></a>this的hashcode值 和dog1的hashcode值一样</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106135121610.png" alt="image-20221106135121610"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106135200088.png" alt="image-20221106135200088"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106135303207.png" alt="image-20221106135303207"></p><blockquote><p>就算不写this也是一样的</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106135435735.png" alt="image-20221106135435735"></p><h5 id="x3D-x3D-6-哪个对象调用，this代表哪个对象-x3D-x3D"><a href="#x3D-x3D-6-哪个对象调用，this代表哪个对象-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;6. 哪个对象调用，this代表哪个对象&#x3D;&#x3D;"></a>&#x3D;&#x3D;6. 哪个对象调用，this代表哪个对象&#x3D;&#x3D;</h5><h5 id="7-小结"><a href="#7-小结" class="headerlink" title="7.小结"></a>7.小结</h5><blockquote><p>进入info方法中输出this ，就是dog1指向那个对象</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106140212066.png" alt="image-20221106140212066"></p><h4 id="12-5-x3D-x3D-this使用细节-x3D-x3D"><a href="#12-5-x3D-x3D-this使用细节-x3D-x3D" class="headerlink" title="12.5 &#x3D;&#x3D;this使用细节&#x3D;&#x3D;"></a>12.5 &#x3D;&#x3D;this使用细节&#x3D;&#x3D;</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101193628689.png" alt="image-20230101193628689"></p><h5 id="1-this关键字可以用来访问本类的属性、方法、构造器"><a href="#1-this关键字可以用来访问本类的属性、方法、构造器" class="headerlink" title="1.this关键字可以用来访问本类的属性、方法、构造器"></a>1.this关键字可以用来访问本类的属性、方法、构造器</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106140853508.png" alt="image-20221106140853508"></p><h5 id="2-this用于区分当前类的属性和局部变量"><a href="#2-this用于区分当前类的属性和局部变量" class="headerlink" title="2. this用于区分当前类的属性和局部变量"></a>2. this用于区分当前类的属性和局部变量</h5><blockquote><p>this直接表示类中的成员变量</p><p>普通方式先找局部变量</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106145009492.png" alt="image-20221106145009492"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106145201797.png" alt="image-20221106145201797"></p><h5 id="3-访问成员方法的语法：-this-方法名-参数列表"><a href="#3-访问成员方法的语法：-this-方法名-参数列表" class="headerlink" title="3. 访问成员方法的语法： this.方法名(参数列表);"></a>3. 访问成员方法的语法： this.方法名(参数列表);</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106141706354.png" alt="image-20221106141706354"></p><h5 id="4-x3D-x3D-访问构造器语法：this-参数列表-；注意只能在构造器中使用-x3D-x3D"><a href="#4-x3D-x3D-访问构造器语法：this-参数列表-；注意只能在构造器中使用-x3D-x3D" class="headerlink" title="4. &#x3D;&#x3D;访问构造器语法：this(参数列表)；注意只能在构造器中使用&#x3D;&#x3D;"></a>4. &#x3D;&#x3D;访问构造器语法：this(参数列表)；注意只能在构造器中使用&#x3D;&#x3D;</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101193433412.png" alt="image-20230101193433412"></p><p><code>只能在构造器中通过this调用另外一个this</code></p><blockquote><p>构造器默认就是类名</p></blockquote><h5 id="5-对this的调用必须是构造器中的第一个语句"><a href="#5-对this的调用必须是构造器中的第一个语句" class="headerlink" title="5. 对this的调用必须是构造器中的第一个语句"></a>5. 对this的调用必须是构造器中的第一个语句</h5><blockquote><p>如果想要用一个构造器去调用另一个构造器</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106142531346.png" alt="image-20221106142531346"></p><h5 id="6-this-不能在类定义外部使用，只能在类定义的方法中使用"><a href="#6-this-不能在类定义外部使用，只能在类定义的方法中使用" class="headerlink" title="6. this 不能在类定义外部使用，只能在类定义的方法中使用"></a>6. this 不能在类定义外部使用，只能在类定义的方法中使用</h5><blockquote><p>一定跟对象关联</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年11月6日</span></span><br><span class="line"><span class="comment">* 学习this的细节*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThisDetail</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">/*        T4 t1 = new T4();</span></span><br><span class="line"><span class="comment">        t1.f2();*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        T4 t2 = new T4();</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;t2.name = &quot; + t2.name +&quot;\t&quot; +</span></span><br><span class="line"><span class="comment">//                            &quot;t2.age= &quot; + t2.age);</span></span><br><span class="line"></span><br><span class="line">        <span class="type">T4</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">T4</span>();</span><br><span class="line">        t3.f3();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">T4</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 细节： ==访问构造器语法：this(参数列表)；</span></span><br><span class="line"><span class="comment">    * 注意只能在构造器中使用</span></span><br><span class="line"><span class="comment">    只能在构造器中通过this调用另外一个this</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    注意： 访问构造器语法: this(参数列表); 必须放置第一条语句</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">T4</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//这里去访问 T4(String name, int age) 构造器</span></span><br><span class="line">        <span class="built_in">this</span>(<span class="string">&quot;jack&quot;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="comment">//        this(&quot;jack&quot;,2,4); // 不能同时写会报错</span></span><br><span class="line">        System.out.println(<span class="string">&quot;this.name = &quot;</span> + <span class="built_in">this</span>.name +<span class="string">&quot;\t&quot;</span> +</span><br><span class="line">                <span class="string">&quot;this.age= &quot;</span> + <span class="built_in">this</span>.age);</span><br><span class="line">        System.out.println(<span class="string">&quot;T4() 构造器&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;======&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">T4</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;T4(String name, int age) 构造器&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        System.out.println(<span class="string">&quot;=========&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*    public T4(String name, int age,int old) &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        System.out.println(&quot;T4(String name, int age) 构造器&quot;);</span></span><br><span class="line"><span class="comment">        this.name = name;</span></span><br><span class="line"><span class="comment">        this.age = age;</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;=========&quot;);</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//    细节：访问成员方法的语法：this.方法名(参数列表);</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">f1</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;f1() 方法。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">f2</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;f2() 方法。。&quot;</span>);</span><br><span class="line"><span class="comment">//        调用本类的f1方法</span></span><br><span class="line"><span class="comment">//        第一种方式</span></span><br><span class="line">        f1();</span><br><span class="line"><span class="comment">//        第二种方式</span></span><br><span class="line">        <span class="built_in">this</span>.f1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    this关键字可以用来访问本类的属性</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">f3</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;局部&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="comment">//        传统方式，就近原则，先找局部变量</span></span><br><span class="line">        System.out.println(<span class="string">&quot;name = &quot;</span> + name + <span class="string">&quot;age = &quot;</span> + age); <span class="comment">// 局部 3</span></span><br><span class="line"><span class="comment">//        也可用this访问属性</span></span><br><span class="line">        System.out.println(<span class="string">&quot;name = &quot;</span> + <span class="built_in">this</span>.name + <span class="string">&quot;age = &quot;</span> + <span class="built_in">this</span>.age); <span class="comment">//jack 2</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="12-6-this-练习"><a href="#12-6-this-练习" class="headerlink" title="12.6 this 练习"></a>12.6 this 练习</h4><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101200250629.png" alt="image-20230101200250629"></p><blockquote><p>定义Person类，里面有name、age属性，并提供compareTo比较方法<br>用于判断是否和另一个人相等，提供测试类TestPerson用于测试，<br>名字和年龄完全一样，就返回true,否则返回false</p></blockquote><h5 id="自己写的代码-1"><a href="#自己写的代码-1" class="headerlink" title="自己写的代码"></a>自己写的代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.this_.exercise;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThisPerson</span> &#123;</span><br><span class="line">    <span class="comment">/*2023年1月1日</span></span><br><span class="line"><span class="comment">     * 练习this*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 定义Person类，里面有name、age属性，</span></span><br><span class="line"><span class="comment">        * 并提供compareTol比较方法，用于判断</span></span><br><span class="line"><span class="comment">        是否和另一个人相等，提供测试类TestPerson用于测试，</span></span><br><span class="line"><span class="comment">        名字和年龄完全一样，就</span></span><br><span class="line"><span class="comment">        返回true,否则返回false*/</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;cuiyq&quot;</span>, <span class="number">20</span>);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;cuiyq&quot;</span>, <span class="number">20</span>);</span><br><span class="line">        System.out.println(p1.compareTo(p2));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    compareTo方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">compareTo</span><span class="params">(Person p)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">this</span>.name.equals(p.name) &amp;&amp; (<span class="built_in">this</span>.age == p.age));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*日期：2022年11月6日</span></span><br><span class="line"><span class="comment">* 目的：this课堂练习*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestPerson</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*定义Person类，里面有name、age属性，并提供compareTo比较方法</span></span><br><span class="line"><span class="comment">    用于判断是否和另一个人相等，提供测试类TestPerson用于测试，</span></span><br><span class="line"><span class="comment">    名字和年龄完全一样，就返回true,否则返回false*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person06</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person06</span>(<span class="string">&quot;jack&quot;</span>,<span class="number">20</span>);</span><br><span class="line">        <span class="type">Person06</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person06</span>(<span class="string">&quot;jack&quot;</span>,<span class="number">20</span>);</span><br><span class="line"><span class="comment">//        比较p1 和p2 的值</span></span><br><span class="line">        System.out.println(p1.compareTo(p2));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义Person类，里面有name、age属性，并提供compareTo比较方法</span></span><br><span class="line"><span class="comment">用于判断是否和另一个人相等，提供测试类TestPerson用于测试，</span></span><br><span class="line"><span class="comment">名字和年龄完全一样，就返回true,否则返回false*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person06</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person06</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    compareTo比较方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">compareTo</span><span class="params">(Person06 p)</span> &#123;</span><br><span class="line"><span class="comment">/*        if (this.name.equals(p.name) &amp;&amp; this.age == age) &#123;</span></span><br><span class="line"><span class="comment">            return true;</span></span><br><span class="line"><span class="comment">        &#125; else &#123;</span></span><br><span class="line"><span class="comment">            return false;</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name.equals(p.name) &amp;&amp; <span class="built_in">this</span>.age == p.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### <span class="number">12.7</span> ==本章作业==</span><br><span class="line"></span><br><span class="line">![image-<span class="number">20230101200348127</span>](https:<span class="comment">//cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101200348127.png)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![image-<span class="number">20230101200428462</span>](https:<span class="comment">//cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101200428462.png)</span></span><br><span class="line"></span><br><span class="line">![image-<span class="number">20230101200650091</span>](https:<span class="comment">//cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101200650091.png)</span></span><br><span class="line"></span><br><span class="line">![image-<span class="number">20230101200704439</span>](https:<span class="comment">//cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101200704439.png)</span></span><br><span class="line"></span><br><span class="line">![image-<span class="number">20230101200720231</span>](https:<span class="comment">//cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101200720231.png)</span></span><br><span class="line"></span><br><span class="line">![image-<span class="number">20230101200734711</span>](https:<span class="comment">//cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101200734711.png)</span></span><br><span class="line"></span><br><span class="line">![image-<span class="number">20230101200800481</span>](https:<span class="comment">//cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101200800481.png)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### <span class="number">1.</span> </span><br><span class="line"></span><br><span class="line">![image-<span class="number">20230101201357530</span>](https:<span class="comment">//cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101201357530.png)</span></span><br><span class="line"></span><br><span class="line">###### <span class="number">1.</span>思路</span><br><span class="line"></span><br><span class="line">![image-<span class="number">20230101201409434</span>](https:<span class="comment">//cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101201409434.png)</span></span><br><span class="line"></span><br><span class="line">###### <span class="number">1.</span>代码</span><br><span class="line"></span><br><span class="line">![image-<span class="number">20230101201640537</span>](https:<span class="comment">//cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101201640537.png)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###### main</span><br><span class="line"></span><br><span class="line">![image-<span class="number">20230101201719545</span>](https:<span class="comment">//cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101201719545.png)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###### 健壮性</span><br><span class="line"></span><br><span class="line">![image-<span class="number">20230101202527598</span>](https:<span class="comment">//cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101202527598.png)</span></span><br><span class="line"></span><br><span class="line">![image-<span class="number">20230101202431436</span>](https:<span class="comment">//cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101202431436.png)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###### 源码</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"><span class="comment">/*2023年1月1日</span></span><br><span class="line"><span class="comment">* 1.编写类A01,定义方法max,实现求某个double数组的最大值，并返回</span></span><br><span class="line"><span class="comment">Homework01.java*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span>[] arr = &#123;<span class="number">23</span>,<span class="number">45</span>,<span class="number">456</span>,<span class="number">123</span>&#125;;</span><br><span class="line">        <span class="type">A01</span> <span class="variable">a01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A01</span>();</span><br><span class="line">        <span class="type">Double</span> <span class="variable">res</span> <span class="operator">=</span> a01.max(arr);</span><br><span class="line">        <span class="keyword">if</span> (res != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入有误，数组长度为0,或者数组值为null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">max</span><span class="params">(<span class="type">double</span>[] arr)</span> &#123;</span><br><span class="line"><span class="comment">//        考虑健壮性,数组长度为0 数组值为null</span></span><br><span class="line"><span class="comment">//        要先判断数组值</span></span><br><span class="line">        <span class="keyword">if</span> (arr != <span class="literal">null</span> &amp;&amp; arr.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">max</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (max &lt; arr[i]) &#123;</span><br><span class="line">                    max = arr[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> max;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="先完成正常业务，然后再考虑代码健壮性"><a href="#先完成正常业务，然后再考虑代码健壮性" class="headerlink" title="先完成正常业务，然后再考虑代码健壮性"></a>先完成正常业务，然后再考虑代码健壮性</h6><blockquote><p>1.编写类A01,定义方法max,:实现求某个double数组的最大值，并返回Homework01.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年11月6日</span></span><br><span class="line"><span class="comment">* 编写类A01,定义方法max,:实现求某个double数组的最大值</span></span><br><span class="line"><span class="comment">*  并返回*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        保证arr至少有一个元素</span></span><br><span class="line">        <span class="type">double</span>[] arr = &#123;<span class="number">3.4</span>,<span class="number">34</span>,<span class="number">54</span>,<span class="number">45.67</span>,<span class="number">100</span>&#125;;</span><br><span class="line"><span class="comment">//        实例化对象，调用max方法</span></span><br><span class="line">        <span class="type">A01</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A01</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;arr的最大值=&quot;</span> + a1.max(arr));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*思路分析</span></span><br><span class="line"><span class="comment">* 1. 类名</span></span><br><span class="line"><span class="comment">* 2.方法名 max</span></span><br><span class="line"><span class="comment">* 3.形参(double[])</span></span><br><span class="line"><span class="comment">* 4.返回值 double</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* 先完成正常业务，然后再考虑代码健壮性*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">max</span><span class="params">(<span class="type">double</span>[] arr)</span> &#123;</span><br><span class="line"><span class="comment">//        如果数组什么都没有</span></span><br><span class="line">        <span class="keyword">if</span> (arr.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//        求出最大值</span></span><br><span class="line"><span class="comment">//        假设max是最大值，</span></span><br><span class="line">            <span class="type">double</span> <span class="variable">max</span> <span class="operator">=</span> arr[<span class="number">0</span>]; <span class="comment">//</span></span><br><span class="line"><span class="comment">//            遍历数组，如果max小于数组的元素，把值赋给max</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (max &lt; arr[i]) &#123;</span><br><span class="line">                    max = arr[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> max;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>如果arr数组是个空值就会出现异常</p><p>把返回类型改为Double类，就可以返回null</p><p>在主方法中接收一下</p><p><code>Double res = a01.max(arr)</code></p><p>如果res不等于<code>null</code>,就说明有具体的值，就把res输出</p><p>如果就等于<code>null</code>就说明传进去的参数不合理</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年11月6日</span></span><br><span class="line"><span class="comment">* 编写类A01,定义方法max,:实现求某个double数组的最大值</span></span><br><span class="line"><span class="comment">*  并返回*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        保证arr至少有一个元素</span></span><br><span class="line">        <span class="type">double</span>[] arr = &#123;<span class="literal">null</span>&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//        实例化对象，调用max方法</span></span><br><span class="line">        <span class="type">A01</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A01</span>();</span><br><span class="line"><span class="comment">//        定义一个res 接收max的值，如果值不为null就说明合理</span></span><br><span class="line">        <span class="type">Double</span> <span class="variable">res</span> <span class="operator">=</span> a1.max(arr);</span><br><span class="line">        <span class="keyword">if</span> (a1.max(arr) != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;arr的最大值=&quot;</span> + res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的值不合法&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*思路分析</span></span><br><span class="line"><span class="comment">* 1. 类名</span></span><br><span class="line"><span class="comment">* 2.方法名 max</span></span><br><span class="line"><span class="comment">* 3.形参(double[])</span></span><br><span class="line"><span class="comment">* 4.返回值 double</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* 先完成正常业务，然后再考虑代码健壮性*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">max</span><span class="params">(<span class="type">double</span>[] arr)</span> &#123;</span><br><span class="line"><span class="comment">//        如果数组什么都没有</span></span><br><span class="line">        <span class="keyword">if</span> (arr.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//        求出最大值</span></span><br><span class="line"><span class="comment">//        假设max是最大值，</span></span><br><span class="line">            <span class="type">double</span> <span class="variable">max</span> <span class="operator">=</span> arr[<span class="number">0</span>]; <span class="comment">//</span></span><br><span class="line"><span class="comment">//            遍历数组，如果max小于数组的元素，把值赋给max</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (max &lt; arr[i]) &#123;</span><br><span class="line">                    max = arr[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> max;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/*如果arr数组是个空值就会出现异常</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            把返回类型改为Double类，就可以返回null</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            在主方法中接收一下</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            `Double res = a01.max(arr)`</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">             如果res不等于`null`,就说明有具体的值，就把res输出</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            如果就等于`null`就说明传进去的参数不合理*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>; <span class="comment">//改为Double类可以返回null值</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>数组是引用型类型，可以传值为<code>null</code></p><p>如果传进去的是<code>null</code>，还会报错</p><p>在方法中的if语句中改成<code>arr != null &amp;&amp; arr.length &gt; 0</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread <span class="string">&quot;main&quot;</span> java.lang.NullPointerException</span><br><span class="line">at object.A01.max(HomeWork01.java:<span class="number">38</span>)</span><br><span class="line">at object.HomeWork01.main(HomeWork01.java:<span class="number">15</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-2"><a href="#2-2" class="headerlink" title="2."></a>2.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101205005373.png" alt="image-20230101205005373"></p><h6 id="2-思路-3"><a href="#2-思路-3" class="headerlink" title="2. 思路"></a>2. 思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101205538538.png" alt="image-20230101205538538"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230101210328589.png" alt="image-20230101210328589"></p><h6 id="健壮性"><a href="#健壮性" class="headerlink" title="健壮性"></a>健壮性</h6><h6 id="2-源码–未改"><a href="#2-源码–未改" class="headerlink" title="2.源码–未改"></a>2.源码–未改</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2023年1月1日</span></span><br><span class="line"><span class="comment">* 练习</span></span><br><span class="line"><span class="comment">* 2.编写类A02,定义方法ind,实现查找某字符串数组中的元素查找，并返回索引</span></span><br><span class="line"><span class="comment">如果找不到，返回-1.Homework02.java*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        String str[] = &#123;<span class="string">&quot;110&quot;</span>, <span class="string">&quot;111&quot;</span>, <span class="string">&quot;112&quot;</span>&#125;;</span><br><span class="line">        <span class="type">A02</span> <span class="variable">a02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A02</span>();</span><br><span class="line">        System.out.println(a02.find(str));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">find</span><span class="params">(String[] str)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">&quot;112&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str.equals(str1)) &#123;</span><br><span class="line">                index = i;</span><br><span class="line">                <span class="keyword">return</span> index;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="2-源码–修改后"><a href="#2-源码–修改后" class="headerlink" title="2.源码–修改后"></a>2.源码–修改后</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2023年1月1日</span></span><br><span class="line"><span class="comment">* 练习</span></span><br><span class="line"><span class="comment">* 2.编写类A02,定义方法ind,实现查找某字符串数组中的元素查找，并返回索引</span></span><br><span class="line"><span class="comment">如果找不到，返回-1.Homework02.java*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        String str[] = &#123;<span class="string">&quot;&quot;</span>,<span class="string">&quot;123&quot;</span>,<span class="string">&quot;110&quot;</span>&#125;;</span><br><span class="line">        <span class="type">A02</span> <span class="variable">a02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A02</span>();</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">res</span> <span class="operator">=</span> a02.find(<span class="string">&quot;110&quot;</span>,str);</span><br><span class="line">        <span class="keyword">if</span> (res != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入错误，字符串数组的值为null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">find</span><span class="params">(String findStr, String[] str)</span> &#123;</span><br><span class="line"><span class="comment">//        健壮性</span></span><br><span class="line">        <span class="keyword">if</span> (str != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (findStr.equals(str[i])) &#123;</span><br><span class="line">                    <span class="keyword">return</span> i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/* 日期：2022年11月6日</span></span><br><span class="line"><span class="comment">* 编写类A02,定义方法find,实现查找某字符串是否在字符串数组中，</span></span><br><span class="line"><span class="comment">* 并返回索引如果找不到，返回-1*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork02</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">A02</span> <span class="variable">a02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A02</span>();</span><br><span class="line"><span class="comment">//    定义一个数组</span></span><br><span class="line">    String[] strs = &#123;<span class="string">&quot;jack&quot;</span>,<span class="string">&quot;tom&quot;</span>,<span class="string">&quot;mary&quot;</span>,<span class="string">&quot;milan&quot;</span>&#125;;</span><br><span class="line"><span class="comment">//    定义一个res接收find方法返回的值</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> a02.find(<span class="string">&quot;mary&quot;</span>,strs);</span><br><span class="line"><span class="comment">//    System.out.println(a02.find(&quot;mary&quot;,strs));</span></span><br><span class="line">    System.out.println(<span class="string">&quot;res = &quot;</span> + res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A02</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">find</span><span class="params">(String findStr, String[] strs)</span> &#123;</span><br><span class="line"><span class="comment">//       直接遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; strs.length; i++) &#123;</span><br><span class="line"><span class="comment">//            如果findStr 和 str[i] 相等返回索引（下标）</span></span><br><span class="line">            <span class="keyword">if</span> (findStr.equals(strs[i])) &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        如果没有就返回-1</span></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="健壮性-1"><a href="#健壮性-1" class="headerlink" title="健壮性"></a>健壮性</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/* 日期：2022年11月6日</span></span><br><span class="line"><span class="comment">* 编写类A02,定义方法find,实现查找某字符串是否在字符串数组中，</span></span><br><span class="line"><span class="comment">* 并返回索引如果找不到，返回-1*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork02</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">A02</span> <span class="variable">a02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A02</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//    定义一个数组</span></span><br><span class="line">    String[] strs = &#123;<span class="string">&quot;jack&quot;</span>,<span class="string">&quot;tom&quot;</span>,<span class="string">&quot;mary&quot;</span>,<span class="string">&quot;milan&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    定义一个res接收find方法返回的值</span></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">res</span> <span class="operator">=</span> a02.find(<span class="string">&quot;mary&quot;</span>,strs);</span><br><span class="line"><span class="comment">//    System.out.println(a02.find(&quot;mary&quot;,strs));</span></span><br><span class="line">        <span class="keyword">if</span> ( res != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;res = &quot;</span> + res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入有误不合法null 或 &#123;&#125;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A02</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">find</span><span class="params">(String findStr, String[] strs)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (strs.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//       直接遍历</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; strs.length; i++) &#123;</span><br><span class="line">    <span class="comment">//            如果findStr 和 str[i] 相等返回索引（下标）</span></span><br><span class="line">                <span class="keyword">if</span> (findStr.equals(strs[i])) &#123;</span><br><span class="line">                    <span class="keyword">return</span> i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果没有就返回null</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-1"><a href="#3-1" class="headerlink" title="3."></a>3.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106151433426.png" alt="image-20221106151433426"></p><h6 id="3-思路-1"><a href="#3-思路-1" class="headerlink" title="3. 思路"></a>3. 思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102104036205.png" alt="image-20230102104036205"></p><h6 id="3-代码"><a href="#3-代码" class="headerlink" title="3.代码"></a>3.代码</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102104230779.png" alt="image-20230102104230779"></p><h6 id="main-1"><a href="#main-1" class="headerlink" title="main"></a>main</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102104320819.png" alt="image-20230102104320819"></p><h6 id="3-源码"><a href="#3-源码" class="headerlink" title="3.源码"></a>3.源码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"><span class="comment">/*2023年1月1日</span></span><br><span class="line"><span class="comment">* 练习</span></span><br><span class="line"><span class="comment">* 3.编写类Book,定义方法updatePrice,实现更改某本书的价格，具体：如果价格</span></span><br><span class="line"><span class="comment">&gt;150,则更改为150，如果价格&gt;100，更改为100，否则不变*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Book</span> <span class="variable">book1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Book</span>(<span class="string">&quot;阿里巴巴&quot;</span>, <span class="number">160</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;原价：&quot;</span> + book1.price);</span><br><span class="line">        book1.updatePrice();</span><br><span class="line">        System.out.println(book1.price);</span><br><span class="line">        book1.updatePrice();</span><br><span class="line">        System.out.println(book1.price);</span><br><span class="line">        book1.updatePrice();</span><br><span class="line">        System.out.println(book1.price);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Book</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> price;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Book</span><span class="params">(String name, <span class="type">int</span> price)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updatePrice</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        更改某本书的价格</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.price &gt; <span class="number">150</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.price = <span class="number">150</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">150</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.price &gt; <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.price = <span class="number">100</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">100</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.price;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年11月7日</span></span><br><span class="line"><span class="comment">* 目的：练习第三题*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Homework03A</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Book01</span> <span class="variable">book01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Book01</span>(<span class="string">&quot;marry&quot;</span>,<span class="number">200</span>);</span><br><span class="line"><span class="comment">//        创建</span></span><br><span class="line">        book01.info();<span class="comment">//200</span></span><br><span class="line">        book01.updatePrice(); <span class="comment">// 更新价格</span></span><br><span class="line">        book01.info();<span class="comment">//150</span></span><br><span class="line">        book01.updatePrice();<span class="comment">//</span></span><br><span class="line">        book01.info();<span class="comment">//100</span></span><br><span class="line">        book01.updatePrice();</span><br><span class="line">        book01.info();<span class="comment">//100</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*1.编写 Book类3.编写类Book,定义方法updatePrice,实现更改某本书的价格，</span></span><br><span class="line"><span class="comment">具体：如果价格&gt;150,则更改为150，如果价格&gt;100，更改为100，否则不变</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  2. 属性 price，name</span></span><br><span class="line"><span class="comment">  3. 方法名 updatePrice</span></span><br><span class="line"><span class="comment">  4. 形参 ()</span></span><br><span class="line"><span class="comment">  5. 返回值void</span></span><br><span class="line"><span class="comment">  6.提供一个构造器</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Book01</span> &#123;</span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> price;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    构造器，创建的时候初始化赋值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Book01</span><span class="params">(String name, <span class="type">int</span> price)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    更新成员变量价格方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updatePrice</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.price &gt; <span class="number">150</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.price = <span class="number">150</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.price &gt; <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.price = <span class="number">100</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    显示信息方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;书名：&quot;</span> + <span class="built_in">this</span>.name + <span class="string">&quot;\t&quot;</span> +</span><br><span class="line">                            <span class="string">&quot;价格：&quot;</span> + <span class="built_in">this</span>.price);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221108190646187.png" alt="image-20221108190646187"></p><h6 id="4-思路"><a href="#4-思路" class="headerlink" title="4.思路"></a>4.思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102105852478.png" alt="image-20230102105852478"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102110045148.png" alt="image-20230102110045148"></p><h6 id="4-源码"><a href="#4-源码" class="headerlink" title="4.源码"></a>4.源码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"><span class="comment">/*2023年1月2日</span></span><br><span class="line"><span class="comment">* 作业4*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 4.编写类A03,实现数组的复制功能copyArr,</span></span><br><span class="line"><span class="comment">输入旧数组，返回一个新数组，元素和旧数组一样</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//        测试</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">A03</span> <span class="variable">a03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A03</span>();</span><br><span class="line">        <span class="type">int</span>[] arr1 = a03.copyArr(arr);</span><br><span class="line">        <span class="type">int</span>[] arr2 = a03.copyArr(arr);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">            System.out.print(arr1[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">            System.out.print(arr2[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] copyArr(<span class="type">int</span>[] arr) &#123;</span><br><span class="line">        <span class="type">int</span>[] newArr = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            newArr[i] = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newArr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Homework04</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        定义一个数组</span></span><br><span class="line">        <span class="type">int</span>[] oldArr = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;;</span><br><span class="line"><span class="comment">//        实例化调用方法</span></span><br><span class="line">        <span class="type">A03</span> <span class="variable">a03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A03</span>();</span><br><span class="line">       <span class="type">int</span>[] newArr = a03.copyArr(oldArr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//       遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; oldArr.length; i++) &#123;</span><br><span class="line"><span class="comment">//            输出新数组</span></span><br><span class="line">            System.out.print(newArr[i]);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*编写类A03，实现数组的复制功能copyArr,输入旧数组，返回一个新数组；，元素和旧数组一样</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A03</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] copyArr(<span class="type">int</span>[] oldArr) &#123;</span><br><span class="line"><span class="comment">//        在堆中创建一个长度为oldArr.length的新数组</span></span><br><span class="line">        <span class="type">int</span>[] newArr = <span class="keyword">new</span> <span class="title class_">int</span>[oldArr.length];</span><br><span class="line"></span><br><span class="line"><span class="comment">//        复制数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; oldArr.length; i++) &#123;</span><br><span class="line">            newArr[i] = oldArr[i];</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        返回新数组</span></span><br><span class="line">        <span class="keyword">return</span> newArr;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106151457074.png" alt="image-20221106151457074"></p><h6 id="5-思路"><a href="#5-思路" class="headerlink" title="5.思路"></a>5.思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102111608403.png" alt="image-20230102111608403"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102111626490.png" alt="image-20230102111626490"></p><h6 id="5-源码未改"><a href="#5-源码未改" class="headerlink" title="5.源码未改"></a>5.源码未改</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"><span class="comment">/*2023年1月2日</span></span><br><span class="line"><span class="comment">* 5.定义一个圆类Circle,定义属性：</span></span><br><span class="line"><span class="comment">* 半径，提供显示圆周长功能的方法，提供显示圆</span></span><br><span class="line"><span class="comment">面积的方法</span></span><br><span class="line"><span class="comment">Homework05java*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Circle</span> <span class="variable">circle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Circle</span>(<span class="number">4</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;周长为：&quot;</span> + circle.zhou());</span><br><span class="line">        System.out.println(<span class="string">&quot;面积为：&quot;</span> + circle.area());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> &#123;</span><br><span class="line">    <span class="type">double</span> r;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Circle</span> <span class="params">(<span class="type">double</span> r)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.r = r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">zhou</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3.14</span> * r * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">area</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3.14</span> * (r * r);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="5-源码"><a href="#5-源码" class="headerlink" title="5.源码"></a>5.源码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"><span class="comment">/*2023年1月2日</span></span><br><span class="line"><span class="comment">* 5.定义一个圆类Circle,定义属性：</span></span><br><span class="line"><span class="comment">* 半径，提供显示圆周长功能的方法，提供显示圆</span></span><br><span class="line"><span class="comment">面积的方法</span></span><br><span class="line"><span class="comment">Homework05java*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Circle</span> <span class="variable">circle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Circle</span>(<span class="number">4</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;周长为：&quot;</span> + circle.zhou());</span><br><span class="line">        System.out.println(<span class="string">&quot;面积为：&quot;</span> + circle.area());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> &#123;</span><br><span class="line">    <span class="type">double</span> radius;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Circle</span> <span class="params">(<span class="type">double</span> r)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.radius = r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">zhou</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Math.PI * radius * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">area</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Math.PI * (radius * radius);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Homework05</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Circle</span> <span class="variable">circle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Circle</span>(<span class="number">3</span>);</span><br><span class="line"><span class="comment">//        circle.radius = 5;  //普通传参</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;周长=&quot;</span> + circle.len());</span><br><span class="line">        System.out.println(<span class="string">&quot;面积= &quot;</span> + circle.area());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 定义一个圆类Circle ,定义属性：半径，提供显示圆周长</span></span><br><span class="line"><span class="comment">* 功能的方法，提供显示圆面积的方法*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> &#123;</span><br><span class="line">    <span class="type">double</span> radius;<span class="comment">// 半径</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Circle</span><span class="params">(<span class="type">double</span> radius)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.radius = radius;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Circle</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    周长</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">len</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.radius * <span class="number">2</span> * Math.PI;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    面积</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">area</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">this</span>.radius * <span class="built_in">this</span>.radius) * Math.PI;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="6"><a href="#6" class="headerlink" title="6."></a>6.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106151507663.png" alt="image-20221106151507663"></p><h6 id="6-思路"><a href="#6-思路" class="headerlink" title="6.思路"></a>6.思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102113824271.png" alt="image-20230102113824271"></p><p>main</p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102113846420.png" alt="image-20230102113846420"></p><h6 id="6-源码未改"><a href="#6-源码未改" class="headerlink" title="6.源码未改"></a>6.源码未改</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"><span class="comment">/*2023年1月2日</span></span><br><span class="line"><span class="comment">* 6.编程创建一个Cale计算类，在其中定义2个变量表示两个操作数，</span></span><br><span class="line"><span class="comment">定义四个方法实</span></span><br><span class="line"><span class="comment">现求和、差、乘、商（要求除数为0的话，要提示）并创建两个对象，分别测试</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork06</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Cale</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cale</span>(<span class="number">20</span>, <span class="number">2</span>);</span><br><span class="line">        System.out.println(c1.chu());</span><br><span class="line">        <span class="type">Cale</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cale</span>(<span class="number">20</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//        定义一个包装类接收值</span></span><br><span class="line"><span class="comment">//        如果值为空则提示</span></span><br><span class="line">        <span class="type">Double</span> <span class="variable">num2</span> <span class="operator">=</span> c2.chu();</span><br><span class="line">        <span class="keyword">if</span> (num2 != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(num2);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;您的输入有误，除数不能为0~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cale</span> &#123;</span><br><span class="line">    <span class="type">double</span> num1;</span><br><span class="line">    <span class="type">double</span> num2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Cale</span><span class="params">(<span class="type">double</span> num1, <span class="type">double</span> num2)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.num1 = num1;</span><br><span class="line">        <span class="built_in">this</span>.num2 = num2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">sum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> num1 + num2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">sub</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> num1 - num2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">cheng</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> num1 * num2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">chu</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//    如果除数为0 则返回一个空值</span></span><br><span class="line">        <span class="keyword">if</span> (num2 != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> num1 / num2;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年11月8日</span></span><br><span class="line"><span class="comment">* 目的：编程创建一个Cale计算类，在其中定义两个变量表示两个操数，定义四个方法实现</span></span><br><span class="line"><span class="comment">* 求和、差、乘、商(要求除数为0的话，要提示)并创建两个对象，分别测试*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Homework06</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Cale</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cale</span>(<span class="number">3</span>,<span class="number">0</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;加：&quot;</span> + n1.sum());</span><br><span class="line">        System.out.println(<span class="string">&quot;减：&quot;</span> + n1.minus());</span><br><span class="line">        System.out.println(<span class="string">&quot;乘：&quot;</span> + n1.mul());</span><br><span class="line">        <span class="keyword">if</span> (n1.div() != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;除：&quot;</span> + n1.div());</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;除：0不能作为除数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cale</span> &#123;</span><br><span class="line">    <span class="type">double</span> num1;</span><br><span class="line">    <span class="type">double</span> num2;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Cale</span><span class="params">(<span class="type">double</span> num1, <span class="type">double</span> num2)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.num1 = num1;</span><br><span class="line">        <span class="built_in">this</span>.num2 = num2;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    和</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">sum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> num1 + num2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    减</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">minus</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> num1 - num2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//   乘</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">mul</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> num1 * num2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    除</span></span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">div</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (num2 != <span class="number">0</span> ) &#123;</span><br><span class="line">            <span class="keyword">return</span> num1 / num2;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="7"><a href="#7" class="headerlink" title="7."></a>7.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106151523805.png" alt="image-20221106151523805"></p><h6 id="7-源码"><a href="#7-源码" class="headerlink" title="7.源码"></a>7.源码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2023年1月2日</span></span><br><span class="line"><span class="comment">* 作业7*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork07</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Dog</span> <span class="variable">dog1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="string">&quot;小花&quot;</span>, <span class="string">&quot;白色&quot;</span>, <span class="number">3</span>);</span><br><span class="line">        dog1.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 7.设计一个Dog类，有名字、颜色和年龄属性，定义输出方法show()显示其信息。</span></span><br><span class="line"><span class="comment">并创建对象，进行测试</span></span><br><span class="line"><span class="comment">提示this.属性】HomeworkO7.java*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    String color;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Dog</span><span class="params">(String name, String color, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    显示信息方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;名字为：&quot;</span> + name + <span class="string">&quot;，年龄为：&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;，颜色为：&quot;</span> + color);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*日期：2022年11月8日</span></span><br><span class="line"><span class="comment">* 目的：设计一个Dog类，有名字、颜色和年龄属性，</span></span><br><span class="line"><span class="comment">* 定义输出方法show()显示其信息，并创建对象，进行测试</span></span><br><span class="line"><span class="comment">* 【提示 this.属性)*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Homework07</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Dog02</span> <span class="variable">dog02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog02</span>(<span class="string">&quot;阿里&quot;</span>,<span class="string">&quot;绿色&quot;</span>,<span class="number">34</span>);</span><br><span class="line">        dog02.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog02</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    String color;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Dog02</span><span class="params">(String name, String color, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    输出方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;名字：&quot;</span> + <span class="built_in">this</span>.name + <span class="string">&quot;\t&quot;</span></span><br><span class="line">                            + <span class="string">&quot;颜色：&quot;</span> + <span class="built_in">this</span>.color + <span class="string">&quot;\t&quot;</span></span><br><span class="line">                            + <span class="string">&quot;年龄：&quot;</span> + <span class="built_in">this</span>.age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="x3D-x3D-8-x3D-x3D"><a href="#x3D-x3D-8-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;8.&#x3D;&#x3D;"></a>&#x3D;&#x3D;8.&#x3D;&#x3D;</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106151536528.png" alt="image-20221106151536528"></p><h6 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102120603264.png" alt="image-20230102120603264"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102120710568.png" alt="image-20230102120710568"></p><h6 id="匿名对象"><a href="#匿名对象" class="headerlink" title="匿名对象"></a>匿名对象</h6><blockquote><p>只能用一次</p><p>使用后，就不能使用</p></blockquote><blockquote><p>第一步</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221108215846395.png" alt="image-20221108215846395"></p><blockquote><ol start="2"><li><p>执行后半段 <code>count1()</code></p></li><li><p><code>this.count = 10</code> &#x2F;&#x2F;this指的是当前对象的指的是匿名对象的</p><p>执行完输出之后，因为是匿名对象，没人调用，就销毁了</p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221108220346460.png" alt="image-20221108220346460"></p><blockquote><ol start="4"><li><p><code>Test t1 = new Test();</code></p><p>生成新的对象 count值还是9</p></li><li><p><code>t1.count2</code> &#x2F;&#x2F;执行之后输出t1的count值<code>9</code> 再++ </p><p>此时，count 变成<code>10</code></p></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221108220904820.png" alt="image-20221108220904820"></p><blockquote><ol start="6"><li>再执行一遍<code>t1.count2()</code>，输出<code>10</code>在++ 变成<code>11</code></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221108221301604.png" alt="image-20221108221301604"></p><h6 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"><span class="comment">/*2023年1月2日</span></span><br><span class="line"><span class="comment">* 作业8重要</span></span><br><span class="line"><span class="comment">* 匿名对象*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">9</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">count1</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">           count = <span class="number">10</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;count1=&quot;</span> + count);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">count2</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;count1=&quot;</span> + count++);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">new</span> <span class="title class_">Test</span>().count1();</span><br><span class="line">        <span class="type">Test</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">       t1.count2();</span><br><span class="line">       t1.count2();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        System.out.println(t1.count);</span></span><br><span class="line"><span class="comment">//        System.out.println(t1.count);</span></span><br><span class="line"><span class="comment">//        t1.count2();</span></span><br><span class="line"><span class="comment">//        t1.count2();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="9"><a href="#9" class="headerlink" title="9."></a>9.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106151551974.png" alt="image-20221106151551974"></p><h6 id="源码未改"><a href="#源码未改" class="headerlink" title="源码未改"></a>源码未改</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2023年1月2日</span></span><br><span class="line"><span class="comment">* 作业9</span></span><br><span class="line"><span class="comment">* 9.定义Music类，里面有音乐名name、音乐时长times属性，</span></span><br><span class="line"><span class="comment">* 并有播放play功能和返</span></span><br><span class="line"><span class="comment">回本身属性信息的功能方法getInfo.*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork08</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Music</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Music</span>(<span class="string">&quot;偏爱&quot;</span>, <span class="number">60</span>);</span><br><span class="line">        n1.play();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> n1.getInfo();</span><br><span class="line">        System.out.println(str1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Music</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">double</span> times;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Music</span><span class="params">(String name, <span class="type">double</span> times)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.times = times;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">play</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;播放play功能&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;名字为：&quot;</span> + name + <span class="string">&quot;,时长为：&quot;</span> + times;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年11月8日</span></span><br><span class="line"><span class="comment">* 定义Music类，里面有音乐名name、音乐时长times属性</span></span><br><span class="line"><span class="comment">* 并有播放play功能和返回本身属性信息的功能方法getInfo*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Homework09</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Music</span> <span class="variable">m1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Music</span>(<span class="string">&quot;wawawa&quot;</span>,<span class="number">200</span>);</span><br><span class="line">        m1.play();</span><br><span class="line">        System.out.println(m1.getInfo());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Music</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> times;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Music</span><span class="params">(String name, <span class="type">int</span> times)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.times = times;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    播放方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">play</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;音乐名：&quot;</span> + name +</span><br><span class="line">                            <span class="string">&quot;正在播放中。。。。时长为&quot;</span> + times + <span class="string">&quot;秒&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    播放play功能</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;音乐名&quot;</span> + name + <span class="string">&quot;时长为&quot;</span> + times;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="10"><a href="#10" class="headerlink" title="10."></a>10.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106151622129.png" alt="image-20221106151622129"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221109083541214.png" alt="image-20221109083541214"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221109083706770.png" alt="image-20221109083706770"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221109083746848.png" alt="image-20221109083746848"></p><blockquote><p>101</p><p>100</p><p>101</p><p>101</p></blockquote><h5 id="11"><a href="#11" class="headerlink" title="11."></a>11.</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221109084026919.png" alt="image-20221109084026919"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221109084254097.png" alt="image-20221109084254097"></p><h5 id="12"><a href="#12" class="headerlink" title="12"></a>12</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106151658964.png" alt="image-20221106151658964"></p><h6 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102182940852.png" alt="image-20230102182940852"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102183306194.png" alt="image-20230102183306194"></p><h6 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork12</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">char</span> gender;<span class="comment">//性别</span></span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    String post; <span class="comment">//职位</span></span><br><span class="line">    <span class="type">double</span> salary;<span class="comment">//薪水</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*public Employee(String name, char gender, int age,</span></span><br><span class="line"><span class="comment">                    String post, double salary) &#123;</span></span><br><span class="line"><span class="comment">        this.name = name;</span></span><br><span class="line"><span class="comment">        this.gender = gender;</span></span><br><span class="line"><span class="comment">        this.age = age;</span></span><br><span class="line"><span class="comment">        this.post = post;</span></span><br><span class="line"><span class="comment">        this.salary = salary;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(String post, <span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.post = post;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(String name, <span class="type">char</span> gender, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(String name, <span class="type">char</span> gender, <span class="type">int</span> age,</span></span><br><span class="line"><span class="params">                    String post, <span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(name, gender, age);</span><br><span class="line">        <span class="built_in">this</span>.post = post;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 2022年11月9日</span></span><br><span class="line"><span class="comment">* 创建一个Employee类，</span></span><br><span class="line"><span class="comment">* 属性有(名字，性别，年龄，职位，薪水) ，提供3个构造方法，可以初始化</span></span><br><span class="line"><span class="comment">* (1)（名字，性别，年龄，职位，薪水）</span></span><br><span class="line"><span class="comment">* (2) (名字，性别，年龄)</span></span><br><span class="line"><span class="comment">* (3)(职位，薪水) 要求充分复用构造器*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Homework12</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line">    <span class="comment">//名字，性别，年龄，职位，薪水</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">char</span> gender;<span class="comment">//性别</span></span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    String job;</span><br><span class="line">    <span class="type">double</span> sal;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* 创建一个Employee类，</span></span><br><span class="line"><span class="comment">* 属性有(名字，性别，年龄，职位，薪水) ，提供3个构造方法</span></span><br><span class="line"><span class="comment">* 可以初始化</span></span><br><span class="line"><span class="comment">* (1)（名字，性别，年龄，职位，薪水）</span></span><br><span class="line"><span class="comment">* (2) (名字，性别，年龄)</span></span><br><span class="line"><span class="comment">* (3)(职位，薪水) 要求充分复用构造器*/</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//因为要求可以复用构造器，因此先写属性少的构造器</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//职位，薪水</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(String job, <span class="type">double</span> sal)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.job = job;</span><br><span class="line">        <span class="built_in">this</span>.sal = sal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    名字，性别，年龄</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(String name, <span class="type">char</span> gender,<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(String job, <span class="type">double</span> sal,</span></span><br><span class="line"><span class="params">                    String name, <span class="type">char</span> gender,<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(name,gender,age); <span class="comment">// 使用到 前面的构造器</span></span><br><span class="line">        <span class="built_in">this</span>.job =job;</span><br><span class="line">        <span class="built_in">this</span>.sal = sal;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="13"><a href="#13" class="headerlink" title="13"></a>13</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106151719569.png" alt="image-20221106151719569"></p><h6 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102190434456.png" alt="image-20230102190434456"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102190624900.png" alt="image-20230102190624900"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102190651751.png" alt="image-20230102190651751"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102191130588.png" alt="image-20230102191130588"></p><h6 id="main-2"><a href="#main-2" class="headerlink" title="main"></a>main</h6><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img02/image-20230102191205104.png" alt="image-20230102191205104"></p><h6 id="源码–未改"><a href="#源码–未改" class="headerlink" title="源码–未改"></a>源码–未改</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"><span class="comment">/*2023年1月2日</span></span><br><span class="line"><span class="comment">* 练习</span></span><br><span class="line"><span class="comment">* 13.将对象作为参数传递给方法。Homework13.java</span></span><br><span class="line"><span class="comment">题目要求：</span></span><br><span class="line"><span class="comment">(1)定义一个Circle类，包含一个double型的radius属性代表圆的半径，findArea0方</span></span><br><span class="line"><span class="comment">法返回圆的面积。</span></span><br><span class="line"><span class="comment">(2)定义一个类PassObject,在类中定义一个方法printAreas0,该方法的定义如下：</span></span><br><span class="line"><span class="comment">public void printAreas(Circle c,int times)</span></span><br><span class="line"><span class="comment">/方法签名</span></span><br><span class="line"><span class="comment">(3)在printAreas方法中打印输出1到times;之间的每个整数半径值，以及对应的面积。</span></span><br><span class="line"><span class="comment">例如，times为5，则输出半径1,2,3,4,5，以及对应的圆面积。</span></span><br><span class="line"><span class="comment">(4)在main方法中调用printAreas0方法，调用完毕后输出当前半径值。程序运行结果</span></span><br><span class="line"><span class="comment">如图所示*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork13</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Circle01</span> <span class="variable">circle01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Circle01</span>();</span><br><span class="line">        <span class="type">PassObject</span> <span class="variable">passObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PassObject</span>();</span><br><span class="line">        passObject.printAreas(circle01, <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle01</span> &#123;</span><br><span class="line">    <span class="type">double</span> radius;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">findArea</span><span class="params">(<span class="type">double</span> radius)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> radius * radius * Math.PI;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PassObject</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printAreas</span><span class="params">(Circle01 c,<span class="type">int</span> times)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Radius&quot;</span> + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;Area&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= times; i++) &#123;</span><br><span class="line">            System.out.println(i + <span class="string">&quot;\t\t&quot;</span> + c.findArea(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="源码–改后"><a href="#源码–改后" class="headerlink" title="源码–改后"></a>源码–改后</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"><span class="comment">/*2023年1月2日</span></span><br><span class="line"><span class="comment">* 练习</span></span><br><span class="line"><span class="comment">* 13.将对象作为参数传递给方法。Homework13.java</span></span><br><span class="line"><span class="comment">题目要求：</span></span><br><span class="line"><span class="comment">(1)定义一个Circle类，包含一个double型的radius属性代表圆的半径，findArea0方</span></span><br><span class="line"><span class="comment">法返回圆的面积。</span></span><br><span class="line"><span class="comment">(2)定义一个类PassObject,在类中定义一个方法printAreas0,该方法的定义如下：</span></span><br><span class="line"><span class="comment">public void printAreas(Circle c,int times)</span></span><br><span class="line"><span class="comment">/方法签名</span></span><br><span class="line"><span class="comment">(3)在printAreas方法中打印输出1到times;之间的每个整数半径值，以及对应的面积。</span></span><br><span class="line"><span class="comment">例如，times为5，则输出半径1,2,3,4,5，以及对应的圆面积。</span></span><br><span class="line"><span class="comment">(4)在main方法中调用printAreas0方法，调用完毕后输出当前半径值。程序运行结果</span></span><br><span class="line"><span class="comment">如图所示*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork13</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Circle01</span> <span class="variable">circle01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Circle01</span>();</span><br><span class="line">        <span class="type">PassObject</span> <span class="variable">passObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PassObject</span>();</span><br><span class="line">        passObject.printAres(circle01, <span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle01</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> radius;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">findArea</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> radius * radius * Math.PI;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    添加setRadius方法，修改对象里的半径值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRadius</span><span class="params">(<span class="type">double</span> radius)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.radius = radius;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PassObject</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printAres</span><span class="params">(Circle01 c, <span class="type">int</span> times)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;radius&quot;</span> + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;Area&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= times; i++) &#123;</span><br><span class="line">            c.setRadius(i); <span class="comment">//修改半径值</span></span><br><span class="line">            System.out.println(i + <span class="string">&quot;\t\t&quot;</span> + c.findArea());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> object;</span><br><span class="line"><span class="comment">/*2022年11月9日</span></span><br><span class="line"><span class="comment">* 1. 定义一个Circle类，包含一个double型的radius属性代表圆的半径，——findArea()</span></span><br><span class="line"><span class="comment">*   方法返回圆的面积</span></span><br><span class="line"><span class="comment">* 2. 定义一个类PassObject,在类中定义一个方法printAreas(),改方法的定义如下：</span></span><br><span class="line"><span class="comment">*     public void printAreas(Circle c, int times)</span></span><br><span class="line"><span class="comment">* 3. 在 printAreas方法中打印输出1到times之间的每个整数半径值，以及对应的面积。</span></span><br><span class="line"><span class="comment">*     例如，times为5，则输出半径为1,2,3,4,5，以及对应圆面积</span></span><br><span class="line"><span class="comment">* 4. 在main方法中调用printAreas()方法，调用完毕后输出当前半径值。</span></span><br><span class="line"><span class="comment">*    程序运行结果如图所示</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Homework13</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">PassObject</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PassObject</span>();</span><br><span class="line">        <span class="type">Circle01</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Circle01</span>();</span><br><span class="line">        p1.printAreas(c1,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义一个Circle类，包含一个double型的radius属性代表圆的半径，——findArea()</span></span><br><span class="line"><span class="comment"> *   方法返回圆的面积*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle01</span> &#123;</span><br><span class="line">    <span class="type">double</span> radius;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Circle01</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Circle01</span><span class="params">(<span class="type">double</span> radius)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.radius = radius;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    寻找面积的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">findArea</span><span class="params">()</span> &#123;<span class="comment">//返回圆的面积</span></span><br><span class="line">        <span class="keyword">return</span> radius * radius * Math.PI;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRadius</span><span class="params">(<span class="type">double</span> radius)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.radius = radius;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2. 定义一个类PassObject,在类中定义一个方法printAreas(),改方法的定义如下：</span></span><br><span class="line"><span class="comment"> *     public void printAreas(Circle c, int times)*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PassObject</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*3. 在 printAreas方法中打印输出1到times之间的每个整数半径值，</span></span><br><span class="line"><span class="comment">            以及对应的面积。</span></span><br><span class="line"><span class="comment">     *     例如，times为5，则输出半径为1,2,3,4,5，以及对应圆面积*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printAreas</span><span class="params">(Circle01 c, <span class="type">int</span> times)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Radius\tArea&quot;</span> );</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= times; i++) &#123;</span><br><span class="line"><span class="comment">//            调用方法</span></span><br><span class="line">            c.setRadius(i);<span class="comment">//设置半径</span></span><br><span class="line">            System.out.println((<span class="type">double</span>)i + <span class="string">&quot;    \t&quot;</span> + c.findArea()); <span class="comment">//输出面积</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="14-扩展题-moraGame"><a href="#14-扩展题-moraGame" class="headerlink" title="14.扩展题 (moraGame)"></a>14.扩展题 (moraGame)</h5><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221106151734825.png" alt="image-20221106151734825"></p><h6 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">comGuessNum = r.nextInt(<span class="number">3</span>); <span class="comment">// 方法 返回0-2的随机数</span></span><br></pre></td></tr></table></figure><h6 id="源码-2"><a href="#源码-2" class="headerlink" title="源码"></a>源码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.person_.homework;</span><br><span class="line"><span class="comment">/*2023年1月6日</span></span><br><span class="line"><span class="comment">* 猜拳*/</span></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HomeWork14</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        创建一个玩家对象</span></span><br><span class="line">        <span class="type">Tom</span> <span class="variable">tom</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Tom</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//      接收用户的拳</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        定义一个二维数组接收每局情况</span></span><br><span class="line">        <span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//        定义一个数组接收输赢情况</span></span><br><span class="line">        String[] arrWin = <span class="keyword">new</span> <span class="title class_">String</span>[arr.length];</span><br><span class="line"></span><br><span class="line"><span class="comment">//        定义一个数接收你赢的次数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">winGuessNum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;你输入你要出的拳(0-拳头,1-剪刀,2-布)&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">tomGuessNum</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        玩家出拳</span></span><br><span class="line">            tom.tomGuessNum(tomGuessNum);</span><br><span class="line"><span class="comment">//        电脑出拳</span></span><br><span class="line">            tom.comGuessNum();</span><br><span class="line"><span class="comment">//        比较</span></span><br><span class="line">            tom.vsCompare();</span><br><span class="line"></span><br><span class="line"><span class="comment">//            输出情况</span></span><br><span class="line">            System.out.println(<span class="string">&quot;==============================&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;局数\t\t玩家出拳\t\t电脑出拳\t\t输赢情况&quot;</span> );</span><br><span class="line">            System.out.println((i+<span class="number">1</span>) + <span class="string">&quot;\t\t&quot;</span> + tomGuessNum + <span class="string">&quot;\t\t\t&quot;</span> + tom.comGuessNum +</span><br><span class="line">                               <span class="string">&quot;\t\t\t&quot;</span> + tom.vsCompare());</span><br><span class="line">            System.out.println(<span class="string">&quot;==============================&quot;</span>);</span><br><span class="line"><span class="comment">//            数组改值</span></span><br><span class="line">            arr[i][<span class="number">0</span>] = i + <span class="number">1</span>;</span><br><span class="line">            arr[i][<span class="number">1</span>] = tomGuessNum;</span><br><span class="line">            arr[i][<span class="number">2</span>] = tom.comGuessNum;</span><br><span class="line">            arrWin[i] = tom.vsCompare();</span><br><span class="line"></span><br><span class="line"><span class="comment">//            如果你赢了次数就加1</span></span><br><span class="line"><span class="comment">//            int count = 0;</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;你赢了&quot;</span>.equals(tom.vsCompare())) &#123;</span><br><span class="line"><span class="comment">//                count++;</span></span><br><span class="line"><span class="comment">//                winGuessNum = count;</span></span><br><span class="line">                winGuessNum++;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        汇总</span></span><br><span class="line">        System.out.println(<span class="string">&quot;汇总：&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;局数\t玩家出拳\t电脑出拳\t输赢情况&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.println(arr[i][<span class="number">0</span>] + <span class="string">&quot;\t\t&quot;</span> + arr[i][<span class="number">1</span>] + <span class="string">&quot;\t\t&quot;</span> +</span><br><span class="line">                    arr[i][<span class="number">2</span>] + <span class="string">&quot;\t\t&quot;</span> + arrWin[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        你赢的次数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;你赢的次数：&quot;</span> + winGuessNum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tom</span> &#123;</span><br><span class="line"><span class="comment">//    玩家出拳</span></span><br><span class="line">    <span class="type">int</span> tomGuessNum;</span><br><span class="line"><span class="comment">//    电脑出拳</span></span><br><span class="line">    <span class="type">int</span> comGuessNum;</span><br><span class="line"><span class="comment">//    玩家赢的次数;</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">winGuessNum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//    电脑随机生成拆数字的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">comGuessNum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        comGuessNum = random.nextInt(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">return</span> comGuessNum;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    玩家出拳的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">tomGuessNum</span><span class="params">(<span class="type">int</span> tomGuessNum)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.tomGuessNum = tomGuessNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    得到玩家出拳的值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTomGuessNum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.tomGuessNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    比较方法</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">vsCompare</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (tomGuessNum == <span class="number">0</span> &amp;&amp; comGuessNum == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;你赢了&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (tomGuessNum == <span class="number">1</span> &amp;&amp; comGuessNum == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;你赢了&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (tomGuessNum == <span class="number">2</span> &amp;&amp; comGuessNum == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;你赢了&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (tomGuessNum == comGuessNum) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;平局！&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;你输了&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*思路：</span></span><br><span class="line"><span class="comment">* 创建tom类，先创建电脑生成随机数的方法，在创建人接收的数的方法，</span></span><br><span class="line"><span class="comment">* 在创建比较的方法，返回字符串，</span></span><br><span class="line"><span class="comment">* 测试类中，循环三次，定义键盘输入，调用电脑出拳方法，比较方法，</span></span><br><span class="line"><span class="comment">* 用二维数组接收记录每一局的情况，用一维数组接收输赢的情况，最后打印数组</span></span><br><span class="line"><span class="comment">* 用winGuessNum计数，判断赢了++*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="x3D-x3D-13-匿名对象-x3D-x3D-只能使用一次"><a href="#x3D-x3D-13-匿名对象-x3D-x3D-只能使用一次" class="headerlink" title="&#x3D;&#x3D;13.匿名对象&#x3D;&#x3D;只能使用一次"></a>&#x3D;&#x3D;13.匿名对象&#x3D;&#x3D;只能使用一次</h4><blockquote><p>上一节第8题</p></blockquote><h2 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h2><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="ctrl-d-复制当前行"><a href="#ctrl-d-复制当前行" class="headerlink" title="ctrl + d 复制当前行"></a>ctrl + d 复制当前行</h4><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130223051847.png" alt="image-20221130223051847"></p><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130223209843.png" alt="image-20221130223209843"></p><h3 id="在path中新建"><a href="#在path中新建" class="headerlink" title="在path中新建"></a>在path中新建</h3><p><img src="https://cdn.jsdelivr.net/gh/Cuiyq110/images/img/image-20221130223323553.png" alt="image-20221130223323553"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/18/hello-world/"/>
      <url>/2023/01/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
